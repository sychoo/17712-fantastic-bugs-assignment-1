/* @generated */
digraph cfg {
"org.junit.tests.experimental.theories.AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail():void.e6cefeb3cd9b8ca30e449c60aaa4db5d_1" [label="1: Start void AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail()\nFormals:  this:org.junit.tests.experimental.theories.AssumingInTheoriesTest*\nLocals:  $irvar0:void result:org.junit.runner.Result*\nAnnotation: <_org.junit.Test> void AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail()() \n  " color=yellow style=filled]
	

	 "org.junit.tests.experimental.theories.AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail():void.e6cefeb3cd9b8ca30e449c60aaa4db5d_1" -> "org.junit.tests.experimental.theories.AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail():void.e6cefeb3cd9b8ca30e449c60aaa4db5d_4" ;
"org.junit.tests.experimental.theories.AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail():void.e6cefeb3cd9b8ca30e449c60aaa4db5d_2" [label="2: Exit void AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail() \n  " color=yellow style=filled]
	

"org.junit.tests.experimental.theories.AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail():void.e6cefeb3cd9b8ca30e449c60aaa4db5d_3" [label="3:  exceptions sink \n   NULLIFY(&result); [line 26]\n  NULLIFY(&$irvar0); [line 26]\n  EXIT_SCOPE(result,$irvar0); [line 26]\n  APPLY_ABSTRACTION; [line 26]\n " shape="box"]
	

	 "org.junit.tests.experimental.theories.AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail():void.e6cefeb3cd9b8ca30e449c60aaa4db5d_3" -> "org.junit.tests.experimental.theories.AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail():void.e6cefeb3cd9b8ca30e449c60aaa4db5d_2" ;
"org.junit.tests.experimental.theories.AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail():void.e6cefeb3cd9b8ca30e449c60aaa4db5d_4" [label="4:  Call Result TheoryTestUtils.runTheoryClass(Class) \n   n$0=_fun_Result TheoryTestUtils.runTheoryClass(Class)(org.junit.tests.experimental.theories.AssumingInTheoriesTest$TheoryWithNoUnassumedParameters:java.lang.Object*) [line 24]\n  *&result:org.junit.runner.Result*=n$0 [line 24]\n  EXIT_SCOPE(n$0); [line 24]\n " shape="box"]
	

	 "org.junit.tests.experimental.theories.AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail():void.e6cefeb3cd9b8ca30e449c60aaa4db5d_4" -> "org.junit.tests.experimental.theories.AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail():void.e6cefeb3cd9b8ca30e449c60aaa4db5d_5" ;
	 "org.junit.tests.experimental.theories.AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail():void.e6cefeb3cd9b8ca30e449c60aaa4db5d_4" -> "org.junit.tests.experimental.theories.AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail():void.e6cefeb3cd9b8ca30e449c60aaa4db5d_3" [color="red" ];
"org.junit.tests.experimental.theories.AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail():void.e6cefeb3cd9b8ca30e449c60aaa4db5d_5" [label="5:  Call int Result.getFailureCount() \n   n$1=*&result:org.junit.runner.Result* [line 25]\n  _=*n$1:org.junit.runner.Result*(root org.junit.runner.Result) [line 25]\n  n$3=_fun_int Result.getFailureCount()(n$1:org.junit.runner.Result*) virtual [line 25]\n  *&$irvar0:int=n$3 [line 25]\n  NULLIFY(&result); [line 25]\n  EXIT_SCOPE(_,n$1,n$3,result); [line 25]\n " shape="box"]
	

	 "org.junit.tests.experimental.theories.AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail():void.e6cefeb3cd9b8ca30e449c60aaa4db5d_5" -> "org.junit.tests.experimental.theories.AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail():void.e6cefeb3cd9b8ca30e449c60aaa4db5d_6" ;
	 "org.junit.tests.experimental.theories.AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail():void.e6cefeb3cd9b8ca30e449c60aaa4db5d_5" -> "org.junit.tests.experimental.theories.AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail():void.e6cefeb3cd9b8ca30e449c60aaa4db5d_3" [color="red" ];
"org.junit.tests.experimental.theories.AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail():void.e6cefeb3cd9b8ca30e449c60aaa4db5d_6" [label="6:  Call void Assert.assertEquals(long,long) \n   n$4=*&$irvar0:int [line 25]\n  n$5=_fun_void Assert.assertEquals(long,long)(1:long,(long)n$4:long) [line 25]\n  NULLIFY(&$irvar0); [line 25]\n  EXIT_SCOPE(n$4,n$5,$irvar0); [line 25]\n " shape="box"]
	

	 "org.junit.tests.experimental.theories.AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail():void.e6cefeb3cd9b8ca30e449c60aaa4db5d_6" -> "org.junit.tests.experimental.theories.AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail():void.e6cefeb3cd9b8ca30e449c60aaa4db5d_7" ;
	 "org.junit.tests.experimental.theories.AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail():void.e6cefeb3cd9b8ca30e449c60aaa4db5d_6" -> "org.junit.tests.experimental.theories.AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail():void.e6cefeb3cd9b8ca30e449c60aaa4db5d_3" [color="red" ];
"org.junit.tests.experimental.theories.AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail():void.e6cefeb3cd9b8ca30e449c60aaa4db5d_7" [label="7:  method_body \n   APPLY_ABSTRACTION; [line 26]\n " shape="box"]
	

	 "org.junit.tests.experimental.theories.AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail():void.e6cefeb3cd9b8ca30e449c60aaa4db5d_7" -> "org.junit.tests.experimental.theories.AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail():void.e6cefeb3cd9b8ca30e449c60aaa4db5d_2" ;
	 "org.junit.tests.experimental.theories.AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail():void.e6cefeb3cd9b8ca30e449c60aaa4db5d_7" -> "org.junit.tests.experimental.theories.AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail():void.e6cefeb3cd9b8ca30e449c60aaa4db5d_3" [color="red" ];
}
