/* @generated */
digraph cfg {
"junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_1" [label="1: Start void AssertTest.testAssertNullNotEqualsNull()\nFormals:  this:junit.tests.framework.AssertTest*\nLocals:  $irvar1:void CatchVar14:void $irvar0:void e:junit.framework.AssertionFailedError* \n  " color=yellow style=filled]
	

	 "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_1" -> "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_4" ;
"junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_2" [label="2: Exit void AssertTest.testAssertNullNotEqualsNull() \n  " color=yellow style=filled]
	

"junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_3" [label="3:  exceptions sink \n   NULLIFY(&CatchVar14); [line 97]\n  NULLIFY(&$irvar1); [line 97]\n  NULLIFY(&e); [line 97]\n  EXIT_SCOPE(n$12,CatchVar14,$irvar1,e); [line 97]\n  APPLY_ABSTRACTION; [line 97]\n " shape="box"]
	

	 "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_3" -> "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_2" ;
"junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_4" [label="4:  Call Object.<init>() \n   n$0=_fun___new(sizeof(t=java.lang.Object):java.lang.Object*) [line 91]\n  n$1=_fun_Object.<init>()(n$0:java.lang.Object*) [line 91]\n  *&$irvar0:java.lang.Object*=n$0 [line 91]\n  EXIT_SCOPE(n$0,n$1); [line 91]\n " shape="box"]
	

	 "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_4" -> "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_5" ;
	 "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_4" -> "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_14" [color="red" ];
"junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_5" [label="5:  Call void TestCase.assertEquals(Object,Object) \n   n$2=*&$irvar0:java.lang.Object* [line 91]\n  n$3=_fun_void TestCase.assertEquals(Object,Object)(null:java.lang.Object*,n$2:java.lang.Object*) [line 91]\n  NULLIFY(&$irvar0); [line 91]\n  EXIT_SCOPE(n$2,n$3,$irvar0); [line 91]\n " shape="box"]
	

	 "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_5" -> "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_10" ;
	 "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_5" -> "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_14" [color="red" ];
"junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_6" [label="6:  method_body \n   n$4=*&CatchVar14:java.lang.Object* [line 92]\n  *&e:java.lang.Object*=n$4 [line 92]\n  NULLIFY(&CatchVar14); [line 92]\n  EXIT_SCOPE(n$4,CatchVar14); [line 92]\n " shape="box"]
	

	 "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_6" -> "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_7" ;
	 "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_6" -> "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_3" [color="red" ];
"junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_7" [label="7:  Call String AssertionFailedError.getMessage() \n   n$5=*&e:java.lang.Object* [line 93]\n  _=*n$5:java.lang.Object*(root java.lang.Object) [line 93]\n  n$7=_fun_String AssertionFailedError.getMessage()(n$5:java.lang.Object*) virtual [line 93]\n  *&$irvar1:java.lang.String*=n$7 [line 93]\n  NULLIFY(&e); [line 93]\n  EXIT_SCOPE(_,n$5,n$7,e); [line 93]\n " shape="box"]
	

	 "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_7" -> "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_8" ;
	 "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_7" -> "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_3" [color="red" ];
"junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_8" [label="8:  Call void TestCase.assertNotNull(Object) \n   n$8=*&$irvar1:java.lang.String* [line 93]\n  n$9=_fun_void TestCase.assertNotNull(Object)(n$8:java.lang.String*) [line 93]\n  NULLIFY(&$irvar1); [line 93]\n  EXIT_SCOPE(n$8,n$9,$irvar1); [line 93]\n " shape="box"]
	

	 "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_8" -> "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_9" ;
	 "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_8" -> "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_3" [color="red" ];
"junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_9" [label="9:  method_body \n   APPLY_ABSTRACTION; [line 94]\n " shape="box"]
	

	 "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_9" -> "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_2" ;
	 "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_9" -> "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_3" [color="red" ];
"junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_10" [label="10:  Call void TestCase.fail() \n   n$10=_fun_void TestCase.fail()() [line 96]\n  EXIT_SCOPE(n$10); [line 96]\n " shape="box"]
	

	 "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_10" -> "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_11" ;
	 "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_10" -> "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_3" [color="red" ];
"junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_11" [label="11:  method_body \n   APPLY_ABSTRACTION; [line 97]\n " shape="box"]
	

	 "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_11" -> "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_2" ;
	 "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_11" -> "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_3" [color="red" ];
"junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_12" [label="12: Prune (true branch, switch) \n   n$13=_fun___instanceof(n$12:junit.framework.AssertionFailedError*,sizeof(t=junit.framework.AssertionFailedError):void) [line 92]\n  PRUNE(n$13, true); [line 92]\n  *&CatchVar14:void=n$12 [line 92]\n  EXIT_SCOPE(n$12,n$13); [line 92]\n " shape="invhouse"]
	

	 "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_12" -> "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_6" ;
	 "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_12" -> "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_3" [color="red" ];
"junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_13" [label="13: Prune (false branch, switch) \n   n$13=_fun___instanceof(n$12:junit.framework.AssertionFailedError*,sizeof(t=junit.framework.AssertionFailedError):void) [line 92]\n  PRUNE(!n$13, false); [line 92]\n  *&return:void=EXN n$12 [line 92]\n  EXIT_SCOPE(n$12,n$13); [line 92]\n " shape="invhouse"]
	

	 "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_13" -> "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_3" ;
	 "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_13" -> "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_3" [color="red" ];
"junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_14" [label="14:  exception handler \n   n$11=*&return:void [line 92]\n  *&return:void=null [line 92]\n  n$12=_fun___unwrap_exception(n$11:void) [line 92]\n  NULLIFY(&$irvar0); [line 92]\n  EXIT_SCOPE(n$11,$irvar0); [line 92]\n " shape="box"]
	

	 "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_14" -> "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_12" ;
	 "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_14" -> "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_13" ;
	 "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_14" -> "junit.tests.framework.AssertTest.testAssertNullNotEqualsNull():void.021fd0fdcb7cfe83093d0edb0182a1cb_3" [color="red" ];
}
