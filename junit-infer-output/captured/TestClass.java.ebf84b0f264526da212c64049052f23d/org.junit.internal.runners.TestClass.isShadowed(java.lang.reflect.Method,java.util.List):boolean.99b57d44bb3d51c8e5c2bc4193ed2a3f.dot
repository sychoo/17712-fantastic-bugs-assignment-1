/* @generated */
digraph cfg {
"org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_1" [label="1: Start boolean TestClass.isShadowed(Method,List)\nFormals:  this:org.junit.internal.runners.TestClass* method:java.lang.reflect.Method* results:java.util.List*\nLocals:  $irvar2:void $irvar1:void $irvar0:void $bcvar3:void each:java.lang.reflect.Method* \n  " color=yellow style=filled]
	

	 "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_1" -> "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_4" ;
"org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_2" [label="2: Exit boolean TestClass.isShadowed(Method,List) \n  " color=yellow style=filled]
	

"org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_3" [label="3:  exceptions sink \n   NULLIFY(&$bcvar3); [line 69]\n  NULLIFY(&each); [line 69]\n  NULLIFY(&$irvar0); [line 69]\n  NULLIFY(&$irvar1); [line 69]\n  NULLIFY(&$irvar2); [line 69]\n  EXIT_SCOPE($bcvar3,each,$irvar0,$irvar1,$irvar2); [line 69]\n  APPLY_ABSTRACTION; [line 69]\n " shape="box"]
	

	 "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_3" -> "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_2" ;
"org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_4" [label="4:  Call Iterator List.iterator() \n   n$0=*&results:java.util.List* [line 64]\n  _=*n$0:java.util.List*(root java.util.List) [line 64]\n  n$2=_fun_Iterator List.iterator()(n$0:java.util.List*) interface virtual [line 64]\n  *&$bcvar3:java.util.Iterator*=n$2 [line 64]\n  NULLIFY(&results); [line 64]\n  EXIT_SCOPE(_,n$0,n$2,results); [line 64]\n  APPLY_ABSTRACTION; [line 64]\n " shape="box"]
	

	 "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_4" -> "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_5" ;
	 "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_4" -> "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_3" [color="red" ];
"org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_5" [label="5:  Call boolean Iterator.hasNext() \n   n$3=*&$bcvar3:java.util.Iterator* [line 64]\n  _=*n$3:java.util.Iterator*(root java.util.Iterator) [line 64]\n  n$5=_fun_boolean Iterator.hasNext()(n$3:java.util.Iterator*) interface virtual [line 64]\n  *&$irvar0:_Bool=n$5 [line 64]\n  EXIT_SCOPE(_,n$3,n$5); [line 64]\n " shape="box"]
	

	 "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_5" -> "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_8" ;
	 "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_5" -> "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_3" [color="red" ];
"org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_6" [label="6: Prune (true branch, if) \n   n$6=*&$irvar0:_Bool [line 64]\n  PRUNE(!(n$6 == 0), true); [line 64]\n  NULLIFY(&$irvar0); [line 64]\n  EXIT_SCOPE(n$6,$irvar0); [line 64]\n " shape="invhouse"]
	

	 "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_6" -> "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_9" ;
	 "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_6" -> "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_3" [color="red" ];
"org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_7" [label="7: Prune (false branch, if) \n   n$6=*&$irvar0:_Bool [line 64]\n  PRUNE((n$6 == 0), false); [line 64]\n  NULLIFY(&$bcvar3); [line 64]\n  NULLIFY(&$irvar0); [line 64]\n  EXIT_SCOPE(n$6,$bcvar3,$irvar0); [line 64]\n " shape="invhouse"]
	

	 "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_7" -> "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_16" ;
	 "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_7" -> "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_3" [color="red" ];
"org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_8" [label="8: + \n  " ]
	

	 "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_8" -> "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_6" ;
	 "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_8" -> "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_7" ;
"org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_9" [label="9:  Call Object Iterator.next() \n   n$7=*&$bcvar3:java.util.Iterator* [line 64]\n  _=*n$7:java.util.Iterator*(root java.util.Iterator) [line 64]\n  n$9=_fun_Object Iterator.next()(n$7:java.util.Iterator*) interface virtual [line 64]\n  *&$irvar1:java.lang.Object*=n$9 [line 64]\n  EXIT_SCOPE(_,n$7,n$9); [line 64]\n " shape="box"]
	

	 "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_9" -> "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_10" ;
	 "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_9" -> "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_3" [color="red" ];
"org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_10" [label="10:  method_body \n   n$10=*&$irvar1:java.lang.Object* [line 64]\n  n$11=_fun___cast(n$10:java.lang.Object*,sizeof(t=java.lang.reflect.Method;sub_t=( sub )(cast)):void) [line 64]\n  *&each:java.lang.reflect.Method*=n$11 [line 64]\n  NULLIFY(&$irvar1); [line 64]\n  EXIT_SCOPE(n$10,n$11,$irvar1); [line 64]\n " shape="box"]
	

	 "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_10" -> "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_11" ;
	 "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_10" -> "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_3" [color="red" ];
"org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_11" [label="11:  Call boolean TestClass.isShadowed(Method,Method) \n   n$12=*&this:org.junit.internal.runners.TestClass* [line 65]\n  n$13=*&method:java.lang.reflect.Method* [line 65]\n  n$14=*&each:java.lang.reflect.Method* [line 65]\n  n$15=_fun_boolean TestClass.isShadowed(Method,Method)(n$12:org.junit.internal.runners.TestClass*,n$13:java.lang.reflect.Method*,n$14:java.lang.reflect.Method*) [line 65]\n  *&$irvar2:_Bool=n$15 [line 65]\n  NULLIFY(&each); [line 65]\n  EXIT_SCOPE(n$12,n$13,n$14,n$15,each); [line 65]\n " shape="box"]
	

	 "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_11" -> "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_14" ;
	 "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_11" -> "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_3" [color="red" ];
"org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_12" [label="12: Prune (true branch, if) \n   n$16=*&$irvar2:_Bool [line 65]\n  PRUNE(!(n$16 == 0), true); [line 65]\n  NULLIFY(&$bcvar3); [line 65]\n  NULLIFY(&$irvar2); [line 65]\n  EXIT_SCOPE(n$16,$bcvar3,$irvar2); [line 65]\n " shape="invhouse"]
	

	 "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_12" -> "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_15" ;
	 "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_12" -> "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_3" [color="red" ];
"org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_13" [label="13: Prune (false branch, if) \n   n$16=*&$irvar2:_Bool [line 65]\n  PRUNE((n$16 == 0), false); [line 65]\n  NULLIFY(&$irvar2); [line 65]\n  EXIT_SCOPE(n$16,$irvar2); [line 65]\n  APPLY_ABSTRACTION; [line 65]\n " shape="invhouse"]
	

	 "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_13" -> "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_5" ;
	 "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_13" -> "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_3" [color="red" ];
"org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_14" [label="14: + \n  " ]
	

	 "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_14" -> "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_12" ;
	 "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_14" -> "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_13" ;
"org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_15" [label="15:  method_body \n   *&return:_Bool=1 [line 66]\n  APPLY_ABSTRACTION; [line 66]\n " shape="box"]
	

	 "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_15" -> "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_2" ;
	 "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_15" -> "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_3" [color="red" ];
"org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_16" [label="16:  method_body \n   *&return:_Bool=0 [line 69]\n  APPLY_ABSTRACTION; [line 69]\n " shape="box"]
	

	 "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_16" -> "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_2" ;
	 "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_16" -> "org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method,java.util.List):boolean.99b57d44bb3d51c8e5c2bc4193ed2a3f_3" [color="red" ];
}
