/* @generated */
digraph cfg {
"org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_1" [label="1: Start void AssumptionViolatedExceptionTest.assertCanBeSerialized(AssumptionViolatedException)\nFormals:  this:org.junit.AssumptionViolatedExceptionTest* exception:org.junit.AssumptionViolatedException*\nLocals:  $irvar1:void $irvar0:void fromStream:org.junit.AssumptionViolatedException* ois:java.io.ObjectInputStream* bais:java.io.ByteArrayInputStream* oos:java.io.ObjectOutputStream* baos:java.io.ByteArrayOutputStream* \n  " color=yellow style=filled]
	

	 "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_1" -> "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_4" ;
"org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_2" [label="2: Exit void AssumptionViolatedExceptionTest.assertCanBeSerialized(AssumptionViolatedException) \n  " color=yellow style=filled]
	

"org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_3" [label="3:  exceptions sink \n   NULLIFY(&ois); [line 165]\n  NULLIFY(&fromStream); [line 165]\n  NULLIFY(&bais); [line 165]\n  NULLIFY(&baos); [line 165]\n  NULLIFY(&$irvar0); [line 165]\n  NULLIFY(&oos); [line 165]\n  NULLIFY(&$irvar1); [line 165]\n  EXIT_SCOPE(ois,fromStream,bais,baos,$irvar0,oos,$irvar1); [line 165]\n  APPLY_ABSTRACTION; [line 165]\n " shape="box"]
	

	 "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_3" -> "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_2" ;
"org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_4" [label="4:  Call ByteArrayOutputStream.<init>() \n   n$0=_fun___new(sizeof(t=java.io.ByteArrayOutputStream):java.io.ByteArrayOutputStream*) [line 156]\n  n$1=_fun_ByteArrayOutputStream.<init>()(n$0:java.io.ByteArrayOutputStream*) [line 156]\n  *&baos:java.io.ByteArrayOutputStream*=n$0 [line 156]\n  EXIT_SCOPE(n$0,n$1); [line 156]\n " shape="box"]
	

	 "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_4" -> "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_5" ;
	 "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_4" -> "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_3" [color="red" ];
"org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_5" [label="5:  Call ObjectOutputStream.<init>(OutputStream) \n   n$2=_fun___new(sizeof(t=java.io.ObjectOutputStream):java.io.ObjectOutputStream*) [line 157]\n  n$3=*&baos:java.io.ByteArrayOutputStream* [line 157]\n  n$4=_fun_ObjectOutputStream.<init>(OutputStream)(n$2:java.io.ObjectOutputStream*,n$3:java.io.ByteArrayOutputStream*) [line 157]\n  *&oos:java.io.ObjectOutputStream*=n$2 [line 157]\n  EXIT_SCOPE(n$2,n$3,n$4); [line 157]\n " shape="box"]
	

	 "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_5" -> "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_6" ;
	 "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_5" -> "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_3" [color="red" ];
"org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_6" [label="6:  Call void ObjectOutputStream.writeObject(Object) \n   n$5=*&oos:java.io.ObjectOutputStream* [line 158]\n  _=*n$5:java.io.ObjectOutputStream*(root java.io.ObjectOutputStream) [line 158]\n  n$7=*&exception:org.junit.AssumptionViolatedException* [line 158]\n  n$8=_fun_void ObjectOutputStream.writeObject(Object)(n$5:java.io.ObjectOutputStream*,n$7:org.junit.AssumptionViolatedException*) virtual [line 158]\n  NULLIFY(&oos); [line 158]\n  EXIT_SCOPE(_,n$5,n$7,n$8,oos); [line 158]\n " shape="box"]
	

	 "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_6" -> "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_7" ;
	 "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_6" -> "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_3" [color="red" ];
"org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_7" [label="7:  Call byte[] ByteArrayOutputStream.toByteArray() \n   n$9=*&baos:java.io.ByteArrayOutputStream* [line 160]\n  _=*n$9:java.io.ByteArrayOutputStream*(root java.io.ByteArrayOutputStream) [line 160]\n  n$11=_fun_byte[] ByteArrayOutputStream.toByteArray()(n$9:java.io.ByteArrayOutputStream*) virtual [line 160]\n  *&$irvar0:signed char[_*_](*)=n$11 [line 160]\n  NULLIFY(&baos); [line 160]\n  EXIT_SCOPE(_,n$9,n$11,baos); [line 160]\n " shape="box"]
	

	 "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_7" -> "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_8" ;
	 "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_7" -> "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_3" [color="red" ];
"org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_8" [label="8:  Call ByteArrayInputStream.<init>(byte[]) \n   n$12=_fun___new(sizeof(t=java.io.ByteArrayInputStream):java.io.ByteArrayInputStream*) [line 160]\n  n$13=*&$irvar0:signed char[_*_](*) [line 160]\n  n$14=_fun_ByteArrayInputStream.<init>(byte[])(n$12:java.io.ByteArrayInputStream*,n$13:signed char[_*_](*)) [line 160]\n  *&bais:java.io.ByteArrayInputStream*=n$12 [line 160]\n  NULLIFY(&$irvar0); [line 160]\n  EXIT_SCOPE(n$12,n$13,n$14,$irvar0); [line 160]\n " shape="box"]
	

	 "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_8" -> "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_9" ;
	 "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_8" -> "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_3" [color="red" ];
"org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_9" [label="9:  Call ObjectInputStream.<init>(InputStream) \n   n$15=_fun___new(sizeof(t=java.io.ObjectInputStream):java.io.ObjectInputStream*) [line 161]\n  n$16=*&bais:java.io.ByteArrayInputStream* [line 161]\n  n$17=_fun_ObjectInputStream.<init>(InputStream)(n$15:java.io.ObjectInputStream*,n$16:java.io.ByteArrayInputStream*) [line 161]\n  *&ois:java.io.ObjectInputStream*=n$15 [line 161]\n  NULLIFY(&bais); [line 161]\n  EXIT_SCOPE(n$15,n$16,n$17,bais); [line 161]\n " shape="box"]
	

	 "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_9" -> "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_10" ;
	 "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_9" -> "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_3" [color="red" ];
"org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_10" [label="10:  Call Object ObjectInputStream.readObject() \n   n$18=*&ois:java.io.ObjectInputStream* [line 162]\n  _=*n$18:java.io.ObjectInputStream*(root java.io.ObjectInputStream) [line 162]\n  n$20=_fun_Object ObjectInputStream.readObject()(n$18:java.io.ObjectInputStream*) virtual [line 162]\n  *&$irvar1:java.lang.Object*=n$20 [line 162]\n  NULLIFY(&ois); [line 162]\n  EXIT_SCOPE(_,n$18,n$20,ois); [line 162]\n " shape="box"]
	

	 "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_10" -> "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_11" ;
	 "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_10" -> "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_3" [color="red" ];
"org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_11" [label="11:  method_body \n   n$21=*&$irvar1:java.lang.Object* [line 162]\n  n$22=_fun___cast(n$21:java.lang.Object*,sizeof(t=org.junit.AssumptionViolatedException;sub_t=( sub )(cast)):void) [line 162]\n  *&fromStream:org.junit.AssumptionViolatedException*=n$22 [line 162]\n  NULLIFY(&$irvar1); [line 162]\n  EXIT_SCOPE(n$21,n$22,$irvar1); [line 162]\n " shape="box"]
	

	 "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_11" -> "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_12" ;
	 "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_11" -> "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_3" [color="red" ];
"org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_12" [label="12:  Call void AssumptionViolatedExceptionTest.assertSerializedCorrectly(AssumptionViolatedException,AssumptionViolatedException) \n   n$23=*&this:org.junit.AssumptionViolatedExceptionTest* [line 164]\n  n$24=*&exception:org.junit.AssumptionViolatedException* [line 164]\n  n$25=*&fromStream:org.junit.AssumptionViolatedException* [line 164]\n  n$26=_fun_void AssumptionViolatedExceptionTest.assertSerializedCorrectly(AssumptionViolatedException,AssumptionViolatedException)(n$23:org.junit.AssumptionViolatedExceptionTest*,n$24:org.junit.AssumptionViolatedException*,n$25:org.junit.AssumptionViolatedException*) [line 164]\n  NULLIFY(&exception); [line 164]\n  NULLIFY(&fromStream); [line 164]\n  NULLIFY(&this); [line 164]\n  EXIT_SCOPE(n$23,n$24,n$25,n$26,exception,fromStream,this); [line 164]\n " shape="box"]
	

	 "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_12" -> "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_13" ;
	 "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_12" -> "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_3" [color="red" ];
"org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_13" [label="13:  method_body \n   APPLY_ABSTRACTION; [line 165]\n " shape="box"]
	

	 "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_13" -> "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_2" ;
	 "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_13" -> "org.junit.AssumptionViolatedExceptionTest.assertCanBeSerialized(org.junit.AssumptionViolatedExceptio.b6998e6781c3c96e97593a7ec5343060_3" [color="red" ];
}
