/* @generated */
digraph cfg {
"org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_1" [label="1: Start void ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test()\nFormals:  this:org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot*\nLocals:  $irvar2:void $irvar1:void $irvar0:void\nAnnotation: <_org.junit.Test> void ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test()() \n  " color=yellow style=filled]
	

	 "org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_1" -> "org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_4" ;
"org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_2" [label="2: Exit void ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test() \n  " color=yellow style=filled]
	

"org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_3" [label="3:  exceptions sink \n   NULLIFY(&$irvar0); [line 383]\n  NULLIFY(&$irvar1); [line 383]\n  NULLIFY(&$irvar2); [line 383]\n  EXIT_SCOPE($irvar0,$irvar1,$irvar2); [line 383]\n  APPLY_ABSTRACTION; [line 383]\n " shape="box"]
	

	 "org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_3" -> "org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_2" ;
"org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_4" [label="4:  method_body \n   n$0=*&this:org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot* [line 381]\n  n$1=*n$0.collector:org.junit.rules.ErrorCollector*(root org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot) [line 381]\n  *&$irvar0:org.junit.rules.ErrorCollector*=n$1 [line 381]\n  EXIT_SCOPE(n$0,n$1); [line 381]\n " shape="box"]
	

	 "org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_4" -> "org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_5" ;
	 "org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_4" -> "org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_3" [color="red" ];
"org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_5" [label="5:  Call AssertionError.<init>(Object) \n   n$2=_fun___new(sizeof(t=java.lang.AssertionError):java.lang.AssertionError*) [line 381]\n  n$3=_fun_AssertionError.<init>(Object)(n$2:java.lang.AssertionError*,\"arbitrary message\":java.lang.Object*) [line 381]\n  *&$irvar1:java.lang.AssertionError*=n$2 [line 381]\n  EXIT_SCOPE(n$2,n$3); [line 381]\n " shape="box"]
	

	 "org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_5" -> "org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_6" ;
	 "org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_5" -> "org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_3" [color="red" ];
"org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_6" [label="6:  Call void ErrorCollector.addError(Throwable) \n   n$4=*&$irvar0:org.junit.rules.ErrorCollector* [line 381]\n  _=*n$4:org.junit.rules.ErrorCollector*(root org.junit.rules.ErrorCollector) [line 381]\n  n$6=*&$irvar1:java.lang.AssertionError* [line 381]\n  n$7=_fun_void ErrorCollector.addError(Throwable)(n$4:org.junit.rules.ErrorCollector*,n$6:java.lang.AssertionError*) virtual [line 381]\n  NULLIFY(&$irvar0); [line 381]\n  NULLIFY(&$irvar1); [line 381]\n  EXIT_SCOPE(_,n$4,n$6,n$7,$irvar0,$irvar1); [line 381]\n " shape="box"]
	

	 "org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_6" -> "org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_7" ;
	 "org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_6" -> "org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_3" [color="red" ];
"org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_7" [label="7:  Call void ExpectedException.expect(Class) \n   n$8=*&this:org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot* [line 382]\n  n$9=*n$8.thrown:org.junit.rules.ExpectedException*(root org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot) [line 382]\n  _=*n$9:org.junit.rules.ExpectedException*(root org.junit.rules.ExpectedException) [line 382]\n  n$11=_fun_void ExpectedException.expect(Class)(n$9:org.junit.rules.ExpectedException*,java.lang.Exception:java.lang.Object*) virtual [line 382]\n  NULLIFY(&this); [line 382]\n  EXIT_SCOPE(_,n$8,n$9,n$11,this); [line 382]\n " shape="box"]
	

	 "org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_7" -> "org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_8" ;
	 "org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_7" -> "org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_3" [color="red" ];
"org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_8" [label="8:  Call RuntimeException.<init>() \n   n$12=_fun___new(sizeof(t=java.lang.RuntimeException):java.lang.RuntimeException*) [line 383]\n  n$13=_fun_RuntimeException.<init>()(n$12:java.lang.RuntimeException*) [line 383]\n  *&$irvar2:java.lang.RuntimeException*=n$12 [line 383]\n  EXIT_SCOPE(n$12,n$13); [line 383]\n " shape="box"]
	

	 "org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_8" -> "org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_9" ;
	 "org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_8" -> "org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_3" [color="red" ];
"org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_9" [label="9:  throw \n   n$14=*&$irvar2:java.lang.RuntimeException* [line 383]\n  *&return:void=EXN n$14 [line 383]\n  NULLIFY(&$irvar2); [line 383]\n  EXIT_SCOPE(n$14,$irvar2); [line 383]\n  APPLY_ABSTRACTION; [line 383]\n " shape="box"]
	

	 "org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_9" -> "org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_2" ;
	 "org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_9" -> "org.junit.rules.ExpectedExceptionTest$ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot.test(.6dc4a068225ed99408a525700d60922b_3" [color="red" ];
}
