/* @generated */
digraph cfg {
"junit.tests.framework.FloatAssertTest.<init>().f0f4e9a539168b991dd55be34daf7df0_1" [label="1: Start FloatAssertTest.<init>()\nFormals:  this:junit.tests.framework.FloatAssertTest*\nLocals:  \n  " color=yellow style=filled]
	

	 "junit.tests.framework.FloatAssertTest.<init>().f0f4e9a539168b991dd55be34daf7df0_1" -> "junit.tests.framework.FloatAssertTest.<init>().f0f4e9a539168b991dd55be34daf7df0_4" ;
"junit.tests.framework.FloatAssertTest.<init>().f0f4e9a539168b991dd55be34daf7df0_2" [label="2: Exit FloatAssertTest.<init>() \n  " color=yellow style=filled]
	

"junit.tests.framework.FloatAssertTest.<init>().f0f4e9a539168b991dd55be34daf7df0_3" [label="3:  exceptions sink \n  " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.<init>().f0f4e9a539168b991dd55be34daf7df0_3" -> "junit.tests.framework.FloatAssertTest.<init>().f0f4e9a539168b991dd55be34daf7df0_2" ;
"junit.tests.framework.FloatAssertTest.<init>().f0f4e9a539168b991dd55be34daf7df0_4" [label="4:  Call TestCase.<init>() \n   n$0=*&this:junit.tests.framework.FloatAssertTest* [line 6]\n  n$1=_fun_TestCase.<init>()(n$0:junit.tests.framework.FloatAssertTest*) [line 6]\n " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.<init>().f0f4e9a539168b991dd55be34daf7df0_4" -> "junit.tests.framework.FloatAssertTest.<init>().f0f4e9a539168b991dd55be34daf7df0_5" ;
	 "junit.tests.framework.FloatAssertTest.<init>().f0f4e9a539168b991dd55be34daf7df0_4" -> "junit.tests.framework.FloatAssertTest.<init>().f0f4e9a539168b991dd55be34daf7df0_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.<init>().f0f4e9a539168b991dd55be34daf7df0_5" [label="5:  method_body \n  " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.<init>().f0f4e9a539168b991dd55be34daf7df0_5" -> "junit.tests.framework.FloatAssertTest.<init>().f0f4e9a539168b991dd55be34daf7df0_2" ;
	 "junit.tests.framework.FloatAssertTest.<init>().f0f4e9a539168b991dd55be34daf7df0_5" -> "junit.tests.framework.FloatAssertTest.<init>().f0f4e9a539168b991dd55be34daf7df0_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAllInfinities():void.a169c6773c5553991ef3e3b212385120_1" [label="1: Start void FloatAssertTest.testAllInfinities()\nFormals:  this:junit.tests.framework.FloatAssertTest*\nLocals:  \n  " color=yellow style=filled]
	

	 "junit.tests.framework.FloatAssertTest.testAllInfinities():void.a169c6773c5553991ef3e3b212385120_1" -> "junit.tests.framework.FloatAssertTest.testAllInfinities():void.a169c6773c5553991ef3e3b212385120_4" ;
"junit.tests.framework.FloatAssertTest.testAllInfinities():void.a169c6773c5553991ef3e3b212385120_2" [label="2: Exit void FloatAssertTest.testAllInfinities() \n  " color=yellow style=filled]
	

"junit.tests.framework.FloatAssertTest.testAllInfinities():void.a169c6773c5553991ef3e3b212385120_3" [label="3:  exceptions sink \n  " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAllInfinities():void.a169c6773c5553991ef3e3b212385120_3" -> "junit.tests.framework.FloatAssertTest.testAllInfinities():void.a169c6773c5553991ef3e3b212385120_2" ;
"junit.tests.framework.FloatAssertTest.testAllInfinities():void.a169c6773c5553991ef3e3b212385120_4" [label="4:  Call void TestCase.assertEquals(float,float,float) \n   n$0=_fun_void TestCase.assertEquals(float,float,float)(inf:float,-inf:float,inf:float) [line 60]\n " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAllInfinities():void.a169c6773c5553991ef3e3b212385120_4" -> "junit.tests.framework.FloatAssertTest.testAllInfinities():void.a169c6773c5553991ef3e3b212385120_5" ;
	 "junit.tests.framework.FloatAssertTest.testAllInfinities():void.a169c6773c5553991ef3e3b212385120_4" -> "junit.tests.framework.FloatAssertTest.testAllInfinities():void.a169c6773c5553991ef3e3b212385120_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAllInfinities():void.a169c6773c5553991ef3e3b212385120_5" [label="5:  method_body \n  " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAllInfinities():void.a169c6773c5553991ef3e3b212385120_5" -> "junit.tests.framework.FloatAssertTest.testAllInfinities():void.a169c6773c5553991ef3e3b212385120_2" ;
	 "junit.tests.framework.FloatAssertTest.testAllInfinities():void.a169c6773c5553991ef3e3b212385120_5" -> "junit.tests.framework.FloatAssertTest.testAllInfinities():void.a169c6773c5553991ef3e3b212385120_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_1" [label="1: Start void FloatAssertTest.testAssertEqualsNaNFails()\nFormals:  this:junit.tests.framework.FloatAssertTest*\nLocals:  CatchVar13:void e:junit.framework.AssertionFailedError* \n  " color=yellow style=filled]
	

	 "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_1" -> "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_4" ;
"junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_2" [label="2: Exit void FloatAssertTest.testAssertEqualsNaNFails() \n  " color=yellow style=filled]
	

"junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_3" [label="3:  exceptions sink \n  " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_3" -> "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_2" ;
"junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_4" [label="4:  Call void TestCase.assertEquals(double,double,double) \n   n$0=_fun_void TestCase.assertEquals(double,double,double)(1.23399996758:double,nan:double,0.:double) [line 13]\n " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_4" -> "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_7" ;
	 "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_4" -> "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_11" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_5" [label="5:  method_body \n   n$1=*&CatchVar13:java.lang.Object* [line 14]\n  *&e:java.lang.Object*=n$1 [line 14]\n " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_5" -> "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_6" ;
	 "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_5" -> "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_6" [label="6:  method_body \n  " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_6" -> "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_2" ;
	 "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_6" -> "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_7" [label="7:  Call void TestCase.fail() \n   n$2=_fun_void TestCase.fail()() [line 17]\n " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_7" -> "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_8" ;
	 "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_7" -> "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_8" [label="8:  method_body \n  " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_8" -> "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_2" ;
	 "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_8" -> "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_9" [label="9: Prune (true branch, switch) \n   n$5=_fun___instanceof(n$4:junit.framework.AssertionFailedError*,sizeof(t=junit.framework.AssertionFailedError):void) [line 14]\n  PRUNE(n$5, true); [line 14]\n  *&CatchVar13:void=n$4 [line 14]\n " shape="invhouse"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_9" -> "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_5" ;
	 "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_9" -> "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_10" [label="10: Prune (false branch, switch) \n   n$5=_fun___instanceof(n$4:junit.framework.AssertionFailedError*,sizeof(t=junit.framework.AssertionFailedError):void) [line 14]\n  PRUNE(!n$5, false); [line 14]\n  *&return:void=EXN n$4 [line 14]\n " shape="invhouse"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_10" -> "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_3" ;
	 "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_10" -> "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_11" [label="11:  exception handler \n   n$3=*&return:void [line 14]\n  *&return:void=null [line 14]\n  n$4=_fun___unwrap_exception(n$3:void) [line 14]\n " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_11" -> "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_9" ;
	 "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_11" -> "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_10" ;
	 "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_11" -> "junit.tests.framework.FloatAssertTest.testAssertEqualsNaNFails():void.0eefb24f3d22bd2df0c9722efbeddaa4_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_1" [label="1: Start void FloatAssertTest.testAssertNaNEqualsFails()\nFormals:  this:junit.tests.framework.FloatAssertTest*\nLocals:  CatchVar13:void e:junit.framework.AssertionFailedError* \n  " color=yellow style=filled]
	

	 "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_1" -> "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_4" ;
"junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_2" [label="2: Exit void FloatAssertTest.testAssertNaNEqualsFails() \n  " color=yellow style=filled]
	

"junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_3" [label="3:  exceptions sink \n  " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_3" -> "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_2" ;
"junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_4" [label="4:  Call void TestCase.assertEquals(double,double,double) \n   n$0=_fun_void TestCase.assertEquals(double,double,double)(nan:double,1.23399996758:double,0.:double) [line 22]\n " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_4" -> "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_7" ;
	 "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_4" -> "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_11" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_5" [label="5:  method_body \n   n$1=*&CatchVar13:java.lang.Object* [line 23]\n  *&e:java.lang.Object*=n$1 [line 23]\n " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_5" -> "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_6" ;
	 "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_5" -> "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_6" [label="6:  method_body \n  " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_6" -> "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_2" ;
	 "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_6" -> "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_7" [label="7:  Call void TestCase.fail() \n   n$2=_fun_void TestCase.fail()() [line 26]\n " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_7" -> "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_8" ;
	 "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_7" -> "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_8" [label="8:  method_body \n  " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_8" -> "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_2" ;
	 "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_8" -> "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_9" [label="9: Prune (true branch, switch) \n   n$5=_fun___instanceof(n$4:junit.framework.AssertionFailedError*,sizeof(t=junit.framework.AssertionFailedError):void) [line 23]\n  PRUNE(n$5, true); [line 23]\n  *&CatchVar13:void=n$4 [line 23]\n " shape="invhouse"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_9" -> "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_5" ;
	 "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_9" -> "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_10" [label="10: Prune (false branch, switch) \n   n$5=_fun___instanceof(n$4:junit.framework.AssertionFailedError*,sizeof(t=junit.framework.AssertionFailedError):void) [line 23]\n  PRUNE(!n$5, false); [line 23]\n  *&return:void=EXN n$4 [line 23]\n " shape="invhouse"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_10" -> "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_3" ;
	 "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_10" -> "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_11" [label="11:  exception handler \n   n$3=*&return:void [line 23]\n  *&return:void=null [line 23]\n  n$4=_fun___unwrap_exception(n$3:void) [line 23]\n " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_11" -> "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_9" ;
	 "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_11" -> "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_10" ;
	 "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_11" -> "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsFails():void.a9fd9b02d6d6478a47bf3adf6ebe83cf_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertNaNEqualsNaN():void.1b8eb0597153e97236004bc2c5a5e731_1" [label="1: Start void FloatAssertTest.testAssertNaNEqualsNaN()\nFormals:  this:junit.tests.framework.FloatAssertTest*\nLocals:  \n  " color=yellow style=filled]
	

	 "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsNaN():void.1b8eb0597153e97236004bc2c5a5e731_1" -> "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsNaN():void.1b8eb0597153e97236004bc2c5a5e731_4" ;
"junit.tests.framework.FloatAssertTest.testAssertNaNEqualsNaN():void.1b8eb0597153e97236004bc2c5a5e731_2" [label="2: Exit void FloatAssertTest.testAssertNaNEqualsNaN() \n  " color=yellow style=filled]
	

"junit.tests.framework.FloatAssertTest.testAssertNaNEqualsNaN():void.1b8eb0597153e97236004bc2c5a5e731_3" [label="3:  exceptions sink \n  " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsNaN():void.1b8eb0597153e97236004bc2c5a5e731_3" -> "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsNaN():void.1b8eb0597153e97236004bc2c5a5e731_2" ;
"junit.tests.framework.FloatAssertTest.testAssertNaNEqualsNaN():void.1b8eb0597153e97236004bc2c5a5e731_4" [label="4:  Call void TestCase.assertEquals(double,double,double) \n   n$0=_fun_void TestCase.assertEquals(double,double,double)(nan:double,nan:double,0.:double) [line 30]\n " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsNaN():void.1b8eb0597153e97236004bc2c5a5e731_4" -> "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsNaN():void.1b8eb0597153e97236004bc2c5a5e731_5" ;
	 "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsNaN():void.1b8eb0597153e97236004bc2c5a5e731_4" -> "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsNaN():void.1b8eb0597153e97236004bc2c5a5e731_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertNaNEqualsNaN():void.1b8eb0597153e97236004bc2c5a5e731_5" [label="5:  method_body \n  " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsNaN():void.1b8eb0597153e97236004bc2c5a5e731_5" -> "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsNaN():void.1b8eb0597153e97236004bc2c5a5e731_2" ;
	 "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsNaN():void.1b8eb0597153e97236004bc2c5a5e731_5" -> "junit.tests.framework.FloatAssertTest.testAssertNaNEqualsNaN():void.1b8eb0597153e97236004bc2c5a5e731_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertNegInfinityEqualsInfinity():void.703a87279d8e2bb26dd9660d1728d3e3_1" [label="1: Start void FloatAssertTest.testAssertNegInfinityEqualsInfinity()\nFormals:  this:junit.tests.framework.FloatAssertTest*\nLocals:  \n  " color=yellow style=filled]
	

	 "junit.tests.framework.FloatAssertTest.testAssertNegInfinityEqualsInfinity():void.703a87279d8e2bb26dd9660d1728d3e3_1" -> "junit.tests.framework.FloatAssertTest.testAssertNegInfinityEqualsInfinity():void.703a87279d8e2bb26dd9660d1728d3e3_4" ;
"junit.tests.framework.FloatAssertTest.testAssertNegInfinityEqualsInfinity():void.703a87279d8e2bb26dd9660d1728d3e3_2" [label="2: Exit void FloatAssertTest.testAssertNegInfinityEqualsInfinity() \n  " color=yellow style=filled]
	

"junit.tests.framework.FloatAssertTest.testAssertNegInfinityEqualsInfinity():void.703a87279d8e2bb26dd9660d1728d3e3_3" [label="3:  exceptions sink \n  " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertNegInfinityEqualsInfinity():void.703a87279d8e2bb26dd9660d1728d3e3_3" -> "junit.tests.framework.FloatAssertTest.testAssertNegInfinityEqualsInfinity():void.703a87279d8e2bb26dd9660d1728d3e3_2" ;
"junit.tests.framework.FloatAssertTest.testAssertNegInfinityEqualsInfinity():void.703a87279d8e2bb26dd9660d1728d3e3_4" [label="4:  Call void TestCase.assertEquals(double,double,double) \n   n$0=_fun_void TestCase.assertEquals(double,double,double)(-inf:double,-inf:double,0.:double) [line 56]\n " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertNegInfinityEqualsInfinity():void.703a87279d8e2bb26dd9660d1728d3e3_4" -> "junit.tests.framework.FloatAssertTest.testAssertNegInfinityEqualsInfinity():void.703a87279d8e2bb26dd9660d1728d3e3_5" ;
	 "junit.tests.framework.FloatAssertTest.testAssertNegInfinityEqualsInfinity():void.703a87279d8e2bb26dd9660d1728d3e3_4" -> "junit.tests.framework.FloatAssertTest.testAssertNegInfinityEqualsInfinity():void.703a87279d8e2bb26dd9660d1728d3e3_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertNegInfinityEqualsInfinity():void.703a87279d8e2bb26dd9660d1728d3e3_5" [label="5:  method_body \n  " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertNegInfinityEqualsInfinity():void.703a87279d8e2bb26dd9660d1728d3e3_5" -> "junit.tests.framework.FloatAssertTest.testAssertNegInfinityEqualsInfinity():void.703a87279d8e2bb26dd9660d1728d3e3_2" ;
	 "junit.tests.framework.FloatAssertTest.testAssertNegInfinityEqualsInfinity():void.703a87279d8e2bb26dd9660d1728d3e3_5" -> "junit.tests.framework.FloatAssertTest.testAssertNegInfinityEqualsInfinity():void.703a87279d8e2bb26dd9660d1728d3e3_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertPosInfinityEqualsInfinity():void.06581878f559b849750b0ae29bb5daa6_1" [label="1: Start void FloatAssertTest.testAssertPosInfinityEqualsInfinity()\nFormals:  this:junit.tests.framework.FloatAssertTest*\nLocals:  \n  " color=yellow style=filled]
	

	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityEqualsInfinity():void.06581878f559b849750b0ae29bb5daa6_1" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityEqualsInfinity():void.06581878f559b849750b0ae29bb5daa6_4" ;
"junit.tests.framework.FloatAssertTest.testAssertPosInfinityEqualsInfinity():void.06581878f559b849750b0ae29bb5daa6_2" [label="2: Exit void FloatAssertTest.testAssertPosInfinityEqualsInfinity() \n  " color=yellow style=filled]
	

"junit.tests.framework.FloatAssertTest.testAssertPosInfinityEqualsInfinity():void.06581878f559b849750b0ae29bb5daa6_3" [label="3:  exceptions sink \n  " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityEqualsInfinity():void.06581878f559b849750b0ae29bb5daa6_3" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityEqualsInfinity():void.06581878f559b849750b0ae29bb5daa6_2" ;
"junit.tests.framework.FloatAssertTest.testAssertPosInfinityEqualsInfinity():void.06581878f559b849750b0ae29bb5daa6_4" [label="4:  Call void TestCase.assertEquals(double,double,double) \n   n$0=_fun_void TestCase.assertEquals(double,double,double)(inf:double,inf:double,0.:double) [line 52]\n " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityEqualsInfinity():void.06581878f559b849750b0ae29bb5daa6_4" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityEqualsInfinity():void.06581878f559b849750b0ae29bb5daa6_5" ;
	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityEqualsInfinity():void.06581878f559b849750b0ae29bb5daa6_4" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityEqualsInfinity():void.06581878f559b849750b0ae29bb5daa6_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertPosInfinityEqualsInfinity():void.06581878f559b849750b0ae29bb5daa6_5" [label="5:  method_body \n  " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityEqualsInfinity():void.06581878f559b849750b0ae29bb5daa6_5" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityEqualsInfinity():void.06581878f559b849750b0ae29bb5daa6_2" ;
	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityEqualsInfinity():void.06581878f559b849750b0ae29bb5daa6_5" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityEqualsInfinity():void.06581878f559b849750b0ae29bb5daa6_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_1" [label="1: Start void FloatAssertTest.testAssertPosInfinityNotEquals()\nFormals:  this:junit.tests.framework.FloatAssertTest*\nLocals:  CatchVar13:void e:junit.framework.AssertionFailedError* \n  " color=yellow style=filled]
	

	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_1" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_4" ;
"junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_2" [label="2: Exit void FloatAssertTest.testAssertPosInfinityNotEquals() \n  " color=yellow style=filled]
	

"junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_3" [label="3:  exceptions sink \n  " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_3" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_2" ;
"junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_4" [label="4:  Call void TestCase.assertEquals(double,double,double) \n   n$0=_fun_void TestCase.assertEquals(double,double,double)(inf:double,1.23000001907:double,0.:double) [line 44]\n " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_4" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_7" ;
	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_4" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_11" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_5" [label="5:  method_body \n   n$1=*&CatchVar13:java.lang.Object* [line 45]\n  *&e:java.lang.Object*=n$1 [line 45]\n " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_5" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_6" ;
	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_5" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_6" [label="6:  method_body \n  " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_6" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_2" ;
	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_6" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_7" [label="7:  Call void TestCase.fail() \n   n$2=_fun_void TestCase.fail()() [line 48]\n " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_7" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_8" ;
	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_7" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_8" [label="8:  method_body \n  " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_8" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_2" ;
	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_8" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_9" [label="9: Prune (true branch, switch) \n   n$5=_fun___instanceof(n$4:junit.framework.AssertionFailedError*,sizeof(t=junit.framework.AssertionFailedError):void) [line 45]\n  PRUNE(n$5, true); [line 45]\n  *&CatchVar13:void=n$4 [line 45]\n " shape="invhouse"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_9" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_5" ;
	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_9" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_10" [label="10: Prune (false branch, switch) \n   n$5=_fun___instanceof(n$4:junit.framework.AssertionFailedError*,sizeof(t=junit.framework.AssertionFailedError):void) [line 45]\n  PRUNE(!n$5, false); [line 45]\n  *&return:void=EXN n$4 [line 45]\n " shape="invhouse"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_10" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_3" ;
	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_10" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_11" [label="11:  exception handler \n   n$3=*&return:void [line 45]\n  *&return:void=null [line 45]\n  n$4=_fun___unwrap_exception(n$3:void) [line 45]\n " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_11" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_9" ;
	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_11" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_10" ;
	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_11" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEquals():void.635b5012a36b5e9f7bdefb0d65dd051d_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_1" [label="1: Start void FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity()\nFormals:  this:junit.tests.framework.FloatAssertTest*\nLocals:  CatchVar13:void e:junit.framework.AssertionFailedError* \n  " color=yellow style=filled]
	

	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_1" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_4" ;
"junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_2" [label="2: Exit void FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity() \n  " color=yellow style=filled]
	

"junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_3" [label="3:  exceptions sink \n  " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_3" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_2" ;
"junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_4" [label="4:  Call void TestCase.assertEquals(double,double,double) \n   n$0=_fun_void TestCase.assertEquals(double,double,double)(inf:double,-inf:double,0.:double) [line 35]\n " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_4" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_7" ;
	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_4" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_11" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_5" [label="5:  method_body \n   n$1=*&CatchVar13:java.lang.Object* [line 36]\n  *&e:java.lang.Object*=n$1 [line 36]\n " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_5" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_6" ;
	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_5" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_6" [label="6:  method_body \n  " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_6" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_2" ;
	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_6" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_7" [label="7:  Call void TestCase.fail() \n   n$2=_fun_void TestCase.fail()() [line 39]\n " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_7" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_8" ;
	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_7" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_8" [label="8:  method_body \n  " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_8" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_2" ;
	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_8" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_9" [label="9: Prune (true branch, switch) \n   n$5=_fun___instanceof(n$4:junit.framework.AssertionFailedError*,sizeof(t=junit.framework.AssertionFailedError):void) [line 36]\n  PRUNE(n$5, true); [line 36]\n  *&CatchVar13:void=n$4 [line 36]\n " shape="invhouse"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_9" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_5" ;
	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_9" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_10" [label="10: Prune (false branch, switch) \n   n$5=_fun___instanceof(n$4:junit.framework.AssertionFailedError*,sizeof(t=junit.framework.AssertionFailedError):void) [line 36]\n  PRUNE(!n$5, false); [line 36]\n  *&return:void=EXN n$4 [line 36]\n " shape="invhouse"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_10" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_3" ;
	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_10" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_3" [color="red" ];
"junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_11" [label="11:  exception handler \n   n$3=*&return:void [line 36]\n  *&return:void=null [line 36]\n  n$4=_fun___unwrap_exception(n$3:void) [line 36]\n " shape="box"]
	

	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_11" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_9" ;
	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_11" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_10" ;
	 "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_11" -> "junit.tests.framework.FloatAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.c6fedc7c616164402d21dd1e21c5bbd4_3" [color="red" ];
}
