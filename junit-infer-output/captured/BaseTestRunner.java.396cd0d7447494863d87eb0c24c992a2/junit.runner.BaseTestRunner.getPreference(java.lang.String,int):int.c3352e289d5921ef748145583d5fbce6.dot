/* @generated */
digraph cfg {
"junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_1" [label="1: Start int BaseTestRunner.getPreference(String,int)\nFormals:  key:java.lang.String* dflt:int\nLocals:  $bcvar4:void CatchVar21:void intValue:int value:java.lang.String* \n  " color=yellow style=filled]
	

	 "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_1" -> "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_4" ;
"junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_2" [label="2: Exit int BaseTestRunner.getPreference(String,int) \n  " color=yellow style=filled]
	

"junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_3" [label="3:  exceptions sink \n   NULLIFY(&CatchVar21); [line 263]\n  NULLIFY(&value); [line 263]\n  NULLIFY(&intValue); [line 263]\n  EXIT_SCOPE(n$10,CatchVar21,value,intValue); [line 263]\n  APPLY_ABSTRACTION; [line 263]\n " shape="box"]
	

	 "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_3" -> "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_2" ;
"junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_4" [label="4:  Call String BaseTestRunner.getPreference(String) \n   n$0=*&key:java.lang.String* [line 254]\n  n$1=_fun_String BaseTestRunner.getPreference(String)(n$0:java.lang.String*) [line 254]\n  *&value:java.lang.String*=n$1 [line 254]\n  NULLIFY(&key); [line 254]\n  EXIT_SCOPE(n$0,n$1,key); [line 254]\n " shape="box"]
	

	 "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_4" -> "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_5" ;
	 "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_4" -> "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_3" [color="red" ];
"junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_5" [label="5:  method_body \n   n$2=*&dflt:int [line 255]\n  *&intValue:int=n$2 [line 255]\n  NULLIFY(&dflt); [line 255]\n  EXIT_SCOPE(n$2,dflt); [line 255]\n " shape="box"]
	

	 "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_5" -> "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_6" ;
	 "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_5" -> "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_7" ;
	 "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_5" -> "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_3" [color="red" ];
"junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_6" [label="6: Prune (true branch, if) \n   n$3=*&value:java.lang.String* [line 256]\n  PRUNE(!(n$3 != null), true); [line 256]\n  NULLIFY(&value); [line 256]\n  EXIT_SCOPE(n$3,value); [line 256]\n " shape="invhouse"]
	

	 "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_6" -> "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_8" ;
	 "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_6" -> "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_3" [color="red" ];
"junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_7" [label="7: Prune (false branch, if) \n   n$3=*&value:java.lang.String* [line 256]\n  PRUNE((n$3 != null), false); [line 256]\n  NULLIFY(&intValue); [line 256]\n  EXIT_SCOPE(n$3,intValue); [line 256]\n " shape="invhouse"]
	

	 "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_7" -> "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_9" ;
	 "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_7" -> "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_3" [color="red" ];
"junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_8" [label="8:  method_body \n   n$4=*&intValue:int [line 257]\n  *&return:int=n$4 [line 257]\n  NULLIFY(&intValue); [line 257]\n  EXIT_SCOPE(n$4,intValue); [line 257]\n  APPLY_ABSTRACTION; [line 257]\n " shape="box"]
	

	 "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_8" -> "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_2" ;
	 "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_8" -> "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_3" [color="red" ];
"junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_9" [label="9:  Call int Integer.parseInt(String) \n   n$5=*&value:java.lang.String* [line 260]\n  n$6=_fun_int Integer.parseInt(String)(n$5:java.lang.String*) [line 260]\n  *&intValue:int=n$6 [line 260]\n  NULLIFY(&value); [line 260]\n  EXIT_SCOPE(n$5,n$6,value); [line 260]\n  APPLY_ABSTRACTION; [line 260]\n " shape="box"]
	

	 "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_9" -> "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_11" ;
	 "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_9" -> "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_14" [color="red" ];
"junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_10" [label="10:  method_body \n   n$7=*&CatchVar21:java.lang.Object* [line 261]\n  *&$bcvar4:java.lang.Object*=n$7 [line 261]\n  NULLIFY(&$bcvar4); [line 261]\n  NULLIFY(&CatchVar21); [line 261]\n  EXIT_SCOPE(n$7,$bcvar4,CatchVar21); [line 261]\n  APPLY_ABSTRACTION; [line 261]\n " shape="box"]
	

	 "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_10" -> "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_11" ;
	 "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_10" -> "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_3" [color="red" ];
"junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_11" [label="11:  method_body \n   n$8=*&intValue:int [line 263]\n  *&return:int=n$8 [line 263]\n  NULLIFY(&intValue); [line 263]\n  EXIT_SCOPE(n$8,intValue); [line 263]\n  APPLY_ABSTRACTION; [line 263]\n " shape="box"]
	

	 "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_11" -> "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_2" ;
	 "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_11" -> "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_3" [color="red" ];
"junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_12" [label="12: Prune (true branch, switch) \n   n$11=_fun___instanceof(n$10:java.lang.NumberFormatException*,sizeof(t=java.lang.NumberFormatException):void) [line 261]\n  PRUNE(n$11, true); [line 261]\n  *&CatchVar21:int=n$10 [line 261]\n  EXIT_SCOPE(n$10,n$11); [line 261]\n " shape="invhouse"]
	

	 "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_12" -> "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_10" ;
	 "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_12" -> "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_3" [color="red" ];
"junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_13" [label="13: Prune (false branch, switch) \n   n$11=_fun___instanceof(n$10:java.lang.NumberFormatException*,sizeof(t=java.lang.NumberFormatException):void) [line 261]\n  PRUNE(!n$11, false); [line 261]\n  *&return:int=EXN n$10 [line 261]\n  NULLIFY(&intValue); [line 261]\n  EXIT_SCOPE(n$10,n$11,intValue); [line 261]\n " shape="invhouse"]
	

	 "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_13" -> "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_3" ;
	 "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_13" -> "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_3" [color="red" ];
"junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_14" [label="14:  exception handler \n   n$9=*&return:int [line 261]\n  *&return:int=null [line 261]\n  n$10=_fun___unwrap_exception(n$9:int) [line 261]\n  EXIT_SCOPE(n$9); [line 261]\n " shape="box"]
	

	 "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_14" -> "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_12" ;
	 "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_14" -> "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_13" ;
	 "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_14" -> "junit.runner.BaseTestRunner.getPreference(java.lang.String,int):int.c3352e289d5921ef748145583d5fbce6_3" [color="red" ];
}
