/* @generated */
digraph cfg {
"org.junit.rules.ErrorCollectorTest$CheckRunnableThatThrowsExpectedTypeOfException$1.run():void.4bacb500ea4e523bab81e8779a73fdaf_1" [label="1: Start void ErrorCollectorTest$CheckRunnableThatThrowsExpectedTypeOfException$1.run()\nFormals:  this:org.junit.rules.ErrorCollectorTest$CheckRunnableThatThrowsExpectedTypeOfException$1*\nLocals:  $irvar0:void \n  " color=yellow style=filled]
	

	 "org.junit.rules.ErrorCollectorTest$CheckRunnableThatThrowsExpectedTypeOfException$1.run():void.4bacb500ea4e523bab81e8779a73fdaf_1" -> "org.junit.rules.ErrorCollectorTest$CheckRunnableThatThrowsExpectedTypeOfException$1.run():void.4bacb500ea4e523bab81e8779a73fdaf_4" ;
"org.junit.rules.ErrorCollectorTest$CheckRunnableThatThrowsExpectedTypeOfException$1.run():void.4bacb500ea4e523bab81e8779a73fdaf_2" [label="2: Exit void ErrorCollectorTest$CheckRunnableThatThrowsExpectedTypeOfException$1.run() \n  " color=yellow style=filled]
	

"org.junit.rules.ErrorCollectorTest$CheckRunnableThatThrowsExpectedTypeOfException$1.run():void.4bacb500ea4e523bab81e8779a73fdaf_3" [label="3:  exceptions sink \n   NULLIFY(&$irvar0); [line 276]\n  EXIT_SCOPE($irvar0); [line 276]\n  APPLY_ABSTRACTION; [line 276]\n " shape="box"]
	

	 "org.junit.rules.ErrorCollectorTest$CheckRunnableThatThrowsExpectedTypeOfException$1.run():void.4bacb500ea4e523bab81e8779a73fdaf_3" -> "org.junit.rules.ErrorCollectorTest$CheckRunnableThatThrowsExpectedTypeOfException$1.run():void.4bacb500ea4e523bab81e8779a73fdaf_2" ;
"org.junit.rules.ErrorCollectorTest$CheckRunnableThatThrowsExpectedTypeOfException$1.run():void.4bacb500ea4e523bab81e8779a73fdaf_4" [label="4:  Call IllegalArgumentException.<init>() \n   n$0=_fun___new(sizeof(t=java.lang.IllegalArgumentException):java.lang.IllegalArgumentException*) [line 276]\n  n$1=_fun_IllegalArgumentException.<init>()(n$0:java.lang.IllegalArgumentException*) [line 276]\n  *&$irvar0:java.lang.IllegalArgumentException*=n$0 [line 276]\n  EXIT_SCOPE(n$0,n$1); [line 276]\n " shape="box"]
	

	 "org.junit.rules.ErrorCollectorTest$CheckRunnableThatThrowsExpectedTypeOfException$1.run():void.4bacb500ea4e523bab81e8779a73fdaf_4" -> "org.junit.rules.ErrorCollectorTest$CheckRunnableThatThrowsExpectedTypeOfException$1.run():void.4bacb500ea4e523bab81e8779a73fdaf_5" ;
	 "org.junit.rules.ErrorCollectorTest$CheckRunnableThatThrowsExpectedTypeOfException$1.run():void.4bacb500ea4e523bab81e8779a73fdaf_4" -> "org.junit.rules.ErrorCollectorTest$CheckRunnableThatThrowsExpectedTypeOfException$1.run():void.4bacb500ea4e523bab81e8779a73fdaf_3" [color="red" ];
"org.junit.rules.ErrorCollectorTest$CheckRunnableThatThrowsExpectedTypeOfException$1.run():void.4bacb500ea4e523bab81e8779a73fdaf_5" [label="5:  throw \n   n$2=*&$irvar0:java.lang.IllegalArgumentException* [line 276]\n  *&return:void=EXN n$2 [line 276]\n  NULLIFY(&$irvar0); [line 276]\n  EXIT_SCOPE(n$2,$irvar0); [line 276]\n  APPLY_ABSTRACTION; [line 276]\n " shape="box"]
	

	 "org.junit.rules.ErrorCollectorTest$CheckRunnableThatThrowsExpectedTypeOfException$1.run():void.4bacb500ea4e523bab81e8779a73fdaf_5" -> "org.junit.rules.ErrorCollectorTest$CheckRunnableThatThrowsExpectedTypeOfException$1.run():void.4bacb500ea4e523bab81e8779a73fdaf_2" ;
	 "org.junit.rules.ErrorCollectorTest$CheckRunnableThatThrowsExpectedTypeOfException$1.run():void.4bacb500ea4e523bab81e8779a73fdaf_5" -> "org.junit.rules.ErrorCollectorTest$CheckRunnableThatThrowsExpectedTypeOfException$1.run():void.4bacb500ea4e523bab81e8779a73fdaf_3" [color="red" ];
}
