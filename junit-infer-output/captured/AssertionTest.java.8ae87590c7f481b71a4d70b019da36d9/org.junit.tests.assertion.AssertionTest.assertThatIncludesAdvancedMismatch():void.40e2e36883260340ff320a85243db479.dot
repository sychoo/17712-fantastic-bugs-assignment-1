/* @generated */
digraph cfg {
"org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_1" [label="1: Start void AssertionTest.assertThatIncludesAdvancedMismatch()\nFormals:  this:org.junit.tests.assertion.AssertionTest*\nLocals:  $irvar3:void $irvar2:void CatchVar24:void $irvar1:void $irvar0:void expectedMessage:java.lang.String* e:java.lang.AssertionError*\nAnnotation: <_org.junit.Test> void AssertionTest.assertThatIncludesAdvancedMismatch()() \n  " color=yellow style=filled]
	

	 "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_1" -> "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_4" ;
"org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_2" [label="2: Exit void AssertionTest.assertThatIncludesAdvancedMismatch() \n  " color=yellow style=filled]
	

"org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_3" [label="3:  exceptions sink \n   NULLIFY(&$irvar3); [line 715]\n  NULLIFY(&expectedMessage); [line 715]\n  NULLIFY(&CatchVar24); [line 715]\n  NULLIFY(&$irvar2); [line 715]\n  NULLIFY(&e); [line 715]\n  EXIT_SCOPE(n$16,$irvar3,expectedMessage,CatchVar24,$irvar2,e); [line 715]\n  APPLY_ABSTRACTION; [line 715]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_3" -> "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_2" ;
"org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_4" [label="4:  method_body \n   *&expectedMessage:java.lang.Object*=\"identifier\\\\nExpected: is an instance of java.lang.Integer\\\\n     but: \\\\\\\"actual\\\\\\\" is a java.lang.String\" [line 707]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_4" -> "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_5" ;
	 "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_4" -> "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_3" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_5" [label="5:  Call Matcher CoreMatchers.instanceOf(Class) \n   n$0=_fun_Matcher CoreMatchers.instanceOf(Class)(java.lang.Integer:java.lang.Object*) [line 710]\n  *&$irvar0:org.hamcrest.Matcher*=n$0 [line 710]\n  EXIT_SCOPE(n$0); [line 710]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_5" -> "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_6" ;
	 "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_5" -> "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_16" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_6" [label="6:  Call Matcher CoreMatchers.is(Matcher) \n   n$1=*&$irvar0:org.hamcrest.Matcher* [line 710]\n  n$2=_fun_Matcher CoreMatchers.is(Matcher)(n$1:org.hamcrest.Matcher*) [line 710]\n  *&$irvar1:org.hamcrest.Matcher*=n$2 [line 710]\n  NULLIFY(&$irvar0); [line 710]\n  EXIT_SCOPE(n$1,n$2,$irvar0); [line 710]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_6" -> "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_7" ;
	 "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_6" -> "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_16" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_7" [label="7:  Call void Assert.assertThat(String,Object,Matcher) \n   n$3=*&$irvar1:org.hamcrest.Matcher* [line 710]\n  n$4=_fun_void Assert.assertThat(String,Object,Matcher)(\"identifier\":java.lang.Object*,\"actual\":java.lang.Object*,n$3:org.hamcrest.Matcher*) [line 710]\n  NULLIFY(&$irvar1); [line 710]\n  EXIT_SCOPE(n$3,n$4,$irvar1); [line 710]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_7" -> "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_12" ;
	 "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_7" -> "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_16" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_8" [label="8:  method_body \n   n$5=*&CatchVar24:java.lang.Object* [line 711]\n  *&e:java.lang.Object*=n$5 [line 711]\n  NULLIFY(&CatchVar24); [line 711]\n  EXIT_SCOPE(n$5,CatchVar24); [line 711]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_8" -> "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_9" ;
	 "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_8" -> "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_3" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_9" [label="9:  Call String AssertionError.getMessage() \n   n$6=*&e:java.lang.Object* [line 712]\n  _=*n$6:java.lang.Object*(root java.lang.Object) [line 712]\n  n$8=_fun_String AssertionError.getMessage()(n$6:java.lang.Object*) virtual [line 712]\n  *&$irvar2:java.lang.String*=n$8 [line 712]\n  NULLIFY(&e); [line 712]\n  EXIT_SCOPE(_,n$6,n$8,e); [line 712]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_9" -> "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_10" ;
	 "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_9" -> "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_3" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_10" [label="10:  Call void Assert.assertEquals(Object,Object) \n   n$9=*&expectedMessage:java.lang.Object* [line 712]\n  n$10=*&$irvar2:java.lang.String* [line 712]\n  n$11=_fun_void Assert.assertEquals(Object,Object)(n$9:java.lang.Object*,n$10:java.lang.String*) [line 712]\n  NULLIFY(&expectedMessage); [line 712]\n  NULLIFY(&$irvar2); [line 712]\n  EXIT_SCOPE(n$9,n$10,n$11,expectedMessage,$irvar2); [line 712]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_10" -> "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_11" ;
	 "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_10" -> "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_3" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_11" [label="11:  method_body \n   APPLY_ABSTRACTION; [line 713]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_11" -> "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_2" ;
	 "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_11" -> "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_3" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_12" [label="12:  Call AssertionError.<init>(Object) \n   n$12=_fun___new(sizeof(t=java.lang.AssertionError):java.lang.AssertionError*) [line 715]\n  n$13=_fun_AssertionError.<init>(Object)(n$12:java.lang.AssertionError*,\"AssertionError expected\":java.lang.Object*) [line 715]\n  *&$irvar3:java.lang.AssertionError*=n$12 [line 715]\n  NULLIFY(&expectedMessage); [line 715]\n  EXIT_SCOPE(n$12,n$13,expectedMessage); [line 715]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_12" -> "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_13" ;
	 "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_12" -> "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_3" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_13" [label="13:  throw \n   n$14=*&$irvar3:java.lang.AssertionError* [line 715]\n  *&return:void=EXN n$14 [line 715]\n  NULLIFY(&$irvar3); [line 715]\n  EXIT_SCOPE(n$14,$irvar3); [line 715]\n  APPLY_ABSTRACTION; [line 715]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_13" -> "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_2" ;
	 "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_13" -> "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_3" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_14" [label="14: Prune (true branch, switch) \n   n$17=_fun___instanceof(n$16:java.lang.AssertionError*,sizeof(t=java.lang.AssertionError):void) [line 711]\n  PRUNE(n$17, true); [line 711]\n  *&CatchVar24:void=n$16 [line 711]\n  EXIT_SCOPE(n$16,n$17); [line 711]\n " shape="invhouse"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_14" -> "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_8" ;
	 "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_14" -> "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_3" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_15" [label="15: Prune (false branch, switch) \n   n$17=_fun___instanceof(n$16:java.lang.AssertionError*,sizeof(t=java.lang.AssertionError):void) [line 711]\n  PRUNE(!n$17, false); [line 711]\n  *&return:void=EXN n$16 [line 711]\n  NULLIFY(&expectedMessage); [line 711]\n  EXIT_SCOPE(n$16,n$17,expectedMessage); [line 711]\n " shape="invhouse"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_15" -> "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_3" ;
	 "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_15" -> "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_3" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_16" [label="16:  exception handler \n   n$15=*&return:void [line 711]\n  *&return:void=null [line 711]\n  n$16=_fun___unwrap_exception(n$15:void) [line 711]\n  NULLIFY(&$irvar0); [line 711]\n  NULLIFY(&$irvar1); [line 711]\n  EXIT_SCOPE(n$15,$irvar0,$irvar1); [line 711]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_16" -> "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_14" ;
	 "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_16" -> "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_15" ;
	 "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_16" -> "org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch():void.40e2e36883260340ff320a85243db479_3" [color="red" ];
}
