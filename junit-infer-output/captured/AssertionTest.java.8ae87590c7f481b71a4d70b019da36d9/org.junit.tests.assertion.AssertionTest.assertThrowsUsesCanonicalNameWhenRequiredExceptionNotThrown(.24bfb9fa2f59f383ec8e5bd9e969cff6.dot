/* @generated */
digraph cfg {
"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_1" [label="1: Start void AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown()\nFormals:  this:org.junit.tests.assertion.AssertionTest*\nLocals:  $irvar3:void $irvar2:void CatchVar13:void $irvar1:void $irvar0:void error:java.lang.AssertionError*\nAnnotation: <_org.junit.Test> void AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown()() \n  " color=yellow style=filled]
	

	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_1" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_4" ;
"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_2" [label="2: Exit void AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown() \n  " color=yellow style=filled]
	

"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_3" [label="3:  exceptions sink \n   NULLIFY(&CatchVar13); [line 984]\n  NULLIFY(&error); [line 984]\n  NULLIFY(&$irvar3); [line 984]\n  NULLIFY(&$irvar2); [line 984]\n  EXIT_SCOPE(n$13,CatchVar13,error,$irvar3,$irvar2); [line 984]\n  APPLY_ABSTRACTION; [line 984]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_3" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_2" ;
"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_4" [label="4:  Call ThrowingRunnable AssertionTest.nonThrowingRunnable() \n   n$0=_fun_ThrowingRunnable AssertionTest.nonThrowingRunnable()() [line 977]\n  *&$irvar0:org.junit.function.ThrowingRunnable*=n$0 [line 977]\n  EXIT_SCOPE(n$0); [line 977]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_4" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_5" ;
	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_4" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_14" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_5" [label="5:  Call Throwable Assert.assertThrows(Class,ThrowingRunnable) \n   n$1=*&$irvar0:org.junit.function.ThrowingRunnable* [line 977]\n  n$2=_fun_Throwable Assert.assertThrows(Class,ThrowingRunnable)(org.junit.tests.assertion.AssertionTest$NestedException:java.lang.Object*,n$1:org.junit.function.ThrowingRunnable*) [line 977]\n  *&$irvar1:java.lang.Throwable*=n$2 [line 977]\n  NULLIFY(&$irvar0); [line 977]\n  NULLIFY(&$irvar1); [line 977]\n  EXIT_SCOPE(n$1,n$2,$irvar0,$irvar1); [line 977]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_5" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_10" ;
	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_5" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_14" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_6" [label="6:  method_body \n   n$3=*&CatchVar13:java.lang.Object* [line 978]\n  *&error:java.lang.Object*=n$3 [line 978]\n  NULLIFY(&CatchVar13); [line 978]\n  EXIT_SCOPE(n$3,CatchVar13); [line 978]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_6" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_7" ;
	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_6" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_3" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_7" [label="7:  Call String AssertionError.getMessage() \n   n$4=*&error:java.lang.Object* [line 981]\n  _=*n$4:java.lang.Object*(root java.lang.Object) [line 981]\n  n$6=_fun_String AssertionError.getMessage()(n$4:java.lang.Object*) virtual [line 981]\n  *&$irvar2:java.lang.String*=n$6 [line 981]\n  NULLIFY(&error); [line 981]\n  EXIT_SCOPE(_,n$4,n$6,error); [line 981]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_7" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_8" ;
	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_7" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_3" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_8" [label="8:  Call void Assert.assertEquals(Object,Object) \n   n$7=*&$irvar2:java.lang.String* [line 979]\n  n$8=_fun_void Assert.assertEquals(Object,Object)(\"expected org.junit.tests.assertion.AssertionTest.NestedException to be thrown, but nothing was thrown\":java.lang.Object*,n$7:java.lang.String*) [line 979]\n  NULLIFY(&$irvar2); [line 979]\n  EXIT_SCOPE(n$7,n$8,$irvar2); [line 979]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_8" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_9" ;
	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_8" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_3" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_9" [label="9:  method_body \n   APPLY_ABSTRACTION; [line 982]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_9" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_2" ;
	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_9" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_3" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_10" [label="10:  Call AssertionError.<init>(Object) \n   n$9=_fun___new(sizeof(t=java.lang.AssertionError):java.lang.AssertionError*) [line 984]\n  n$10=_fun_AssertionError.<init>(Object)(n$9:java.lang.AssertionError*,\"AssertionError expected\":java.lang.Object*) [line 984]\n  *&$irvar3:java.lang.AssertionError*=n$9 [line 984]\n  EXIT_SCOPE(n$9,n$10); [line 984]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_10" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_11" ;
	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_10" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_3" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_11" [label="11:  throw \n   n$11=*&$irvar3:java.lang.AssertionError* [line 984]\n  *&return:void=EXN n$11 [line 984]\n  NULLIFY(&$irvar3); [line 984]\n  EXIT_SCOPE(n$11,$irvar3); [line 984]\n  APPLY_ABSTRACTION; [line 984]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_11" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_2" ;
	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_11" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_3" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_12" [label="12: Prune (true branch, switch) \n   n$14=_fun___instanceof(n$13:java.lang.AssertionError*,sizeof(t=java.lang.AssertionError):void) [line 978]\n  PRUNE(n$14, true); [line 978]\n  *&CatchVar13:void=n$13 [line 978]\n  EXIT_SCOPE(n$13,n$14); [line 978]\n " shape="invhouse"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_12" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_6" ;
	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_12" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_3" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_13" [label="13: Prune (false branch, switch) \n   n$14=_fun___instanceof(n$13:java.lang.AssertionError*,sizeof(t=java.lang.AssertionError):void) [line 978]\n  PRUNE(!n$14, false); [line 978]\n  *&return:void=EXN n$13 [line 978]\n  EXIT_SCOPE(n$13,n$14); [line 978]\n " shape="invhouse"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_13" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_3" ;
	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_13" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_3" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_14" [label="14:  exception handler \n   n$12=*&return:void [line 978]\n  *&return:void=null [line 978]\n  n$13=_fun___unwrap_exception(n$12:void) [line 978]\n  NULLIFY(&$irvar0); [line 978]\n  EXIT_SCOPE(n$12,$irvar0); [line 978]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_14" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_12" ;
	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_14" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_13" ;
	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_14" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown(.24bfb9fa2f59f383ec8e5bd9e969cff6_3" [color="red" ];
}
