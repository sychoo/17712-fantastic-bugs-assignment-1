/* @generated */
digraph cfg {
"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_1" [label="1: Start void AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch()\nFormals:  this:org.junit.tests.assertion.AssertionTest*\nLocals:  $irvar4:void $irvar3:void $irvar2:void CatchVar22:void $irvar1:void $irvar0:void npe:java.lang.NullPointerException* error:java.lang.AssertionError*\nAnnotation: <_org.junit.Test> void AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch()() \n  " color=yellow style=filled]
	

	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_1" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_4" ;
"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_2" [label="2: Exit void AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch() \n  " color=yellow style=filled]
	

"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_3" [label="3:  exceptions sink \n   NULLIFY(&error); [line 953]\n  NULLIFY(&$irvar3); [line 953]\n  NULLIFY(&CatchVar22); [line 953]\n  NULLIFY(&$irvar4); [line 953]\n  NULLIFY(&$irvar2); [line 953]\n  NULLIFY(&npe); [line 953]\n  EXIT_SCOPE(n$22,error,$irvar3,CatchVar22,$irvar4,$irvar2,npe); [line 953]\n  APPLY_ABSTRACTION; [line 953]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_3" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_2" ;
"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_4" [label="4:  Call NullPointerException.<init>() \n   n$0=_fun___new(sizeof(t=java.lang.NullPointerException):java.lang.NullPointerException*) [line 941]\n  n$1=_fun_NullPointerException.<init>()(n$0:java.lang.NullPointerException*) [line 941]\n  *&npe:java.lang.NullPointerException*=n$0 [line 941]\n  EXIT_SCOPE(n$0,n$1); [line 941]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_4" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_5" ;
	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_4" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_3" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_5" [label="5:  Call ThrowingRunnable AssertionTest.throwingRunnable(Throwable) \n   n$2=*&npe:java.lang.NullPointerException* [line 944]\n  n$3=_fun_ThrowingRunnable AssertionTest.throwingRunnable(Throwable)(n$2:java.lang.NullPointerException*) [line 944]\n  *&$irvar0:org.junit.function.ThrowingRunnable*=n$3 [line 944]\n  EXIT_SCOPE(n$2,n$3); [line 944]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_5" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_6" ;
	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_5" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_17" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_6" [label="6:  Call Throwable Assert.assertThrows(Class,ThrowingRunnable) \n   n$4=*&$irvar0:org.junit.function.ThrowingRunnable* [line 944]\n  n$5=_fun_Throwable Assert.assertThrows(Class,ThrowingRunnable)(org.junit.tests.assertion.AssertionTest$NestedException:java.lang.Object*,n$4:org.junit.function.ThrowingRunnable*) [line 944]\n  *&$irvar1:java.lang.Throwable*=n$5 [line 944]\n  NULLIFY(&$irvar0); [line 944]\n  NULLIFY(&$irvar1); [line 944]\n  EXIT_SCOPE(n$4,n$5,$irvar0,$irvar1); [line 944]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_6" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_13" ;
	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_6" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_17" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_7" [label="7:  method_body \n   n$6=*&CatchVar22:java.lang.Object* [line 945]\n  *&error:java.lang.Object*=n$6 [line 945]\n  NULLIFY(&CatchVar22); [line 945]\n  EXIT_SCOPE(n$6,CatchVar22); [line 945]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_7" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_8" ;
	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_7" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_3" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_8" [label="8:  Call String AssertionError.getMessage() \n   n$7=*&error:java.lang.Object* [line 949]\n  _=*n$7:java.lang.Object*(root java.lang.Object) [line 949]\n  n$9=_fun_String AssertionError.getMessage()(n$7:java.lang.Object*) virtual [line 949]\n  *&$irvar2:java.lang.String*=n$9 [line 949]\n  EXIT_SCOPE(_,n$7,n$9); [line 949]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_8" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_9" ;
	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_8" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_3" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_9" [label="9:  Call void Assert.assertEquals(Object,Object) \n   n$10=*&$irvar2:java.lang.String* [line 946]\n  n$11=_fun_void Assert.assertEquals(Object,Object)(\"unexpected exception type thrown; expected:<org.junit.tests.assertion.AssertionTest.NestedException> but was:<java.lang.NullPointerException>\":java.lang.Object*,n$10:java.lang.String*) [line 946]\n  NULLIFY(&$irvar2); [line 946]\n  EXIT_SCOPE(n$10,n$11,$irvar2); [line 946]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_9" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_10" ;
	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_9" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_3" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_10" [label="10:  Call Throwable AssertionError.getCause() \n   n$12=*&error:java.lang.Object* [line 950]\n  _=*n$12:java.lang.Object*(root java.lang.Object) [line 950]\n  n$14=_fun_Throwable AssertionError.getCause()(n$12:java.lang.Object*) virtual [line 950]\n  *&$irvar3:java.lang.Throwable*=n$14 [line 950]\n  NULLIFY(&error); [line 950]\n  EXIT_SCOPE(_,n$12,n$14,error); [line 950]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_10" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_11" ;
	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_10" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_3" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_11" [label="11:  Call void Assert.assertSame(Object,Object) \n   n$15=*&npe:java.lang.NullPointerException* [line 950]\n  n$16=*&$irvar3:java.lang.Throwable* [line 950]\n  n$17=_fun_void Assert.assertSame(Object,Object)(n$15:java.lang.NullPointerException*,n$16:java.lang.Throwable*) [line 950]\n  NULLIFY(&$irvar3); [line 950]\n  NULLIFY(&npe); [line 950]\n  EXIT_SCOPE(n$15,n$16,n$17,$irvar3,npe); [line 950]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_11" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_12" ;
	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_11" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_3" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_12" [label="12:  method_body \n   APPLY_ABSTRACTION; [line 951]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_12" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_2" ;
	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_12" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_3" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_13" [label="13:  Call AssertionError.<init>(Object) \n   n$18=_fun___new(sizeof(t=java.lang.AssertionError):java.lang.AssertionError*) [line 953]\n  n$19=_fun_AssertionError.<init>(Object)(n$18:java.lang.AssertionError*,\"AssertionError expected\":java.lang.Object*) [line 953]\n  *&$irvar4:java.lang.AssertionError*=n$18 [line 953]\n  NULLIFY(&npe); [line 953]\n  EXIT_SCOPE(n$18,n$19,npe); [line 953]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_13" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_14" ;
	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_13" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_3" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_14" [label="14:  throw \n   n$20=*&$irvar4:java.lang.AssertionError* [line 953]\n  *&return:void=EXN n$20 [line 953]\n  NULLIFY(&$irvar4); [line 953]\n  EXIT_SCOPE(n$20,$irvar4); [line 953]\n  APPLY_ABSTRACTION; [line 953]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_14" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_2" ;
	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_14" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_3" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_15" [label="15: Prune (true branch, switch) \n   n$23=_fun___instanceof(n$22:java.lang.AssertionError*,sizeof(t=java.lang.AssertionError):void) [line 945]\n  PRUNE(n$23, true); [line 945]\n  *&CatchVar22:void=n$22 [line 945]\n  EXIT_SCOPE(n$22,n$23); [line 945]\n " shape="invhouse"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_15" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_7" ;
	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_15" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_3" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_16" [label="16: Prune (false branch, switch) \n   n$23=_fun___instanceof(n$22:java.lang.AssertionError*,sizeof(t=java.lang.AssertionError):void) [line 945]\n  PRUNE(!n$23, false); [line 945]\n  *&return:void=EXN n$22 [line 945]\n  NULLIFY(&npe); [line 945]\n  EXIT_SCOPE(n$22,n$23,npe); [line 945]\n " shape="invhouse"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_16" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_3" ;
	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_16" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_3" [color="red" ];
"org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_17" [label="17:  exception handler \n   n$21=*&return:void [line 945]\n  *&return:void=null [line 945]\n  n$22=_fun___unwrap_exception(n$21:void) [line 945]\n  NULLIFY(&$irvar0); [line 945]\n  EXIT_SCOPE(n$21,$irvar0); [line 945]\n " shape="box"]
	

	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_17" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_15" ;
	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_17" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_16" ;
	 "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_17" -> "org.junit.tests.assertion.AssertionTest.assertThrowsUsesCanonicalNameUponTypeMismatch():void.d31fdf741990595d0121133ba36853da_3" [color="red" ];
}
