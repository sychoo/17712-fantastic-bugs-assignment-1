/* @generated */
digraph cfg {
"junit.tests.framework.DoublePrecisionAssertTest.<init>().7cf15d0f2135e54469e8b32ce7005d4e_1" [label="1: Start DoublePrecisionAssertTest.<init>()\nFormals:  this:junit.tests.framework.DoublePrecisionAssertTest*\nLocals:  \n  " color=yellow style=filled]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.<init>().7cf15d0f2135e54469e8b32ce7005d4e_1" -> "junit.tests.framework.DoublePrecisionAssertTest.<init>().7cf15d0f2135e54469e8b32ce7005d4e_4" ;
"junit.tests.framework.DoublePrecisionAssertTest.<init>().7cf15d0f2135e54469e8b32ce7005d4e_2" [label="2: Exit DoublePrecisionAssertTest.<init>() \n  " color=yellow style=filled]
	

"junit.tests.framework.DoublePrecisionAssertTest.<init>().7cf15d0f2135e54469e8b32ce7005d4e_3" [label="3:  exceptions sink \n  " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.<init>().7cf15d0f2135e54469e8b32ce7005d4e_3" -> "junit.tests.framework.DoublePrecisionAssertTest.<init>().7cf15d0f2135e54469e8b32ce7005d4e_2" ;
"junit.tests.framework.DoublePrecisionAssertTest.<init>().7cf15d0f2135e54469e8b32ce7005d4e_4" [label="4:  Call TestCase.<init>() \n   n$0=*&this:junit.tests.framework.DoublePrecisionAssertTest* [line 6]\n  n$1=_fun_TestCase.<init>()(n$0:junit.tests.framework.DoublePrecisionAssertTest*) [line 6]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.<init>().7cf15d0f2135e54469e8b32ce7005d4e_4" -> "junit.tests.framework.DoublePrecisionAssertTest.<init>().7cf15d0f2135e54469e8b32ce7005d4e_5" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.<init>().7cf15d0f2135e54469e8b32ce7005d4e_4" -> "junit.tests.framework.DoublePrecisionAssertTest.<init>().7cf15d0f2135e54469e8b32ce7005d4e_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.<init>().7cf15d0f2135e54469e8b32ce7005d4e_5" [label="5:  method_body \n  " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.<init>().7cf15d0f2135e54469e8b32ce7005d4e_5" -> "junit.tests.framework.DoublePrecisionAssertTest.<init>().7cf15d0f2135e54469e8b32ce7005d4e_2" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.<init>().7cf15d0f2135e54469e8b32ce7005d4e_5" -> "junit.tests.framework.DoublePrecisionAssertTest.<init>().7cf15d0f2135e54469e8b32ce7005d4e_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_1" [label="1: Start void DoublePrecisionAssertTest.testAssertEqualsNaNFails()\nFormals:  this:junit.tests.framework.DoublePrecisionAssertTest*\nLocals:  CatchVar13:void e:junit.framework.AssertionFailedError* \n  " color=yellow style=filled]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_1" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_4" ;
"junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_2" [label="2: Exit void DoublePrecisionAssertTest.testAssertEqualsNaNFails() \n  " color=yellow style=filled]
	

"junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_3" [label="3:  exceptions sink \n  " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_3" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_2" ;
"junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_4" [label="4:  Call void TestCase.assertEquals(double,double,double) \n   n$0=_fun_void TestCase.assertEquals(double,double,double)(1.234:double,nan:double,0.:double) [line 13]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_4" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_7" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_4" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_11" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_5" [label="5:  method_body \n   n$1=*&CatchVar13:java.lang.Object* [line 14]\n  *&e:java.lang.Object*=n$1 [line 14]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_5" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_6" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_5" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_6" [label="6:  method_body \n  " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_6" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_2" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_6" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_7" [label="7:  Call void TestCase.fail() \n   n$2=_fun_void TestCase.fail()() [line 17]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_7" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_8" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_7" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_8" [label="8:  method_body \n  " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_8" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_2" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_8" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_9" [label="9: Prune (true branch, switch) \n   n$5=_fun___instanceof(n$4:junit.framework.AssertionFailedError*,sizeof(t=junit.framework.AssertionFailedError):void) [line 14]\n  PRUNE(n$5, true); [line 14]\n  *&CatchVar13:void=n$4 [line 14]\n " shape="invhouse"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_9" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_5" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_9" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_10" [label="10: Prune (false branch, switch) \n   n$5=_fun___instanceof(n$4:junit.framework.AssertionFailedError*,sizeof(t=junit.framework.AssertionFailedError):void) [line 14]\n  PRUNE(!n$5, false); [line 14]\n  *&return:void=EXN n$4 [line 14]\n " shape="invhouse"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_10" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_3" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_10" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_11" [label="11:  exception handler \n   n$3=*&return:void [line 14]\n  *&return:void=null [line 14]\n  n$4=_fun___unwrap_exception(n$3:void) [line 14]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_11" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_9" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_11" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_10" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_11" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_1" [label="1: Start void DoublePrecisionAssertTest.testAssertNaNEqualsFails()\nFormals:  this:junit.tests.framework.DoublePrecisionAssertTest*\nLocals:  CatchVar13:void e:junit.framework.AssertionFailedError* \n  " color=yellow style=filled]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_1" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_4" ;
"junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_2" [label="2: Exit void DoublePrecisionAssertTest.testAssertNaNEqualsFails() \n  " color=yellow style=filled]
	

"junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_3" [label="3:  exceptions sink \n  " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_3" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_2" ;
"junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_4" [label="4:  Call void TestCase.assertEquals(double,double,double) \n   n$0=_fun_void TestCase.assertEquals(double,double,double)(nan:double,1.234:double,0.:double) [line 22]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_4" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_7" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_4" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_11" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_5" [label="5:  method_body \n   n$1=*&CatchVar13:java.lang.Object* [line 23]\n  *&e:java.lang.Object*=n$1 [line 23]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_5" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_6" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_5" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_6" [label="6:  method_body \n  " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_6" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_2" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_6" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_7" [label="7:  Call void TestCase.fail() \n   n$2=_fun_void TestCase.fail()() [line 26]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_7" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_8" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_7" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_8" [label="8:  method_body \n  " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_8" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_2" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_8" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_9" [label="9: Prune (true branch, switch) \n   n$5=_fun___instanceof(n$4:junit.framework.AssertionFailedError*,sizeof(t=junit.framework.AssertionFailedError):void) [line 23]\n  PRUNE(n$5, true); [line 23]\n  *&CatchVar13:void=n$4 [line 23]\n " shape="invhouse"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_9" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_5" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_9" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_10" [label="10: Prune (false branch, switch) \n   n$5=_fun___instanceof(n$4:junit.framework.AssertionFailedError*,sizeof(t=junit.framework.AssertionFailedError):void) [line 23]\n  PRUNE(!n$5, false); [line 23]\n  *&return:void=EXN n$4 [line 23]\n " shape="invhouse"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_10" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_3" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_10" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_11" [label="11:  exception handler \n   n$3=*&return:void [line 23]\n  *&return:void=null [line 23]\n  n$4=_fun___unwrap_exception(n$3:void) [line 23]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_11" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_9" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_11" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_10" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_11" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsNaN():void.6e5d4dcd08c2721f2c52be07d9a186a1_1" [label="1: Start void DoublePrecisionAssertTest.testAssertNaNEqualsNaN()\nFormals:  this:junit.tests.framework.DoublePrecisionAssertTest*\nLocals:  \n  " color=yellow style=filled]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsNaN():void.6e5d4dcd08c2721f2c52be07d9a186a1_1" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsNaN():void.6e5d4dcd08c2721f2c52be07d9a186a1_4" ;
"junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsNaN():void.6e5d4dcd08c2721f2c52be07d9a186a1_2" [label="2: Exit void DoublePrecisionAssertTest.testAssertNaNEqualsNaN() \n  " color=yellow style=filled]
	

"junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsNaN():void.6e5d4dcd08c2721f2c52be07d9a186a1_3" [label="3:  exceptions sink \n  " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsNaN():void.6e5d4dcd08c2721f2c52be07d9a186a1_3" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsNaN():void.6e5d4dcd08c2721f2c52be07d9a186a1_2" ;
"junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsNaN():void.6e5d4dcd08c2721f2c52be07d9a186a1_4" [label="4:  Call void TestCase.assertEquals(double,double,double) \n   n$0=_fun_void TestCase.assertEquals(double,double,double)(nan:double,nan:double,0.:double) [line 30]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsNaN():void.6e5d4dcd08c2721f2c52be07d9a186a1_4" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsNaN():void.6e5d4dcd08c2721f2c52be07d9a186a1_5" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsNaN():void.6e5d4dcd08c2721f2c52be07d9a186a1_4" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsNaN():void.6e5d4dcd08c2721f2c52be07d9a186a1_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsNaN():void.6e5d4dcd08c2721f2c52be07d9a186a1_5" [label="5:  method_body \n  " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsNaN():void.6e5d4dcd08c2721f2c52be07d9a186a1_5" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsNaN():void.6e5d4dcd08c2721f2c52be07d9a186a1_2" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsNaN():void.6e5d4dcd08c2721f2c52be07d9a186a1_5" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsNaN():void.6e5d4dcd08c2721f2c52be07d9a186a1_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertNegInfinityEqualsInfinity():void.7931b2f703c85f9ed0efa0dc49ac6327_1" [label="1: Start void DoublePrecisionAssertTest.testAssertNegInfinityEqualsInfinity()\nFormals:  this:junit.tests.framework.DoublePrecisionAssertTest*\nLocals:  \n  " color=yellow style=filled]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNegInfinityEqualsInfinity():void.7931b2f703c85f9ed0efa0dc49ac6327_1" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNegInfinityEqualsInfinity():void.7931b2f703c85f9ed0efa0dc49ac6327_4" ;
"junit.tests.framework.DoublePrecisionAssertTest.testAssertNegInfinityEqualsInfinity():void.7931b2f703c85f9ed0efa0dc49ac6327_2" [label="2: Exit void DoublePrecisionAssertTest.testAssertNegInfinityEqualsInfinity() \n  " color=yellow style=filled]
	

"junit.tests.framework.DoublePrecisionAssertTest.testAssertNegInfinityEqualsInfinity():void.7931b2f703c85f9ed0efa0dc49ac6327_3" [label="3:  exceptions sink \n  " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNegInfinityEqualsInfinity():void.7931b2f703c85f9ed0efa0dc49ac6327_3" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNegInfinityEqualsInfinity():void.7931b2f703c85f9ed0efa0dc49ac6327_2" ;
"junit.tests.framework.DoublePrecisionAssertTest.testAssertNegInfinityEqualsInfinity():void.7931b2f703c85f9ed0efa0dc49ac6327_4" [label="4:  Call void TestCase.assertEquals(double,double,double) \n   n$0=_fun_void TestCase.assertEquals(double,double,double)(-inf:double,-inf:double,0.:double) [line 56]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNegInfinityEqualsInfinity():void.7931b2f703c85f9ed0efa0dc49ac6327_4" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNegInfinityEqualsInfinity():void.7931b2f703c85f9ed0efa0dc49ac6327_5" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNegInfinityEqualsInfinity():void.7931b2f703c85f9ed0efa0dc49ac6327_4" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNegInfinityEqualsInfinity():void.7931b2f703c85f9ed0efa0dc49ac6327_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertNegInfinityEqualsInfinity():void.7931b2f703c85f9ed0efa0dc49ac6327_5" [label="5:  method_body \n  " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNegInfinityEqualsInfinity():void.7931b2f703c85f9ed0efa0dc49ac6327_5" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNegInfinityEqualsInfinity():void.7931b2f703c85f9ed0efa0dc49ac6327_2" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNegInfinityEqualsInfinity():void.7931b2f703c85f9ed0efa0dc49ac6327_5" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNegInfinityEqualsInfinity():void.7931b2f703c85f9ed0efa0dc49ac6327_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityEqualsInfinity():void.7ceeeefec946764317ca37f204c7bf13_1" [label="1: Start void DoublePrecisionAssertTest.testAssertPosInfinityEqualsInfinity()\nFormals:  this:junit.tests.framework.DoublePrecisionAssertTest*\nLocals:  \n  " color=yellow style=filled]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityEqualsInfinity():void.7ceeeefec946764317ca37f204c7bf13_1" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityEqualsInfinity():void.7ceeeefec946764317ca37f204c7bf13_4" ;
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityEqualsInfinity():void.7ceeeefec946764317ca37f204c7bf13_2" [label="2: Exit void DoublePrecisionAssertTest.testAssertPosInfinityEqualsInfinity() \n  " color=yellow style=filled]
	

"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityEqualsInfinity():void.7ceeeefec946764317ca37f204c7bf13_3" [label="3:  exceptions sink \n  " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityEqualsInfinity():void.7ceeeefec946764317ca37f204c7bf13_3" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityEqualsInfinity():void.7ceeeefec946764317ca37f204c7bf13_2" ;
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityEqualsInfinity():void.7ceeeefec946764317ca37f204c7bf13_4" [label="4:  Call void TestCase.assertEquals(double,double,double) \n   n$0=_fun_void TestCase.assertEquals(double,double,double)(inf:double,inf:double,0.:double) [line 52]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityEqualsInfinity():void.7ceeeefec946764317ca37f204c7bf13_4" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityEqualsInfinity():void.7ceeeefec946764317ca37f204c7bf13_5" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityEqualsInfinity():void.7ceeeefec946764317ca37f204c7bf13_4" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityEqualsInfinity():void.7ceeeefec946764317ca37f204c7bf13_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityEqualsInfinity():void.7ceeeefec946764317ca37f204c7bf13_5" [label="5:  method_body \n  " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityEqualsInfinity():void.7ceeeefec946764317ca37f204c7bf13_5" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityEqualsInfinity():void.7ceeeefec946764317ca37f204c7bf13_2" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityEqualsInfinity():void.7ceeeefec946764317ca37f204c7bf13_5" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityEqualsInfinity():void.7ceeeefec946764317ca37f204c7bf13_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_1" [label="1: Start void DoublePrecisionAssertTest.testAssertPosInfinityNotEquals()\nFormals:  this:junit.tests.framework.DoublePrecisionAssertTest*\nLocals:  CatchVar13:void e:junit.framework.AssertionFailedError* \n  " color=yellow style=filled]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_1" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_4" ;
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_2" [label="2: Exit void DoublePrecisionAssertTest.testAssertPosInfinityNotEquals() \n  " color=yellow style=filled]
	

"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_3" [label="3:  exceptions sink \n  " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_3" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_2" ;
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_4" [label="4:  Call void TestCase.assertEquals(double,double,double) \n   n$0=_fun_void TestCase.assertEquals(double,double,double)(inf:double,1.23:double,0.:double) [line 44]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_4" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_7" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_4" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_11" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_5" [label="5:  method_body \n   n$1=*&CatchVar13:java.lang.Object* [line 45]\n  *&e:java.lang.Object*=n$1 [line 45]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_5" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_6" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_5" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_6" [label="6:  method_body \n  " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_6" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_2" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_6" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_7" [label="7:  Call void TestCase.fail() \n   n$2=_fun_void TestCase.fail()() [line 48]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_7" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_8" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_7" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_8" [label="8:  method_body \n  " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_8" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_2" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_8" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_9" [label="9: Prune (true branch, switch) \n   n$5=_fun___instanceof(n$4:junit.framework.AssertionFailedError*,sizeof(t=junit.framework.AssertionFailedError):void) [line 45]\n  PRUNE(n$5, true); [line 45]\n  *&CatchVar13:void=n$4 [line 45]\n " shape="invhouse"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_9" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_5" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_9" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_10" [label="10: Prune (false branch, switch) \n   n$5=_fun___instanceof(n$4:junit.framework.AssertionFailedError*,sizeof(t=junit.framework.AssertionFailedError):void) [line 45]\n  PRUNE(!n$5, false); [line 45]\n  *&return:void=EXN n$4 [line 45]\n " shape="invhouse"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_10" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_3" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_10" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_11" [label="11:  exception handler \n   n$3=*&return:void [line 45]\n  *&return:void=null [line 45]\n  n$4=_fun___unwrap_exception(n$3:void) [line 45]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_11" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_9" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_11" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_10" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_11" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_1" [label="1: Start void DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity()\nFormals:  this:junit.tests.framework.DoublePrecisionAssertTest*\nLocals:  CatchVar13:void e:junit.framework.AssertionFailedError* \n  " color=yellow style=filled]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_1" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_4" ;
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_2" [label="2: Exit void DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity() \n  " color=yellow style=filled]
	

"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_3" [label="3:  exceptions sink \n  " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_3" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_2" ;
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_4" [label="4:  Call void TestCase.assertEquals(double,double,double) \n   n$0=_fun_void TestCase.assertEquals(double,double,double)(inf:double,-inf:double,0.:double) [line 35]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_4" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_7" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_4" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_11" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_5" [label="5:  method_body \n   n$1=*&CatchVar13:java.lang.Object* [line 36]\n  *&e:java.lang.Object*=n$1 [line 36]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_5" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_6" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_5" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_6" [label="6:  method_body \n  " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_6" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_2" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_6" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_7" [label="7:  Call void TestCase.fail() \n   n$2=_fun_void TestCase.fail()() [line 39]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_7" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_8" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_7" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_8" [label="8:  method_body \n  " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_8" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_2" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_8" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_9" [label="9: Prune (true branch, switch) \n   n$5=_fun___instanceof(n$4:junit.framework.AssertionFailedError*,sizeof(t=junit.framework.AssertionFailedError):void) [line 36]\n  PRUNE(n$5, true); [line 36]\n  *&CatchVar13:void=n$4 [line 36]\n " shape="invhouse"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_9" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_5" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_9" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_10" [label="10: Prune (false branch, switch) \n   n$5=_fun___instanceof(n$4:junit.framework.AssertionFailedError*,sizeof(t=junit.framework.AssertionFailedError):void) [line 36]\n  PRUNE(!n$5, false); [line 36]\n  *&return:void=EXN n$4 [line 36]\n " shape="invhouse"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_10" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_3" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_10" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_11" [label="11:  exception handler \n   n$3=*&return:void [line 36]\n  *&return:void=null [line 36]\n  n$4=_fun___unwrap_exception(n$3:void) [line 36]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_11" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_9" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_11" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_10" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_11" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEqualsNegInfinity():void.aeba210ecf090278a4b4a3b5d360e6e9_3" [color="red" ];
}
