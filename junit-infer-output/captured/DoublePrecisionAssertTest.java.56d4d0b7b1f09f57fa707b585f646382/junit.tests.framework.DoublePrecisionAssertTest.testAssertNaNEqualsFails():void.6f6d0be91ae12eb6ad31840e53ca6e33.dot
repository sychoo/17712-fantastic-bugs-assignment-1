/* @generated */
digraph cfg {
"junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_1" [label="1: Start void DoublePrecisionAssertTest.testAssertNaNEqualsFails()\nFormals:  this:junit.tests.framework.DoublePrecisionAssertTest*\nLocals:  CatchVar13:void e:junit.framework.AssertionFailedError* \n  " color=yellow style=filled]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_1" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_4" ;
"junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_2" [label="2: Exit void DoublePrecisionAssertTest.testAssertNaNEqualsFails() \n  " color=yellow style=filled]
	

"junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_3" [label="3:  exceptions sink \n   NULLIFY(&CatchVar13); [line 27]\n  EXIT_SCOPE(n$4,CatchVar13); [line 27]\n  APPLY_ABSTRACTION; [line 27]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_3" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_2" ;
"junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_4" [label="4:  Call void TestCase.assertEquals(double,double,double) \n   n$0=_fun_void TestCase.assertEquals(double,double,double)(nan:double,1.234:double,0.:double) [line 22]\n  EXIT_SCOPE(n$0); [line 22]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_4" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_7" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_4" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_11" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_5" [label="5:  method_body \n   n$1=*&CatchVar13:java.lang.Object* [line 23]\n  *&e:java.lang.Object*=n$1 [line 23]\n  NULLIFY(&CatchVar13); [line 23]\n  NULLIFY(&e); [line 23]\n  EXIT_SCOPE(n$1,CatchVar13,e); [line 23]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_5" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_6" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_5" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_6" [label="6:  method_body \n   APPLY_ABSTRACTION; [line 24]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_6" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_2" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_6" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_7" [label="7:  Call void TestCase.fail() \n   n$2=_fun_void TestCase.fail()() [line 26]\n  EXIT_SCOPE(n$2); [line 26]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_7" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_8" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_7" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_8" [label="8:  method_body \n   APPLY_ABSTRACTION; [line 27]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_8" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_2" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_8" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_9" [label="9: Prune (true branch, switch) \n   n$5=_fun___instanceof(n$4:junit.framework.AssertionFailedError*,sizeof(t=junit.framework.AssertionFailedError):void) [line 23]\n  PRUNE(n$5, true); [line 23]\n  *&CatchVar13:void=n$4 [line 23]\n  EXIT_SCOPE(n$4,n$5); [line 23]\n " shape="invhouse"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_9" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_5" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_9" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_10" [label="10: Prune (false branch, switch) \n   n$5=_fun___instanceof(n$4:junit.framework.AssertionFailedError*,sizeof(t=junit.framework.AssertionFailedError):void) [line 23]\n  PRUNE(!n$5, false); [line 23]\n  *&return:void=EXN n$4 [line 23]\n  EXIT_SCOPE(n$4,n$5); [line 23]\n " shape="invhouse"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_10" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_3" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_10" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_11" [label="11:  exception handler \n   n$3=*&return:void [line 23]\n  *&return:void=null [line 23]\n  n$4=_fun___unwrap_exception(n$3:void) [line 23]\n  EXIT_SCOPE(n$3); [line 23]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_11" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_9" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_11" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_10" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_11" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertNaNEqualsFails():void.6f6d0be91ae12eb6ad31840e53ca6e33_3" [color="red" ];
}
