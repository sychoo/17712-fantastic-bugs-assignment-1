/* @generated */
digraph cfg {
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_1" [label="1: Start void DoublePrecisionAssertTest.testAssertPosInfinityNotEquals()\nFormals:  this:junit.tests.framework.DoublePrecisionAssertTest*\nLocals:  CatchVar13:void e:junit.framework.AssertionFailedError* \n  " color=yellow style=filled]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_1" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_4" ;
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_2" [label="2: Exit void DoublePrecisionAssertTest.testAssertPosInfinityNotEquals() \n  " color=yellow style=filled]
	

"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_3" [label="3:  exceptions sink \n   NULLIFY(&CatchVar13); [line 49]\n  EXIT_SCOPE(n$4,CatchVar13); [line 49]\n  APPLY_ABSTRACTION; [line 49]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_3" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_2" ;
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_4" [label="4:  Call void TestCase.assertEquals(double,double,double) \n   n$0=_fun_void TestCase.assertEquals(double,double,double)(inf:double,1.23:double,0.:double) [line 44]\n  EXIT_SCOPE(n$0); [line 44]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_4" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_7" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_4" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_11" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_5" [label="5:  method_body \n   n$1=*&CatchVar13:java.lang.Object* [line 45]\n  *&e:java.lang.Object*=n$1 [line 45]\n  NULLIFY(&CatchVar13); [line 45]\n  NULLIFY(&e); [line 45]\n  EXIT_SCOPE(n$1,CatchVar13,e); [line 45]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_5" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_6" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_5" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_6" [label="6:  method_body \n   APPLY_ABSTRACTION; [line 46]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_6" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_2" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_6" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_7" [label="7:  Call void TestCase.fail() \n   n$2=_fun_void TestCase.fail()() [line 48]\n  EXIT_SCOPE(n$2); [line 48]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_7" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_8" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_7" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_8" [label="8:  method_body \n   APPLY_ABSTRACTION; [line 49]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_8" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_2" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_8" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_9" [label="9: Prune (true branch, switch) \n   n$5=_fun___instanceof(n$4:junit.framework.AssertionFailedError*,sizeof(t=junit.framework.AssertionFailedError):void) [line 45]\n  PRUNE(n$5, true); [line 45]\n  *&CatchVar13:void=n$4 [line 45]\n  EXIT_SCOPE(n$4,n$5); [line 45]\n " shape="invhouse"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_9" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_5" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_9" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_10" [label="10: Prune (false branch, switch) \n   n$5=_fun___instanceof(n$4:junit.framework.AssertionFailedError*,sizeof(t=junit.framework.AssertionFailedError):void) [line 45]\n  PRUNE(!n$5, false); [line 45]\n  *&return:void=EXN n$4 [line 45]\n  EXIT_SCOPE(n$4,n$5); [line 45]\n " shape="invhouse"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_10" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_3" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_10" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_11" [label="11:  exception handler \n   n$3=*&return:void [line 45]\n  *&return:void=null [line 45]\n  n$4=_fun___unwrap_exception(n$3:void) [line 45]\n  EXIT_SCOPE(n$3); [line 45]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_11" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_9" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_11" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_10" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_11" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertPosInfinityNotEquals():void.d55bf35973fc4b913a71313461cd4fa9_3" [color="red" ];
}
