/* @generated */
digraph cfg {
"junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_1" [label="1: Start void DoublePrecisionAssertTest.testAssertEqualsNaNFails()\nFormals:  this:junit.tests.framework.DoublePrecisionAssertTest*\nLocals:  CatchVar13:void e:junit.framework.AssertionFailedError* \n  " color=yellow style=filled]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_1" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_4" ;
"junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_2" [label="2: Exit void DoublePrecisionAssertTest.testAssertEqualsNaNFails() \n  " color=yellow style=filled]
	

"junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_3" [label="3:  exceptions sink \n   NULLIFY(&CatchVar13); [line 18]\n  EXIT_SCOPE(n$4,CatchVar13); [line 18]\n  APPLY_ABSTRACTION; [line 18]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_3" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_2" ;
"junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_4" [label="4:  Call void TestCase.assertEquals(double,double,double) \n   n$0=_fun_void TestCase.assertEquals(double,double,double)(1.234:double,nan:double,0.:double) [line 13]\n  EXIT_SCOPE(n$0); [line 13]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_4" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_7" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_4" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_11" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_5" [label="5:  method_body \n   n$1=*&CatchVar13:java.lang.Object* [line 14]\n  *&e:java.lang.Object*=n$1 [line 14]\n  NULLIFY(&CatchVar13); [line 14]\n  NULLIFY(&e); [line 14]\n  EXIT_SCOPE(n$1,CatchVar13,e); [line 14]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_5" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_6" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_5" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_6" [label="6:  method_body \n   APPLY_ABSTRACTION; [line 15]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_6" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_2" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_6" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_7" [label="7:  Call void TestCase.fail() \n   n$2=_fun_void TestCase.fail()() [line 17]\n  EXIT_SCOPE(n$2); [line 17]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_7" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_8" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_7" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_8" [label="8:  method_body \n   APPLY_ABSTRACTION; [line 18]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_8" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_2" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_8" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_9" [label="9: Prune (true branch, switch) \n   n$5=_fun___instanceof(n$4:junit.framework.AssertionFailedError*,sizeof(t=junit.framework.AssertionFailedError):void) [line 14]\n  PRUNE(n$5, true); [line 14]\n  *&CatchVar13:void=n$4 [line 14]\n  EXIT_SCOPE(n$4,n$5); [line 14]\n " shape="invhouse"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_9" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_5" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_9" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_10" [label="10: Prune (false branch, switch) \n   n$5=_fun___instanceof(n$4:junit.framework.AssertionFailedError*,sizeof(t=junit.framework.AssertionFailedError):void) [line 14]\n  PRUNE(!n$5, false); [line 14]\n  *&return:void=EXN n$4 [line 14]\n  EXIT_SCOPE(n$4,n$5); [line 14]\n " shape="invhouse"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_10" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_3" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_10" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_3" [color="red" ];
"junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_11" [label="11:  exception handler \n   n$3=*&return:void [line 14]\n  *&return:void=null [line 14]\n  n$4=_fun___unwrap_exception(n$3:void) [line 14]\n  EXIT_SCOPE(n$3); [line 14]\n " shape="box"]
	

	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_11" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_9" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_11" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_10" ;
	 "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_11" -> "junit.tests.framework.DoublePrecisionAssertTest.testAssertEqualsNaNFails():void.19dc8f816a1c70bc7db0ff92807e6370_3" [color="red" ];
}
