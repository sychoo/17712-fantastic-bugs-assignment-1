/* @generated */
digraph cfg {
"org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_1" [label="1: Start void ParentRunnerTest.assertClassHasFailureMessage(Class,String)\nFormals:  this:org.junit.tests.running.classes.ParentRunnerTest* klass:java.lang.Class* message:java.lang.String*\nLocals:  $irvar7:void $irvar6:void $irvar5:void $irvar4:void $irvar3:void $irvar2:void $irvar1:void $irvar0:void result:org.junit.runner.Result* request:org.junit.runner.Request* junitCore:org.junit.runner.JUnitCore* \n  " color=yellow style=filled]
	

	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_1" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_4" ;
"org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_2" [label="2: Exit void ParentRunnerTest.assertClassHasFailureMessage(Class,String) \n  " color=yellow style=filled]
	

"org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_3" [label="3:  exceptions sink \n   NULLIFY(&result); [line 158]\n  NULLIFY(&$irvar3); [line 158]\n  NULLIFY(&$irvar5); [line 158]\n  NULLIFY(&request); [line 158]\n  NULLIFY(&$irvar4); [line 158]\n  NULLIFY(&$irvar7); [line 158]\n  NULLIFY(&$irvar6); [line 158]\n  NULLIFY(&$irvar0); [line 158]\n  NULLIFY(&$irvar1); [line 158]\n  NULLIFY(&junitCore); [line 158]\n  NULLIFY(&$irvar2); [line 158]\n  EXIT_SCOPE(result,$irvar3,$irvar5,request,$irvar4,$irvar7,$irvar6,$irvar0,$irvar1,junitCore,$irvar2); [line 158]\n  APPLY_ABSTRACTION; [line 158]\n " shape="box"]
	

	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_3" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_2" ;
"org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_4" [label="4:  Call JUnitCore.<init>() \n   n$0=_fun___new(sizeof(t=org.junit.runner.JUnitCore):org.junit.runner.JUnitCore*) [line 152]\n  n$1=_fun_JUnitCore.<init>()(n$0:org.junit.runner.JUnitCore*) [line 152]\n  *&junitCore:org.junit.runner.JUnitCore*=n$0 [line 152]\n  EXIT_SCOPE(n$0,n$1); [line 152]\n " shape="box"]
	

	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_4" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_5" ;
	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_4" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_3" [color="red" ];
"org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_5" [label="5:  Call Request Request.aClass(Class) \n   n$2=*&klass:java.lang.Class* [line 153]\n  n$3=_fun_Request Request.aClass(Class)(n$2:java.lang.Class*) [line 153]\n  *&request:org.junit.runner.Request*=n$3 [line 153]\n  NULLIFY(&klass); [line 153]\n  EXIT_SCOPE(n$2,n$3,klass); [line 153]\n " shape="box"]
	

	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_5" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_6" ;
	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_5" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_3" [color="red" ];
"org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_6" [label="6:  Call Result JUnitCore.run(Request) \n   n$4=*&junitCore:org.junit.runner.JUnitCore* [line 154]\n  _=*n$4:org.junit.runner.JUnitCore*(root org.junit.runner.JUnitCore) [line 154]\n  n$6=*&request:org.junit.runner.Request* [line 154]\n  n$7=_fun_Result JUnitCore.run(Request)(n$4:org.junit.runner.JUnitCore*,n$6:org.junit.runner.Request*) [line 154]\n  *&result:org.junit.runner.Result*=n$7 [line 154]\n  NULLIFY(&request); [line 154]\n  NULLIFY(&junitCore); [line 154]\n  EXIT_SCOPE(_,n$4,n$6,n$7,request,junitCore); [line 154]\n " shape="box"]
	

	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_6" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_7" ;
	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_6" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_3" [color="red" ];
"org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_7" [label="7:  Call int Result.getFailureCount() \n   n$8=*&result:org.junit.runner.Result* [line 155]\n  _=*n$8:org.junit.runner.Result*(root org.junit.runner.Result) [line 155]\n  n$10=_fun_int Result.getFailureCount()(n$8:org.junit.runner.Result*) virtual [line 155]\n  *&$irvar0:int=n$10 [line 155]\n  EXIT_SCOPE(_,n$8,n$10); [line 155]\n " shape="box"]
	

	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_7" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_8" ;
	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_7" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_3" [color="red" ];
"org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_8" [label="8:  Call Integer Integer.valueOf(int) \n   n$11=*&$irvar0:int [line 155]\n  n$12=_fun_Integer Integer.valueOf(int)(n$11:int) [line 155]\n  *&$irvar1:java.lang.Integer*=n$12 [line 155]\n  NULLIFY(&$irvar0); [line 155]\n  EXIT_SCOPE(n$11,n$12,$irvar0); [line 155]\n " shape="box"]
	

	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_8" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_9" ;
	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_8" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_3" [color="red" ];
"org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_9" [label="9:  Call Integer Integer.valueOf(int) \n   n$13=_fun_Integer Integer.valueOf(int)(1:int) [line 155]\n  *&$irvar2:java.lang.Integer*=n$13 [line 155]\n  EXIT_SCOPE(n$13); [line 155]\n " shape="box"]
	

	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_9" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_10" ;
	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_9" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_3" [color="red" ];
"org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_10" [label="10:  Call Matcher CoreMatchers.is(Object) \n   n$14=*&$irvar2:java.lang.Integer* [line 155]\n  n$15=_fun_Matcher CoreMatchers.is(Object)(n$14:java.lang.Integer*) [line 155]\n  *&$irvar3:org.hamcrest.Matcher*=n$15 [line 155]\n  NULLIFY(&$irvar2); [line 155]\n  EXIT_SCOPE(n$14,n$15,$irvar2); [line 155]\n " shape="box"]
	

	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_10" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_11" ;
	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_10" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_3" [color="red" ];
"org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_11" [label="11:  Call void MatcherAssert.assertThat(Object,Matcher) \n   n$16=*&$irvar1:java.lang.Integer* [line 155]\n  n$17=*&$irvar3:org.hamcrest.Matcher* [line 155]\n  n$18=_fun_void MatcherAssert.assertThat(Object,Matcher)(n$16:java.lang.Integer*,n$17:org.hamcrest.Matcher*) [line 155]\n  NULLIFY(&$irvar3); [line 155]\n  NULLIFY(&$irvar1); [line 155]\n  EXIT_SCOPE(n$16,n$17,n$18,$irvar3,$irvar1); [line 155]\n " shape="box"]
	

	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_11" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_12" ;
	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_11" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_3" [color="red" ];
"org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_12" [label="12:  Call List Result.getFailures() \n   n$19=*&result:org.junit.runner.Result* [line 156]\n  _=*n$19:org.junit.runner.Result*(root org.junit.runner.Result) [line 156]\n  n$21=_fun_List Result.getFailures()(n$19:org.junit.runner.Result*) virtual [line 156]\n  *&$irvar4:java.util.List*=n$21 [line 156]\n  NULLIFY(&result); [line 156]\n  EXIT_SCOPE(_,n$19,n$21,result); [line 156]\n " shape="box"]
	

	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_12" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_13" ;
	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_12" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_3" [color="red" ];
"org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_13" [label="13:  Call Object List.get(int) \n   n$22=*&$irvar4:java.util.List* [line 156]\n  _=*n$22:java.util.List*(root java.util.List) [line 156]\n  n$24=_fun_Object List.get(int)(n$22:java.util.List*,0:int) interface virtual [line 156]\n  *&$irvar5:java.lang.Object*=n$24 [line 156]\n  NULLIFY(&$irvar4); [line 156]\n  EXIT_SCOPE(_,n$22,n$24,$irvar4); [line 156]\n " shape="box"]
	

	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_13" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_14" ;
	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_13" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_3" [color="red" ];
"org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_14" [label="14:  Call String Failure.getMessage() \n   n$25=*&$irvar5:java.lang.Object* [line 156]\n  n$26=_fun___cast(n$25:java.lang.Object*,sizeof(t=org.junit.runner.notification.Failure;sub_t=( sub )(cast)):void) [line 156]\n  _=*n$26:org.junit.runner.notification.Failure*(root org.junit.runner.notification.Failure) [line 156]\n  n$28=_fun_String Failure.getMessage()(n$26:org.junit.runner.notification.Failure*) virtual [line 156]\n  *&$irvar6:java.lang.String*=n$28 [line 156]\n  NULLIFY(&$irvar5); [line 156]\n  EXIT_SCOPE(_,n$25,n$26,n$28,$irvar5); [line 156]\n " shape="box"]
	

	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_14" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_15" ;
	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_14" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_3" [color="red" ];
"org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_15" [label="15:  Call Matcher CoreMatchers.containsString(String) \n   n$29=*&message:java.lang.String* [line 157]\n  n$30=_fun_Matcher CoreMatchers.containsString(String)(n$29:java.lang.String*) [line 157]\n  *&$irvar7:org.hamcrest.Matcher*=n$30 [line 157]\n  NULLIFY(&message); [line 157]\n  EXIT_SCOPE(n$29,n$30,message); [line 157]\n " shape="box"]
	

	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_15" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_16" ;
	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_15" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_3" [color="red" ];
"org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_16" [label="16:  Call void MatcherAssert.assertThat(Object,Matcher) \n   n$31=*&$irvar6:java.lang.String* [line 156]\n  n$32=*&$irvar7:org.hamcrest.Matcher* [line 156]\n  n$33=_fun_void MatcherAssert.assertThat(Object,Matcher)(n$31:java.lang.String*,n$32:org.hamcrest.Matcher*) [line 156]\n  NULLIFY(&$irvar7); [line 156]\n  NULLIFY(&$irvar6); [line 156]\n  EXIT_SCOPE(n$31,n$32,n$33,$irvar7,$irvar6); [line 156]\n " shape="box"]
	

	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_16" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_17" ;
	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_16" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_3" [color="red" ];
"org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_17" [label="17:  method_body \n   APPLY_ABSTRACTION; [line 158]\n " shape="box"]
	

	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_17" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_2" ;
	 "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_17" -> "org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class,java.l.b372cccd288b01095e2e1174aa3a3fac_3" [color="red" ];
}
