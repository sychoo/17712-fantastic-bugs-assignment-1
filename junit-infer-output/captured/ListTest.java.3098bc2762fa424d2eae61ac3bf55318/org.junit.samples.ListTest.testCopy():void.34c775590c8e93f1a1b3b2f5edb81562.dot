/* @generated */
digraph cfg {
"org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_1" [label="1: Start void ListTest.testCopy()\nFormals:  this:org.junit.samples.ListTest*\nLocals:  $irvar5:void $irvar4:void $T0_51:void $irvar3:void $irvar2:void $irvar1:void $irvar0:void copy:java.util.List*\nAnnotation: <_org.junit.Test> void ListTest.testCopy()() \n  " color=yellow style=filled]
	

	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_1" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_4" ;
"org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_2" [label="2: Exit void ListTest.testCopy() \n  " color=yellow style=filled]
	

"org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_3" [label="3:  exceptions sink \n   NULLIFY(&copy); [line 63]\n  NULLIFY(&$irvar3); [line 63]\n  NULLIFY(&$irvar5); [line 63]\n  NULLIFY(&$irvar4); [line 63]\n  NULLIFY(&$T0_51); [line 63]\n  NULLIFY(&$irvar0); [line 63]\n  NULLIFY(&$irvar2); [line 63]\n  EXIT_SCOPE(copy,$irvar3,$irvar5,$irvar4,$T0_51,$irvar0,$irvar2); [line 63]\n  APPLY_ABSTRACTION; [line 63]\n " shape="box"]
	

	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_3" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_2" ;
"org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_4" [label="4:  Call int List.size() \n   n$0=*&this:org.junit.samples.ListTest* [line 59]\n  n$1=*n$0.fFull:java.util.List*(root org.junit.samples.ListTest) [line 59]\n  _=*n$1:java.util.List*(root java.util.List) [line 59]\n  n$3=_fun_int List.size()(n$1:java.util.List*) interface virtual [line 59]\n  *&$irvar0:int=n$3 [line 59]\n  EXIT_SCOPE(_,n$0,n$1,n$3); [line 59]\n " shape="box"]
	

	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_4" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_5" ;
	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_4" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_3" [color="red" ];
"org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_5" [label="5:  Call ArrayList.<init>(int) \n   n$4=_fun___new(sizeof(t=java.util.ArrayList):java.util.ArrayList*) [line 59]\n  n$5=*&$irvar0:int [line 59]\n  n$6=_fun_ArrayList.<init>(int)(n$4:java.util.ArrayList*,n$5:int) [line 59]\n  *&copy:java.util.ArrayList*=n$4 [line 59]\n  NULLIFY(&$irvar0); [line 59]\n  EXIT_SCOPE(n$4,n$5,n$6,$irvar0); [line 59]\n " shape="box"]
	

	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_5" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_6" ;
	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_5" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_3" [color="red" ];
"org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_6" [label="6:  Call boolean List.addAll(Collection) \n   n$7=*&copy:java.util.ArrayList* [line 60]\n  _=*n$7:java.util.ArrayList*(root java.util.ArrayList) [line 60]\n  n$9=*&this:org.junit.samples.ListTest* [line 60]\n  n$10=*n$9.fFull:java.util.List*(root org.junit.samples.ListTest) [line 60]\n  n$11=_fun_boolean List.addAll(Collection)(n$7:java.util.ArrayList*,n$10:java.util.List*) interface virtual [line 60]\n  *&$irvar1:_Bool=n$11 [line 60]\n  NULLIFY(&$irvar1); [line 60]\n  EXIT_SCOPE(_,n$7,n$9,n$10,n$11,$irvar1); [line 60]\n " shape="box"]
	

	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_6" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_7" ;
	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_6" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_3" [color="red" ];
"org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_7" [label="7:  Call int List.size() \n   n$12=*&copy:java.util.ArrayList* [line 61]\n  _=*n$12:java.util.ArrayList*(root java.util.ArrayList) [line 61]\n  n$14=_fun_int List.size()(n$12:java.util.ArrayList*) interface virtual [line 61]\n  *&$irvar2:int=n$14 [line 61]\n  EXIT_SCOPE(_,n$12,n$14); [line 61]\n " shape="box"]
	

	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_7" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_8" ;
	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_7" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_3" [color="red" ];
"org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_8" [label="8:  Call int List.size() \n   n$15=*&this:org.junit.samples.ListTest* [line 61]\n  n$16=*n$15.fFull:java.util.List*(root org.junit.samples.ListTest) [line 61]\n  _=*n$16:java.util.List*(root java.util.List) [line 61]\n  n$18=_fun_int List.size()(n$16:java.util.List*) interface virtual [line 61]\n  *&$irvar3:int=n$18 [line 61]\n  NULLIFY(&this); [line 61]\n  EXIT_SCOPE(_,n$15,n$16,n$18,this); [line 61]\n " shape="box"]
	

	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_8" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_9" ;
	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_8" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_10" ;
	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_8" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_3" [color="red" ];
"org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_9" [label="9: Prune (true branch, if) \n   n$19=*&$irvar2:int [line 61]\n  n$20=*&$irvar3:int [line 61]\n  PRUNE(!(n$19 != n$20), true); [line 61]\n  NULLIFY(&$irvar3); [line 61]\n  NULLIFY(&$irvar2); [line 61]\n  EXIT_SCOPE(n$19,n$20,$irvar3,$irvar2); [line 61]\n " shape="invhouse"]
	

	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_9" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_11" ;
	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_9" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_3" [color="red" ];
"org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_10" [label="10: Prune (false branch, if) \n   n$19=*&$irvar2:int [line 61]\n  n$20=*&$irvar3:int [line 61]\n  PRUNE((n$19 != n$20), false); [line 61]\n  NULLIFY(&$irvar3); [line 61]\n  NULLIFY(&$irvar2); [line 61]\n  EXIT_SCOPE(n$19,n$20,$irvar3,$irvar2); [line 61]\n " shape="invhouse"]
	

	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_10" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_12" ;
	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_10" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_3" [color="red" ];
"org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_11" [label="11:  method_body \n   *&$T0_51:int=1 [line 61]\n  APPLY_ABSTRACTION; [line 61]\n " shape="box"]
	

	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_11" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_13" ;
	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_11" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_3" [color="red" ];
"org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_12" [label="12:  method_body \n   *&$T0_51:int=0 [line 61]\n  APPLY_ABSTRACTION; [line 61]\n " shape="box"]
	

	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_12" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_13" ;
	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_12" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_3" [color="red" ];
"org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_13" [label="13:  Call void Assert.assertTrue(boolean) \n   n$21=*&$T0_51:int [line 61]\n  n$22=_fun_void Assert.assertTrue(boolean)(n$21:int) [line 61]\n  NULLIFY(&$T0_51); [line 61]\n  EXIT_SCOPE(n$21,n$22,$T0_51); [line 61]\n " shape="box"]
	

	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_13" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_14" ;
	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_13" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_3" [color="red" ];
"org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_14" [label="14:  Call Integer Integer.valueOf(int) \n   n$23=_fun_Integer Integer.valueOf(int)(1:int) [line 62]\n  *&$irvar4:java.lang.Integer*=n$23 [line 62]\n  EXIT_SCOPE(n$23); [line 62]\n " shape="box"]
	

	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_14" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_15" ;
	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_14" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_3" [color="red" ];
"org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_15" [label="15:  Call boolean List.contains(Object) \n   n$24=*&copy:java.util.ArrayList* [line 62]\n  _=*n$24:java.util.ArrayList*(root java.util.ArrayList) [line 62]\n  n$26=*&$irvar4:java.lang.Integer* [line 62]\n  n$27=_fun_boolean List.contains(Object)(n$24:java.util.ArrayList*,n$26:java.lang.Integer*) interface virtual [line 62]\n  *&$irvar5:_Bool=n$27 [line 62]\n  NULLIFY(&copy); [line 62]\n  NULLIFY(&$irvar4); [line 62]\n  EXIT_SCOPE(_,n$24,n$26,n$27,copy,$irvar4); [line 62]\n " shape="box"]
	

	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_15" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_16" ;
	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_15" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_3" [color="red" ];
"org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_16" [label="16:  Call void Assert.assertTrue(boolean) \n   n$28=*&$irvar5:_Bool [line 62]\n  n$29=_fun_void Assert.assertTrue(boolean)(n$28:_Bool) [line 62]\n  NULLIFY(&$irvar5); [line 62]\n  EXIT_SCOPE(n$28,n$29,$irvar5); [line 62]\n " shape="box"]
	

	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_16" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_17" ;
	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_16" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_3" [color="red" ];
"org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_17" [label="17:  method_body \n   APPLY_ABSTRACTION; [line 63]\n " shape="box"]
	

	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_17" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_2" ;
	 "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_17" -> "org.junit.samples.ListTest.testCopy():void.34c775590c8e93f1a1b3b2f5edb81562_3" [color="red" ];
}
