/* @generated */
digraph cfg {
"org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_1" [label="1: Start void DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual()\nFormals:  this:org.junit.tests.experimental.max.DescriptionTest*\nLocals:  $irvar5:void $irvar4:void $irvar3:void $irvar2:void $irvar1:void $irvar0:void\nAnnotation: <_org.junit.Test> void DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual()() \n  " color=yellow style=filled]
	

	 "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_1" -> "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_4" ;
"org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_2" [label="2: Exit void DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual() \n  " color=yellow style=filled]
	

"org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_3" [label="3:  exceptions sink \n   NULLIFY(&$irvar3); [line 73]\n  NULLIFY(&$irvar5); [line 73]\n  NULLIFY(&$irvar4); [line 73]\n  NULLIFY(&$irvar0); [line 73]\n  NULLIFY(&$irvar1); [line 73]\n  NULLIFY(&$irvar2); [line 73]\n  EXIT_SCOPE($irvar3,$irvar5,$irvar4,$irvar0,$irvar1,$irvar2); [line 73]\n  APPLY_ABSTRACTION; [line 73]\n " shape="box"]
	

	 "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_3" -> "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_2" ;
"org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_4" [label="4:  Call Integer Integer.valueOf(int) \n   n$0=_fun_Integer Integer.valueOf(int)(1:int) [line 71]\n  *&$irvar0:java.lang.Integer*=n$0 [line 71]\n  EXIT_SCOPE(n$0); [line 71]\n " shape="box"]
	

	 "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_4" -> "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_5" ;
	 "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_4" -> "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_3" [color="red" ];
"org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_5" [label="5:  Call Description Description.createTestDescription(String,String,Serializable) \n   n$1=*&$irvar0:java.lang.Integer* [line 71]\n  n$2=_fun_Description Description.createTestDescription(String,String,Serializable)(\"not a class name\":java.lang.Object*,\"aTestMethod\":java.lang.Object*,n$1:java.lang.Integer*) [line 71]\n  *&$irvar1:org.junit.runner.Description*=n$2 [line 71]\n  NULLIFY(&$irvar0); [line 71]\n  EXIT_SCOPE(n$1,n$2,$irvar0); [line 71]\n " shape="box"]
	

	 "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_5" -> "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_6" ;
	 "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_5" -> "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_3" [color="red" ];
"org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_6" [label="6:  Call Integer Integer.valueOf(int) \n   n$3=_fun_Integer Integer.valueOf(int)(2:int) [line 72]\n  *&$irvar2:java.lang.Integer*=n$3 [line 72]\n  EXIT_SCOPE(n$3); [line 72]\n " shape="box"]
	

	 "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_6" -> "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_7" ;
	 "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_6" -> "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_3" [color="red" ];
"org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_7" [label="7:  Call Description Description.createTestDescription(String,String,Serializable) \n   n$4=*&$irvar2:java.lang.Integer* [line 72]\n  n$5=_fun_Description Description.createTestDescription(String,String,Serializable)(\"not a class name\":java.lang.Object*,\"aTestMethod\":java.lang.Object*,n$4:java.lang.Integer*) [line 72]\n  *&$irvar3:org.junit.runner.Description*=n$5 [line 72]\n  NULLIFY(&$irvar2); [line 72]\n  EXIT_SCOPE(n$4,n$5,$irvar2); [line 72]\n " shape="box"]
	

	 "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_7" -> "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_8" ;
	 "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_7" -> "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_3" [color="red" ];
"org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_8" [label="8:  Call Matcher CoreMatchers.equalTo(Object) \n   n$6=*&$irvar3:org.junit.runner.Description* [line 72]\n  n$7=_fun_Matcher CoreMatchers.equalTo(Object)(n$6:org.junit.runner.Description*) [line 72]\n  *&$irvar4:org.hamcrest.Matcher*=n$7 [line 72]\n  NULLIFY(&$irvar3); [line 72]\n  EXIT_SCOPE(n$6,n$7,$irvar3); [line 72]\n " shape="box"]
	

	 "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_8" -> "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_9" ;
	 "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_8" -> "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_3" [color="red" ];
"org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_9" [label="9:  Call Matcher CoreMatchers.not(Matcher) \n   n$8=*&$irvar4:org.hamcrest.Matcher* [line 72]\n  n$9=_fun_Matcher CoreMatchers.not(Matcher)(n$8:org.hamcrest.Matcher*) [line 72]\n  *&$irvar5:org.hamcrest.Matcher*=n$9 [line 72]\n  NULLIFY(&$irvar4); [line 72]\n  EXIT_SCOPE(n$8,n$9,$irvar4); [line 72]\n " shape="box"]
	

	 "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_9" -> "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_10" ;
	 "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_9" -> "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_3" [color="red" ];
"org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_10" [label="10:  Call void MatcherAssert.assertThat(Object,Matcher) \n   n$10=*&$irvar1:org.junit.runner.Description* [line 71]\n  n$11=*&$irvar5:org.hamcrest.Matcher* [line 71]\n  n$12=_fun_void MatcherAssert.assertThat(Object,Matcher)(n$10:org.junit.runner.Description*,n$11:org.hamcrest.Matcher*) [line 71]\n  NULLIFY(&$irvar5); [line 71]\n  NULLIFY(&$irvar1); [line 71]\n  EXIT_SCOPE(n$10,n$11,n$12,$irvar5,$irvar1); [line 71]\n " shape="box"]
	

	 "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_10" -> "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_11" ;
	 "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_10" -> "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_3" [color="red" ];
"org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_11" [label="11:  method_body \n   APPLY_ABSTRACTION; [line 73]\n " shape="box"]
	

	 "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_11" -> "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_2" ;
	 "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_11" -> "org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual():void.0c69167fc4c6ab998a5b6c1b56189816_3" [color="red" ];
}
