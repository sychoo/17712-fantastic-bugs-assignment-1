/* @generated */
digraph cfg {
"org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_1" [label="1: Start void TestRuleTest.methodIgnoreNonRules()\nFormals:  this:org.junit.rules.TestRuleTest*\nLocals:  $irvar1:void $irvar0:void result:org.junit.runner.Result*\nAnnotation: <_org.junit.Test> void TestRuleTest.methodIgnoreNonRules()() \n  " color=yellow style=filled]
	

	 "org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_1" -> "org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_4" ;
"org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_2" [label="2: Exit void TestRuleTest.methodIgnoreNonRules() \n  " color=yellow style=filled]
	

"org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_3" [label="3:  exceptions sink \n   NULLIFY(&result); [line 376]\n  NULLIFY(&$irvar0); [line 376]\n  NULLIFY(&$irvar1); [line 376]\n  EXIT_SCOPE(result,$irvar0,$irvar1); [line 376]\n  APPLY_ABSTRACTION; [line 376]\n " shape="box"]
	

	 "org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_3" -> "org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_2" ;
"org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_4" [label="4:  method_body \n   n$0=_fun___new_array(sizeof(t=java.lang.Class*[_*_];len=[1]):java.lang.Class*[_*_](*)) [line 374]\n  *&$irvar0:java.lang.Class*[_*_](*)=n$0 [line 374]\n  EXIT_SCOPE(n$0); [line 374]\n " shape="box"]
	

	 "org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_4" -> "org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_5" ;
	 "org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_4" -> "org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_3" [color="red" ];
"org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_5" [label="5:  method_body \n   n$1=*&$irvar0:java.lang.Class*[_*_](*) [line 374]\n  *n$1[0]:java.lang.Object*=org.junit.rules.TestRuleTest$MethodNoRulesTest [line 374]\n  EXIT_SCOPE(n$1); [line 374]\n " shape="box"]
	

	 "org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_5" -> "org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_6" ;
	 "org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_5" -> "org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_3" [color="red" ];
"org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_6" [label="6:  Call Result JUnitCore.runClasses(Class[]) \n   n$2=*&$irvar0:java.lang.Class*[_*_](*) [line 374]\n  n$3=_fun_Result JUnitCore.runClasses(Class[])(n$2:java.lang.Class*[_*_](*)) [line 374]\n  *&result:org.junit.runner.Result*=n$3 [line 374]\n  NULLIFY(&$irvar0); [line 374]\n  EXIT_SCOPE(n$2,n$3,$irvar0); [line 374]\n " shape="box"]
	

	 "org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_6" -> "org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_7" ;
	 "org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_6" -> "org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_3" [color="red" ];
"org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_7" [label="7:  Call int Result.getFailureCount() \n   n$4=*&result:org.junit.runner.Result* [line 375]\n  _=*n$4:org.junit.runner.Result*(root org.junit.runner.Result) [line 375]\n  n$6=_fun_int Result.getFailureCount()(n$4:org.junit.runner.Result*) virtual [line 375]\n  *&$irvar1:int=n$6 [line 375]\n  NULLIFY(&result); [line 375]\n  EXIT_SCOPE(_,n$4,n$6,result); [line 375]\n " shape="box"]
	

	 "org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_7" -> "org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_8" ;
	 "org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_7" -> "org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_3" [color="red" ];
"org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_8" [label="8:  Call void Assert.assertEquals(long,long) \n   n$7=*&$irvar1:int [line 375]\n  n$8=_fun_void Assert.assertEquals(long,long)(0:long,(long)n$7:long) [line 375]\n  NULLIFY(&$irvar1); [line 375]\n  EXIT_SCOPE(n$7,n$8,$irvar1); [line 375]\n " shape="box"]
	

	 "org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_8" -> "org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_9" ;
	 "org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_8" -> "org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_3" [color="red" ];
"org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_9" [label="9:  method_body \n   APPLY_ABSTRACTION; [line 376]\n " shape="box"]
	

	 "org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_9" -> "org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_2" ;
	 "org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_9" -> "org.junit.rules.TestRuleTest.methodIgnoreNonRules():void.f0307352820775d2299e262c348c2c64_3" [color="red" ];
}
