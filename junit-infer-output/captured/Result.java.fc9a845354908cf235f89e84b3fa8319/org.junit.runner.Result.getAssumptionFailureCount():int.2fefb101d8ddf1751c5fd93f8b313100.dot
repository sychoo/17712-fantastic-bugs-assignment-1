/* @generated */
digraph cfg {
"org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_1" [label="1: Start int Result.getAssumptionFailureCount()\nFormals:  this:org.junit.runner.Result*\nLocals:  $irvar1:void $irvar0:void \n  " color=yellow style=filled]
	

	 "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_1" -> "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_4" ;
	 "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_1" -> "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_5" ;
"org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_2" [label="2: Exit int Result.getAssumptionFailureCount() \n  " color=yellow style=filled]
	

"org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_3" [label="3:  exceptions sink \n   NULLIFY(&$irvar0); [line 103]\n  NULLIFY(&$irvar1); [line 103]\n  EXIT_SCOPE($irvar0,$irvar1); [line 103]\n  APPLY_ABSTRACTION; [line 103]\n " shape="box"]
	

	 "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_3" -> "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_2" ;
"org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_4" [label="4: Prune (true branch, if) \n   n$0=*&this:org.junit.runner.Result* [line 99]\n  n$1=*n$0.assumptionFailureCount:java.util.concurrent.atomic.AtomicInteger*(root org.junit.runner.Result) [line 99]\n  PRUNE(!(n$1 != null), true); [line 99]\n  NULLIFY(&this); [line 99]\n  EXIT_SCOPE(n$0,n$1,this); [line 99]\n " shape="invhouse"]
	

	 "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_4" -> "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_6" ;
	 "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_4" -> "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_3" [color="red" ];
"org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_5" [label="5: Prune (false branch, if) \n   n$0=*&this:org.junit.runner.Result* [line 99]\n  n$1=*n$0.assumptionFailureCount:java.util.concurrent.atomic.AtomicInteger*(root org.junit.runner.Result) [line 99]\n  PRUNE((n$1 != null), false); [line 99]\n  EXIT_SCOPE(n$0,n$1); [line 99]\n " shape="invhouse"]
	

	 "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_5" -> "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_8" ;
	 "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_5" -> "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_3" [color="red" ];
"org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_6" [label="6:  Call UnsupportedOperationException.<init>(String) \n   n$2=_fun___new(sizeof(t=java.lang.UnsupportedOperationException):java.lang.UnsupportedOperationException*) [line 100]\n  n$3=_fun_UnsupportedOperationException.<init>(String)(n$2:java.lang.UnsupportedOperationException*,\"Result was serialized from a version of JUnit that doesn't support this method\":java.lang.Object*) [line 100]\n  *&$irvar0:java.lang.UnsupportedOperationException*=n$2 [line 100]\n  EXIT_SCOPE(n$2,n$3); [line 100]\n " shape="box"]
	

	 "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_6" -> "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_7" ;
	 "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_6" -> "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_3" [color="red" ];
"org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_7" [label="7:  throw \n   n$4=*&$irvar0:java.lang.UnsupportedOperationException* [line 100]\n  *&return:int=EXN n$4 [line 100]\n  NULLIFY(&$irvar0); [line 100]\n  EXIT_SCOPE(n$4,$irvar0); [line 100]\n  APPLY_ABSTRACTION; [line 100]\n " shape="box"]
	

	 "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_7" -> "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_2" ;
	 "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_7" -> "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_3" [color="red" ];
"org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_8" [label="8:  Call int AtomicInteger.get() \n   n$5=*&this:org.junit.runner.Result* [line 103]\n  n$6=*n$5.assumptionFailureCount:java.util.concurrent.atomic.AtomicInteger*(root org.junit.runner.Result) [line 103]\n  _=*n$6:java.util.concurrent.atomic.AtomicInteger*(root java.util.concurrent.atomic.AtomicInteger) [line 103]\n  n$8=_fun_int AtomicInteger.get()(n$6:java.util.concurrent.atomic.AtomicInteger*) virtual [line 103]\n  *&$irvar1:int=n$8 [line 103]\n  NULLIFY(&this); [line 103]\n  EXIT_SCOPE(_,n$5,n$6,n$8,this); [line 103]\n " shape="box"]
	

	 "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_8" -> "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_9" ;
	 "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_8" -> "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_3" [color="red" ];
"org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_9" [label="9:  method_body \n   n$9=*&$irvar1:int [line 103]\n  *&return:int=n$9 [line 103]\n  NULLIFY(&$irvar1); [line 103]\n  EXIT_SCOPE(n$9,$irvar1); [line 103]\n  APPLY_ABSTRACTION; [line 103]\n " shape="box"]
	

	 "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_9" -> "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_2" ;
	 "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_9" -> "org.junit.runner.Result.getAssumptionFailureCount():int.2fefb101d8ddf1751c5fd93f8b313100_3" [color="red" ];
}
