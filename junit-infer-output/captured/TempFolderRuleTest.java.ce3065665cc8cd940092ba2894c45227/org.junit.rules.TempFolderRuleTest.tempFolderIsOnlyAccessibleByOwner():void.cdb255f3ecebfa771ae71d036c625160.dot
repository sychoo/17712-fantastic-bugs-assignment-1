/* @generated */
digraph cfg {
"org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_1" [label="1: Start void TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner()\nFormals:  this:org.junit.rules.TempFolderRuleTest*\nLocals:  $irvar2:void $irvar1:void $irvar0:void actualPermissions:java.util.Set* expectedPermissions:java.util.Set* folder:org.junit.rules.TemporaryFolder*\nAnnotation: <_org.junit.Test> void TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner()() \n  " color=yellow style=filled]
	

	 "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_1" -> "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_4" ;
"org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_2" [label="2: Exit void TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner() \n  " color=yellow style=filled]
	

"org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_3" [label="3:  exceptions sink \n   NULLIFY(&actualPermissions); [line 200]\n  NULLIFY(&folder); [line 200]\n  NULLIFY(&$irvar0); [line 200]\n  NULLIFY(&$irvar1); [line 200]\n  NULLIFY(&$irvar2); [line 200]\n  NULLIFY(&expectedPermissions); [line 200]\n  EXIT_SCOPE(actualPermissions,folder,$irvar0,$irvar1,$irvar2,expectedPermissions); [line 200]\n  APPLY_ABSTRACTION; [line 200]\n " shape="box"]
	

	 "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_3" -> "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_2" ;
"org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_4" [label="4:  Call TemporaryFolder.<init>() \n   n$0=_fun___new(sizeof(t=org.junit.rules.TemporaryFolder):org.junit.rules.TemporaryFolder*) [line 194]\n  n$1=_fun_TemporaryFolder.<init>()(n$0:org.junit.rules.TemporaryFolder*) [line 194]\n  *&folder:org.junit.rules.TemporaryFolder*=n$0 [line 194]\n  EXIT_SCOPE(n$0,n$1); [line 194]\n " shape="box"]
	

	 "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_4" -> "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_5" ;
	 "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_4" -> "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_3" [color="red" ];
"org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_5" [label="5:  Call void TemporaryFolder.create() \n   n$2=*&folder:org.junit.rules.TemporaryFolder* [line 195]\n  _=*n$2:org.junit.rules.TemporaryFolder*(root org.junit.rules.TemporaryFolder) [line 195]\n  n$4=_fun_void TemporaryFolder.create()(n$2:org.junit.rules.TemporaryFolder*) [line 195]\n  EXIT_SCOPE(_,n$2,n$4); [line 195]\n " shape="box"]
	

	 "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_5" -> "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_6" ;
	 "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_5" -> "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_3" [color="red" ];
"org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_6" [label="6:  method_body \n   n$5=_fun___new_array(sizeof(t=java.lang.String*[_*_];len=[3]):java.lang.String*[_*_](*)) [line 197]\n  *&$irvar0:java.lang.String*[_*_](*)=n$5 [line 197]\n  EXIT_SCOPE(n$5); [line 197]\n " shape="box"]
	

	 "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_6" -> "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_7" ;
	 "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_6" -> "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_3" [color="red" ];
"org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_7" [label="7:  method_body \n   n$6=*&$irvar0:java.lang.String*[_*_](*) [line 197]\n  *n$6[0]:java.lang.Object*=\"OWNER_READ\" [line 197]\n  EXIT_SCOPE(n$6); [line 197]\n " shape="box"]
	

	 "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_7" -> "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_8" ;
	 "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_7" -> "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_3" [color="red" ];
"org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_8" [label="8:  method_body \n   n$7=*&$irvar0:java.lang.String*[_*_](*) [line 197]\n  *n$7[1]:java.lang.Object*=\"OWNER_WRITE\" [line 197]\n  EXIT_SCOPE(n$7); [line 197]\n " shape="box"]
	

	 "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_8" -> "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_9" ;
	 "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_8" -> "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_3" [color="red" ];
"org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_9" [label="9:  method_body \n   n$8=*&$irvar0:java.lang.String*[_*_](*) [line 197]\n  *n$8[2]:java.lang.Object*=\"OWNER_EXECUTE\" [line 197]\n  EXIT_SCOPE(n$8); [line 197]\n " shape="box"]
	

	 "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_9" -> "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_10" ;
	 "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_9" -> "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_3" [color="red" ];
"org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_10" [label="10:  Call List Arrays.asList(Object[]) \n   n$9=*&$irvar0:java.lang.String*[_*_](*) [line 197]\n  n$10=_fun_List Arrays.asList(Object[])(n$9:java.lang.String*[_*_](*)) [line 197]\n  *&$irvar1:java.util.List*=n$10 [line 197]\n  NULLIFY(&$irvar0); [line 197]\n  EXIT_SCOPE(n$9,n$10,$irvar0); [line 197]\n " shape="box"]
	

	 "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_10" -> "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_11" ;
	 "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_10" -> "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_3" [color="red" ];
"org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_11" [label="11:  Call TreeSet.<init>(Collection) \n   n$11=_fun___new(sizeof(t=java.util.TreeSet):java.util.TreeSet*) [line 197]\n  n$12=*&$irvar1:java.util.List* [line 197]\n  n$13=_fun_TreeSet.<init>(Collection)(n$11:java.util.TreeSet*,n$12:java.util.List*) [line 197]\n  *&expectedPermissions:java.util.TreeSet*=n$11 [line 197]\n  NULLIFY(&$irvar1); [line 197]\n  EXIT_SCOPE(n$11,n$12,n$13,$irvar1); [line 197]\n " shape="box"]
	

	 "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_11" -> "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_12" ;
	 "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_11" -> "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_3" [color="red" ];
"org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_12" [label="12:  Call File TemporaryFolder.getRoot() \n   n$14=*&folder:org.junit.rules.TemporaryFolder* [line 198]\n  _=*n$14:org.junit.rules.TemporaryFolder*(root org.junit.rules.TemporaryFolder) [line 198]\n  n$16=_fun_File TemporaryFolder.getRoot()(n$14:org.junit.rules.TemporaryFolder*) [line 198]\n  *&$irvar2:java.io.File*=n$16 [line 198]\n  NULLIFY(&folder); [line 198]\n  EXIT_SCOPE(_,n$14,n$16,folder); [line 198]\n " shape="box"]
	

	 "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_12" -> "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_13" ;
	 "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_12" -> "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_3" [color="red" ];
"org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_13" [label="13:  Call Set TempFolderRuleTest.getPosixFilePermissions(File) \n   n$17=*&this:org.junit.rules.TempFolderRuleTest* [line 198]\n  n$18=*&$irvar2:java.io.File* [line 198]\n  n$19=_fun_Set TempFolderRuleTest.getPosixFilePermissions(File)(n$17:org.junit.rules.TempFolderRuleTest*,n$18:java.io.File*) [line 198]\n  *&actualPermissions:java.util.Set*=n$19 [line 198]\n  NULLIFY(&$irvar2); [line 198]\n  NULLIFY(&this); [line 198]\n  EXIT_SCOPE(n$17,n$18,n$19,$irvar2,this); [line 198]\n " shape="box"]
	

	 "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_13" -> "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_14" ;
	 "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_13" -> "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_3" [color="red" ];
"org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_14" [label="14:  Call void Assert.assertEquals(Object,Object) \n   n$20=*&expectedPermissions:java.util.TreeSet* [line 199]\n  n$21=*&actualPermissions:java.util.Set* [line 199]\n  n$22=_fun_void Assert.assertEquals(Object,Object)(n$20:java.util.TreeSet*,n$21:java.util.Set*) [line 199]\n  NULLIFY(&actualPermissions); [line 199]\n  NULLIFY(&expectedPermissions); [line 199]\n  EXIT_SCOPE(n$20,n$21,n$22,actualPermissions,expectedPermissions); [line 199]\n " shape="box"]
	

	 "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_14" -> "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_15" ;
	 "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_14" -> "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_3" [color="red" ];
"org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_15" [label="15:  method_body \n   APPLY_ABSTRACTION; [line 200]\n " shape="box"]
	

	 "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_15" -> "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_2" ;
	 "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_15" -> "org.junit.rules.TempFolderRuleTest.tempFolderIsOnlyAccessibleByOwner():void.cdb255f3ecebfa771ae71d036c625160_3" [color="red" ];
}
