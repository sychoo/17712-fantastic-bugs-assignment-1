/* @generated */
digraph cfg {
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_1" [label="1: Start void MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure()\nFormals:  this:org.junit.tests.assertion.MultipleFailureExceptionTest*\nLocals:  $irvar3:void $irvar2:void CatchVar17:void $irvar1:void $irvar0:void expected:java.lang.IllegalArgumentException*\nAnnotation: <_org.junit.Test> void MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure()() \n  " color=yellow style=filled]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_1" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_4" ;
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_2" [label="2: Exit void MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure() \n  " color=yellow style=filled]
	

"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_3" [label="3:  exceptions sink \n   NULLIFY(&$irvar3); [line 86]\n  NULLIFY(&CatchVar17); [line 86]\n  NULLIFY(&$irvar2); [line 86]\n  NULLIFY(&expected); [line 86]\n  EXIT_SCOPE(n$14,$irvar3,CatchVar17,$irvar2,expected); [line 86]\n  APPLY_ABSTRACTION; [line 86]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_3" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_2" ;
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_4" [label="4:  Call List Collections.emptyList() \n   n$0=_fun_List Collections.emptyList()() [line 80]\n  *&$irvar0:java.util.List*=n$0 [line 80]\n  EXIT_SCOPE(n$0); [line 80]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_4" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_5" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_4" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_14" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_5" [label="5:  Call MultipleFailureException.<init>(List) \n   n$1=_fun___new(sizeof(t=org.junit.runners.model.MultipleFailureException):org.junit.runners.model.MultipleFailureException*) [line 80]\n  n$2=*&$irvar0:java.util.List* [line 80]\n  n$3=_fun_MultipleFailureException.<init>(List)(n$1:org.junit.runners.model.MultipleFailureException*,n$2:java.util.List*) [line 80]\n  *&$irvar1:org.junit.runners.model.MultipleFailureException*=n$1 [line 80]\n  NULLIFY(&$irvar0); [line 80]\n  NULLIFY(&$irvar1); [line 80]\n  EXIT_SCOPE(n$1,n$2,n$3,$irvar0,$irvar1); [line 80]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_5" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_6" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_5" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_14" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_6" [label="6:  Call void Assert.fail() \n   n$4=_fun_void Assert.fail()() [line 81]\n  EXIT_SCOPE(n$4); [line 81]\n  APPLY_ABSTRACTION; [line 81]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_6" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_11" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_6" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_14" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_7" [label="7:  method_body \n   n$5=*&CatchVar17:java.lang.Object* [line 82]\n  *&expected:java.lang.Object*=n$5 [line 82]\n  NULLIFY(&CatchVar17); [line 82]\n  EXIT_SCOPE(n$5,CatchVar17); [line 82]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_7" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_8" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_7" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_8" [label="8:  Call String IllegalArgumentException.getMessage() \n   n$6=*&expected:java.lang.Object* [line 83]\n  _=*n$6:java.lang.Object*(root java.lang.Object) [line 83]\n  n$8=_fun_String IllegalArgumentException.getMessage()(n$6:java.lang.Object*) virtual [line 83]\n  *&$irvar2:java.lang.String*=n$8 [line 83]\n  NULLIFY(&expected); [line 83]\n  EXIT_SCOPE(_,n$6,n$8,expected); [line 83]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_8" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_9" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_8" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_9" [label="9:  Call Matcher CoreMatchers.containsString(String) \n   n$9=_fun_Matcher CoreMatchers.containsString(String)(\"List of Throwables must not be empty\":java.lang.Object*) [line 84]\n  *&$irvar3:org.hamcrest.Matcher*=n$9 [line 84]\n  EXIT_SCOPE(n$9); [line 84]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_9" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_10" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_9" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_10" [label="10:  Call void MatcherAssert.assertThat(Object,Matcher) \n   n$10=*&$irvar2:java.lang.String* [line 83]\n  n$11=*&$irvar3:org.hamcrest.Matcher* [line 83]\n  n$12=_fun_void MatcherAssert.assertThat(Object,Matcher)(n$10:java.lang.String*,n$11:org.hamcrest.Matcher*) [line 83]\n  NULLIFY(&$irvar3); [line 83]\n  NULLIFY(&$irvar2); [line 83]\n  EXIT_SCOPE(n$10,n$11,n$12,$irvar3,$irvar2); [line 83]\n  APPLY_ABSTRACTION; [line 83]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_10" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_11" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_10" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_11" [label="11:  method_body \n   APPLY_ABSTRACTION; [line 86]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_11" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_2" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_11" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_12" [label="12: Prune (true branch, switch) \n   n$15=_fun___instanceof(n$14:java.lang.IllegalArgumentException*,sizeof(t=java.lang.IllegalArgumentException):void) [line 82]\n  PRUNE(n$15, true); [line 82]\n  *&CatchVar17:void=n$14 [line 82]\n  EXIT_SCOPE(n$14,n$15); [line 82]\n " shape="invhouse"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_12" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_7" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_12" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_13" [label="13: Prune (false branch, switch) \n   n$15=_fun___instanceof(n$14:java.lang.IllegalArgumentException*,sizeof(t=java.lang.IllegalArgumentException):void) [line 82]\n  PRUNE(!n$15, false); [line 82]\n  *&return:void=EXN n$14 [line 82]\n  EXIT_SCOPE(n$14,n$15); [line 82]\n " shape="invhouse"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_13" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_3" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_13" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_14" [label="14:  exception handler \n   n$13=*&return:void [line 82]\n  *&return:void=null [line 82]\n  n$14=_fun___unwrap_exception(n$13:void) [line 82]\n  NULLIFY(&$irvar0); [line 82]\n  EXIT_SCOPE(n$13,$irvar0); [line 82]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_14" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_12" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_14" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_13" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_14" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_3" [color="red" ];
}
