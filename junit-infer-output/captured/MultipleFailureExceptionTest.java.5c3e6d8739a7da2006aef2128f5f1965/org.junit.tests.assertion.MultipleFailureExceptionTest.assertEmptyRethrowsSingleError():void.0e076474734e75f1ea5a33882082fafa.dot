/* @generated */
digraph cfg {
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_1" [label="1: Start void MultipleFailureExceptionTest.assertEmptyRethrowsSingleError()\nFormals:  this:org.junit.tests.assertion.MultipleFailureExceptionTest*\nLocals:  CatchVar25:void errors:java.util.List* exception:java.lang.Throwable* e:java.lang.annotation.AnnotationFormatError*\nAnnotation: <_org.junit.Test> void MultipleFailureExceptionTest.assertEmptyRethrowsSingleError()() \n  " color=yellow style=filled]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_1" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_4" ;
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_2" [label="2: Exit void MultipleFailureExceptionTest.assertEmptyRethrowsSingleError() \n  " color=yellow style=filled]
	

"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_3" [label="3:  exceptions sink \n   NULLIFY(&exception); [line 58]\n  NULLIFY(&CatchVar25); [line 58]\n  NULLIFY(&errors); [line 58]\n  NULLIFY(&e); [line 58]\n  EXIT_SCOPE(n$12,exception,CatchVar25,errors,e); [line 58]\n  APPLY_ABSTRACTION; [line 58]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_3" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_2" ;
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_4" [label="4:  Call AnnotationFormatError.<init>(String) \n   n$0=_fun___new(sizeof(t=java.lang.annotation.AnnotationFormatError):java.lang.annotation.AnnotationFormatError*) [line 50]\n  n$1=_fun_AnnotationFormatError.<init>(String)(n$0:java.lang.annotation.AnnotationFormatError*,\"changeo\":java.lang.Object*) [line 50]\n  *&exception:java.lang.annotation.AnnotationFormatError*=n$0 [line 50]\n  EXIT_SCOPE(n$0,n$1); [line 50]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_4" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_5" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_4" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_5" [label="5:  Call List Collections.singletonList(Object) \n   n$2=*&exception:java.lang.annotation.AnnotationFormatError* [line 51]\n  n$3=_fun_List Collections.singletonList(Object)(n$2:java.lang.annotation.AnnotationFormatError*) [line 51]\n  *&errors:java.util.List*=n$3 [line 51]\n  EXIT_SCOPE(n$2,n$3); [line 51]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_5" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_6" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_5" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_6" [label="6:  Call void MultipleFailureException.assertEmpty(List) \n   n$4=*&errors:java.util.List* [line 53]\n  n$5=_fun_void MultipleFailureException.assertEmpty(List)(n$4:java.util.List*) [line 53]\n  NULLIFY(&errors); [line 53]\n  EXIT_SCOPE(n$4,n$5,errors); [line 53]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_6" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_7" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_6" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_13" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_7" [label="7:  Call void Assert.fail() \n   n$6=_fun_void Assert.fail()() [line 54]\n  EXIT_SCOPE(n$6); [line 54]\n  APPLY_ABSTRACTION; [line 54]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_7" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_10" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_7" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_13" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_8" [label="8:  method_body \n   n$7=*&CatchVar25:java.lang.Object* [line 55]\n  *&e:java.lang.Object*=n$7 [line 55]\n  NULLIFY(&CatchVar25); [line 55]\n  EXIT_SCOPE(n$7,CatchVar25); [line 55]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_8" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_9" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_8" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_9" [label="9:  Call void Assert.assertSame(Object,Object) \n   n$8=*&e:java.lang.Object* [line 56]\n  n$9=*&exception:java.lang.annotation.AnnotationFormatError* [line 56]\n  n$10=_fun_void Assert.assertSame(Object,Object)(n$8:java.lang.Object*,n$9:java.lang.annotation.AnnotationFormatError*) [line 56]\n  NULLIFY(&exception); [line 56]\n  NULLIFY(&e); [line 56]\n  EXIT_SCOPE(n$8,n$9,n$10,exception,e); [line 56]\n  APPLY_ABSTRACTION; [line 56]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_9" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_10" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_9" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_10" [label="10:  method_body \n   NULLIFY(&exception); [line 58]\n  EXIT_SCOPE(exception); [line 58]\n  APPLY_ABSTRACTION; [line 58]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_10" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_2" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_10" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_11" [label="11: Prune (true branch, switch) \n   n$13=_fun___instanceof(n$12:java.lang.annotation.AnnotationFormatError*,sizeof(t=java.lang.annotation.AnnotationFormatError):void) [line 55]\n  PRUNE(n$13, true); [line 55]\n  *&CatchVar25:void=n$12 [line 55]\n  EXIT_SCOPE(n$12,n$13); [line 55]\n " shape="invhouse"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_11" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_8" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_11" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_12" [label="12: Prune (false branch, switch) \n   n$13=_fun___instanceof(n$12:java.lang.annotation.AnnotationFormatError*,sizeof(t=java.lang.annotation.AnnotationFormatError):void) [line 55]\n  PRUNE(!n$13, false); [line 55]\n  *&return:void=EXN n$12 [line 55]\n  NULLIFY(&exception); [line 55]\n  EXIT_SCOPE(n$12,n$13,exception); [line 55]\n " shape="invhouse"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_12" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_3" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_12" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_13" [label="13:  exception handler \n   n$11=*&return:void [line 55]\n  *&return:void=null [line 55]\n  n$12=_fun___unwrap_exception(n$11:void) [line 55]\n  EXIT_SCOPE(n$11); [line 55]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_13" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_11" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_13" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_12" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_13" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_3" [color="red" ];
}
