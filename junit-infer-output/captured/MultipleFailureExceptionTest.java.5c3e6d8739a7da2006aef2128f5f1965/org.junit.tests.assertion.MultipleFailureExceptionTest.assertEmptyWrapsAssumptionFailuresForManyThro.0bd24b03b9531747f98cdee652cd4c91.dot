/* @generated */
digraph cfg {
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_1" [label="1: Start void MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThrowables()\nFormals:  this:org.junit.tests.assertion.MultipleFailureExceptionTest*\nLocals:  $irvar22:void $irvar21:void $irvar20:void $irvar19:void $irvar18:void $irvar17:void $irvar16:void $irvar15:void $irvar14:void $irvar13:void $irvar12:void $irvar11:void $irvar10:void $irvar9:void $irvar8:void $irvar7:void $irvar6:void $irvar5:void $irvar4:void $irvar3:void CatchVar52:void $irvar2:void $irvar1:void $irvar0:void assumptionViolatedException:org.junit.internal.AssumptionViolatedException* errors:java.util.List* expected:org.junit.runners.model.MultipleFailureException* cause:java.lang.Throwable* first:java.lang.Throwable*\nAnnotation: <_org.junit.Test> void MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThrowables()() \n  " color=yellow style=filled]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_1" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_4" ;
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_2" [label="2: Exit void MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThrowables() \n  " color=yellow style=filled]
	

"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [label="3:  exceptions sink \n   NULLIFY(&CatchVar52); [line 109]\n  NULLIFY(&$irvar22); [line 109]\n  NULLIFY(&$irvar3); [line 109]\n  NULLIFY(&$irvar9); [line 109]\n  NULLIFY(&$irvar17); [line 109]\n  NULLIFY(&assumptionViolatedException); [line 109]\n  NULLIFY(&$irvar18); [line 109]\n  NULLIFY(&$irvar5); [line 109]\n  NULLIFY(&$irvar16); [line 109]\n  NULLIFY(&$irvar4); [line 109]\n  NULLIFY(&$irvar7); [line 109]\n  NULLIFY(&$irvar12); [line 109]\n  NULLIFY(&$irvar19); [line 109]\n  NULLIFY(&$irvar21); [line 109]\n  NULLIFY(&$irvar20); [line 109]\n  NULLIFY(&$irvar6); [line 109]\n  NULLIFY(&$irvar13); [line 109]\n  NULLIFY(&$irvar11); [line 109]\n  NULLIFY(&$irvar10); [line 109]\n  NULLIFY(&cause); [line 109]\n  NULLIFY(&first); [line 109]\n  NULLIFY(&$irvar8); [line 109]\n  NULLIFY(&$irvar1); [line 109]\n  NULLIFY(&errors); [line 109]\n  NULLIFY(&$irvar15); [line 109]\n  NULLIFY(&expected); [line 109]\n  NULLIFY(&$irvar14); [line 109]\n  EXIT_SCOPE(n$96,CatchVar52,$irvar22,$irvar3,$irvar9,$irvar17,assumptionViolatedException,$irvar18,$irvar5,$irvar16,$irvar4,$irvar7,$irvar12,$irvar19,$irvar21,$irvar20,$irvar6,$irvar13,$irvar11,$irvar10,cause,first,$irvar8,$irvar1,errors,$irvar15,expected,$irvar14); [line 109]\n  APPLY_ABSTRACTION; [line 109]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_2" ;
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_4" [label="4:  Call ArrayList.<init>() \n   n$0=_fun___new(sizeof(t=java.util.ArrayList):java.util.ArrayList*) [line 90]\n  n$1=_fun_ArrayList.<init>()(n$0:java.util.ArrayList*) [line 90]\n  *&errors:java.util.ArrayList*=n$0 [line 90]\n  EXIT_SCOPE(n$0,n$1); [line 90]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_4" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_5" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_4" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_5" [label="5:  Call AssumptionViolatedException.<init>(String) \n   n$2=_fun___new(sizeof(t=org.junit.internal.AssumptionViolatedException):org.junit.internal.AssumptionViolatedException*) [line 91]\n  n$3=_fun_AssumptionViolatedException.<init>(String)(n$2:org.junit.internal.AssumptionViolatedException*,\"skip it\":java.lang.Object*) [line 91]\n  *&assumptionViolatedException:org.junit.internal.AssumptionViolatedException*=n$2 [line 91]\n  EXIT_SCOPE(n$2,n$3); [line 91]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_5" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_6" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_5" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_6" [label="6:  Call boolean List.add(Object) \n   n$4=*&errors:java.util.ArrayList* [line 92]\n  _=*n$4:java.util.ArrayList*(root java.util.ArrayList) [line 92]\n  n$6=*&assumptionViolatedException:org.junit.internal.AssumptionViolatedException* [line 92]\n  n$7=_fun_boolean List.add(Object)(n$4:java.util.ArrayList*,n$6:org.junit.internal.AssumptionViolatedException*) interface virtual [line 92]\n  *&$irvar0:_Bool=n$7 [line 92]\n  NULLIFY(&$irvar0); [line 92]\n  EXIT_SCOPE(_,n$4,n$6,n$7,$irvar0); [line 92]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_6" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_7" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_6" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_7" [label="7:  Call RuntimeException.<init>(String) \n   n$8=_fun___new(sizeof(t=java.lang.RuntimeException):java.lang.RuntimeException*) [line 93]\n  n$9=_fun_RuntimeException.<init>(String)(n$8:java.lang.RuntimeException*,\"garlic\":java.lang.Object*) [line 93]\n  *&$irvar1:java.lang.RuntimeException*=n$8 [line 93]\n  EXIT_SCOPE(n$8,n$9); [line 93]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_7" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_8" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_7" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_8" [label="8:  Call boolean List.add(Object) \n   n$10=*&errors:java.util.ArrayList* [line 93]\n  _=*n$10:java.util.ArrayList*(root java.util.ArrayList) [line 93]\n  n$12=*&$irvar1:java.lang.RuntimeException* [line 93]\n  n$13=_fun_boolean List.add(Object)(n$10:java.util.ArrayList*,n$12:java.lang.RuntimeException*) interface virtual [line 93]\n  *&$irvar2:_Bool=n$13 [line 93]\n  NULLIFY(&$irvar1); [line 93]\n  NULLIFY(&$irvar2); [line 93]\n  EXIT_SCOPE(_,n$10,n$12,n$13,$irvar1,$irvar2); [line 93]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_8" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_9" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_8" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_9" [label="9:  Call void MultipleFailureException.assertEmpty(List) \n   n$14=*&errors:java.util.ArrayList* [line 96]\n  n$15=_fun_void MultipleFailureException.assertEmpty(List)(n$14:java.util.ArrayList*) [line 96]\n  NULLIFY(&errors); [line 96]\n  EXIT_SCOPE(n$14,n$15,errors); [line 96]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_9" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_10" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_9" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_44" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_10" [label="10:  Call void Assert.fail() \n   n$16=_fun_void Assert.fail()() [line 97]\n  EXIT_SCOPE(n$16); [line 97]\n  APPLY_ABSTRACTION; [line 97]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_10" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_41" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_10" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_44" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_11" [label="11:  method_body \n   n$17=*&CatchVar52:java.lang.Object* [line 98]\n  *&expected:java.lang.Object*=n$17 [line 98]\n  NULLIFY(&CatchVar52); [line 98]\n  EXIT_SCOPE(n$17,CatchVar52); [line 98]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_11" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_12" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_11" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_12" [label="12:  Call List MultipleFailureException.getFailures() \n   n$18=*&expected:java.lang.Object* [line 99]\n  _=*n$18:java.lang.Object*(root java.lang.Object) [line 99]\n  n$20=_fun_List MultipleFailureException.getFailures()(n$18:java.lang.Object*) virtual [line 99]\n  *&$irvar3:java.util.List*=n$20 [line 99]\n  EXIT_SCOPE(_,n$18,n$20); [line 99]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_12" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_13" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_12" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_13" [label="13:  Call int List.size() \n   n$21=*&$irvar3:java.util.List* [line 99]\n  _=*n$21:java.util.List*(root java.util.List) [line 99]\n  n$23=_fun_int List.size()(n$21:java.util.List*) interface virtual [line 99]\n  *&$irvar4:int=n$23 [line 99]\n  NULLIFY(&$irvar3); [line 99]\n  EXIT_SCOPE(_,n$21,n$23,$irvar3); [line 99]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_13" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_14" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_13" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_14" [label="14:  Call Integer Integer.valueOf(int) \n   n$24=*&$irvar4:int [line 99]\n  n$25=_fun_Integer Integer.valueOf(int)(n$24:int) [line 99]\n  *&$irvar5:java.lang.Integer*=n$25 [line 99]\n  NULLIFY(&$irvar4); [line 99]\n  EXIT_SCOPE(n$24,n$25,$irvar4); [line 99]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_14" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_15" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_14" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_15" [label="15:  Call Integer Integer.valueOf(int) \n   n$26=_fun_Integer Integer.valueOf(int)(2:int) [line 99]\n  *&$irvar6:java.lang.Integer*=n$26 [line 99]\n  EXIT_SCOPE(n$26); [line 99]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_15" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_16" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_15" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_16" [label="16:  Call Matcher CoreMatchers.equalTo(Object) \n   n$27=*&$irvar6:java.lang.Integer* [line 99]\n  n$28=_fun_Matcher CoreMatchers.equalTo(Object)(n$27:java.lang.Integer*) [line 99]\n  *&$irvar7:org.hamcrest.Matcher*=n$28 [line 99]\n  NULLIFY(&$irvar6); [line 99]\n  EXIT_SCOPE(n$27,n$28,$irvar6); [line 99]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_16" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_17" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_16" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_17" [label="17:  Call void MatcherAssert.assertThat(Object,Matcher) \n   n$29=*&$irvar5:java.lang.Integer* [line 99]\n  n$30=*&$irvar7:org.hamcrest.Matcher* [line 99]\n  n$31=_fun_void MatcherAssert.assertThat(Object,Matcher)(n$29:java.lang.Integer*,n$30:org.hamcrest.Matcher*) [line 99]\n  NULLIFY(&$irvar5); [line 99]\n  NULLIFY(&$irvar7); [line 99]\n  EXIT_SCOPE(n$29,n$30,n$31,$irvar5,$irvar7); [line 99]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_17" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_18" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_17" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_18" [label="18:  Call String MultipleFailureException.getMessage() \n   n$32=*&expected:java.lang.Object* [line 100]\n  _=*n$32:java.lang.Object*(root java.lang.Object) [line 100]\n  n$34=_fun_String MultipleFailureException.getMessage()(n$32:java.lang.Object*) virtual [line 100]\n  *&$irvar8:java.lang.String*=n$34 [line 100]\n  EXIT_SCOPE(_,n$32,n$34); [line 100]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_18" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_19" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_18" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_19" [label="19:  Call StringBuilder.<init>() \n   n$35=_fun___new(sizeof(t=java.lang.StringBuilder):java.lang.StringBuilder*) [line 100]\n  n$36=_fun_StringBuilder.<init>()(n$35:java.lang.StringBuilder*) [line 100]\n  *&$irvar9:java.lang.StringBuilder*=n$35 [line 100]\n  EXIT_SCOPE(n$35,n$36); [line 100]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_19" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_20" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_19" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_20" [label="20:  Call StringBuilder StringBuilder.append(String) \n   n$37=*&$irvar9:java.lang.StringBuilder* [line 100]\n  _=*n$37:java.lang.StringBuilder*(root java.lang.StringBuilder) [line 100]\n  n$39=_fun_StringBuilder StringBuilder.append(String)(n$37:java.lang.StringBuilder*,\"There were 2 errors:\":java.lang.Object*) virtual [line 100]\n  *&$irvar10:java.lang.StringBuilder*=n$39 [line 100]\n  NULLIFY(&$irvar9); [line 100]\n  EXIT_SCOPE(_,n$37,n$39,$irvar9); [line 100]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_20" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_21" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_20" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_21" [label="21:  Call StringBuilder StringBuilder.append(String) \n   n$40=*&$irvar10:java.lang.StringBuilder* [line 100]\n  _=*n$40:java.lang.StringBuilder*(root java.lang.StringBuilder) [line 100]\n  n$42=*&#GB<>$org.junit.tests.assertion.MultipleFailureExceptionTest.LINE_SEPARATOR:java.lang.String*(root org.junit.tests.assertion.MultipleFailureExceptionTest) [line 100]\n  n$43=_fun_StringBuilder StringBuilder.append(String)(n$40:java.lang.StringBuilder*,n$42:java.lang.String*) virtual [line 100]\n  *&$irvar11:java.lang.StringBuilder*=n$43 [line 100]\n  NULLIFY(&$irvar10); [line 100]\n  EXIT_SCOPE(_,n$40,n$42,n$43,$irvar10); [line 100]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_21" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_22" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_21" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_22" [label="22:  Call String StringBuilder.toString() \n   n$44=*&$irvar11:java.lang.StringBuilder* [line 100]\n  _=*n$44:java.lang.StringBuilder*(root java.lang.StringBuilder) [line 100]\n  n$46=_fun_String StringBuilder.toString()(n$44:java.lang.StringBuilder*) virtual [line 100]\n  *&$irvar12:java.lang.String*=n$46 [line 100]\n  NULLIFY(&$irvar11); [line 100]\n  EXIT_SCOPE(_,n$44,n$46,$irvar11); [line 100]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_22" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_23" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_22" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_23" [label="23:  Call boolean String.startsWith(String) \n   n$47=*&$irvar8:java.lang.String* [line 100]\n  _=*n$47:java.lang.String*(root java.lang.String) [line 100]\n  n$49=*&$irvar12:java.lang.String* [line 100]\n  n$50=_fun_boolean String.startsWith(String)(n$47:java.lang.String*,n$49:java.lang.String*) virtual [line 100]\n  *&$irvar13:_Bool=n$50 [line 100]\n  NULLIFY(&$irvar12); [line 100]\n  NULLIFY(&$irvar8); [line 100]\n  EXIT_SCOPE(_,n$47,n$49,n$50,$irvar12,$irvar8); [line 100]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_23" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_24" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_23" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_24" [label="24:  Call void Assert.assertTrue(boolean) \n   n$51=*&$irvar13:_Bool [line 100]\n  n$52=_fun_void Assert.assertTrue(boolean)(n$51:_Bool) [line 100]\n  NULLIFY(&$irvar13); [line 100]\n  EXIT_SCOPE(n$51,n$52,$irvar13); [line 100]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_24" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_25" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_24" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_25" [label="25:  Call String MultipleFailureException.getMessage() \n   n$53=*&expected:java.lang.Object* [line 101]\n  _=*n$53:java.lang.Object*(root java.lang.Object) [line 101]\n  n$55=_fun_String MultipleFailureException.getMessage()(n$53:java.lang.Object*) virtual [line 101]\n  *&$irvar14:java.lang.String*=n$55 [line 101]\n  EXIT_SCOPE(_,n$53,n$55); [line 101]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_25" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_26" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_25" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_26" [label="26:  Call boolean String.contains(CharSequence) \n   n$56=*&$irvar14:java.lang.String* [line 101]\n  _=*n$56:java.lang.String*(root java.lang.String) [line 101]\n  n$58=_fun_boolean String.contains(CharSequence)(n$56:java.lang.String*,\"TestCouldNotBeSkippedException(Test could not be skipped\":java.lang.Object*) virtual [line 101]\n  *&$irvar15:_Bool=n$58 [line 101]\n  NULLIFY(&$irvar14); [line 101]\n  EXIT_SCOPE(_,n$56,n$58,$irvar14); [line 101]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_26" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_27" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_26" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_27" [label="27:  Call void Assert.assertTrue(boolean) \n   n$59=*&$irvar15:_Bool [line 101]\n  n$60=_fun_void Assert.assertTrue(boolean)(n$59:_Bool) [line 101]\n  NULLIFY(&$irvar15); [line 101]\n  EXIT_SCOPE(n$59,n$60,$irvar15); [line 101]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_27" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_28" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_27" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_28" [label="28:  Call String MultipleFailureException.getMessage() \n   n$61=*&expected:java.lang.Object* [line 102]\n  _=*n$61:java.lang.Object*(root java.lang.Object) [line 102]\n  n$63=_fun_String MultipleFailureException.getMessage()(n$61:java.lang.Object*) virtual [line 102]\n  *&$irvar16:java.lang.String*=n$63 [line 102]\n  EXIT_SCOPE(_,n$61,n$63); [line 102]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_28" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_29" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_28" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_29" [label="29:  Call boolean String.contains(CharSequence) \n   n$64=*&$irvar16:java.lang.String* [line 102]\n  _=*n$64:java.lang.String*(root java.lang.String) [line 102]\n  n$66=_fun_boolean String.contains(CharSequence)(n$64:java.lang.String*,\"RuntimeException(garlic)\":java.lang.Object*) virtual [line 102]\n  *&$irvar17:_Bool=n$66 [line 102]\n  NULLIFY(&$irvar16); [line 102]\n  EXIT_SCOPE(_,n$64,n$66,$irvar16); [line 102]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_29" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_30" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_29" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_30" [label="30:  Call void Assert.assertTrue(boolean) \n   n$67=*&$irvar17:_Bool [line 102]\n  n$68=_fun_void Assert.assertTrue(boolean)(n$67:_Bool) [line 102]\n  NULLIFY(&$irvar17); [line 102]\n  EXIT_SCOPE(n$67,n$68,$irvar17); [line 102]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_30" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_31" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_30" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_31" [label="31:  Call List MultipleFailureException.getFailures() \n   n$69=*&expected:java.lang.Object* [line 103]\n  _=*n$69:java.lang.Object*(root java.lang.Object) [line 103]\n  n$71=_fun_List MultipleFailureException.getFailures()(n$69:java.lang.Object*) virtual [line 103]\n  *&$irvar18:java.util.List*=n$71 [line 103]\n  NULLIFY(&expected); [line 103]\n  EXIT_SCOPE(_,n$69,n$71,expected); [line 103]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_31" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_32" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_31" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_32" [label="32:  Call Object List.get(int) \n   n$72=*&$irvar18:java.util.List* [line 103]\n  _=*n$72:java.util.List*(root java.util.List) [line 103]\n  n$74=_fun_Object List.get(int)(n$72:java.util.List*,0:int) interface virtual [line 103]\n  *&$irvar19:java.lang.Object*=n$74 [line 103]\n  NULLIFY(&$irvar18); [line 103]\n  EXIT_SCOPE(_,n$72,n$74,$irvar18); [line 103]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_32" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_33" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_32" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_33" [label="33:  method_body \n   n$75=*&$irvar19:java.lang.Object* [line 103]\n  n$76=_fun___cast(n$75:java.lang.Object*,sizeof(t=java.lang.Throwable;sub_t=( sub )(cast)):void) [line 103]\n  *&first:java.lang.Throwable*=n$76 [line 103]\n  NULLIFY(&$irvar19); [line 103]\n  EXIT_SCOPE(n$75,n$76,$irvar19); [line 103]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_33" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_34" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_33" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_34" [label="34:  Call Matcher CoreMatchers.instanceOf(Class) \n   n$77=_fun_Matcher CoreMatchers.instanceOf(Class)(org.junit.TestCouldNotBeSkippedException:java.lang.Object*) [line 104]\n  *&$irvar20:org.hamcrest.Matcher*=n$77 [line 104]\n  EXIT_SCOPE(n$77); [line 104]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_34" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_35" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_34" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_35" [label="35:  Call void MatcherAssert.assertThat(Object,Matcher) \n   n$78=*&first:java.lang.Throwable* [line 104]\n  n$79=*&$irvar20:org.hamcrest.Matcher* [line 104]\n  n$80=_fun_void MatcherAssert.assertThat(Object,Matcher)(n$78:java.lang.Throwable*,n$79:org.hamcrest.Matcher*) [line 104]\n  NULLIFY(&$irvar20); [line 104]\n  EXIT_SCOPE(n$78,n$79,n$80,$irvar20); [line 104]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_35" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_36" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_35" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_36" [label="36:  Call Throwable TestCouldNotBeSkippedException.getCause() \n   n$81=*&first:java.lang.Throwable* [line 105]\n  n$82=_fun___cast(n$81:java.lang.Throwable*,sizeof(t=org.junit.TestCouldNotBeSkippedException;sub_t=( sub )(cast)):void) [line 105]\n  _=*n$82:org.junit.TestCouldNotBeSkippedException*(root org.junit.TestCouldNotBeSkippedException) [line 105]\n  n$84=_fun_Throwable TestCouldNotBeSkippedException.getCause()(n$82:org.junit.TestCouldNotBeSkippedException*) virtual [line 105]\n  *&cause:java.lang.Throwable*=n$84 [line 105]\n  NULLIFY(&first); [line 105]\n  EXIT_SCOPE(_,n$81,n$82,n$84,first); [line 105]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_36" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_37" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_36" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_37" [label="37:  Call Matcher CoreMatchers.instanceOf(Class) \n   n$85=_fun_Matcher CoreMatchers.instanceOf(Class)(org.junit.internal.AssumptionViolatedException:java.lang.Object*) [line 106]\n  *&$irvar21:org.hamcrest.Matcher*=n$85 [line 106]\n  EXIT_SCOPE(n$85); [line 106]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_37" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_38" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_37" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_38" [label="38:  Call void MatcherAssert.assertThat(Object,Matcher) \n   n$86=*&cause:java.lang.Throwable* [line 106]\n  n$87=*&$irvar21:org.hamcrest.Matcher* [line 106]\n  n$88=_fun_void MatcherAssert.assertThat(Object,Matcher)(n$86:java.lang.Throwable*,n$87:org.hamcrest.Matcher*) [line 106]\n  NULLIFY(&$irvar21); [line 106]\n  EXIT_SCOPE(n$86,n$87,n$88,$irvar21); [line 106]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_38" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_39" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_38" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_39" [label="39:  Call Matcher CoreMatchers.sameInstance(Object) \n   n$89=*&assumptionViolatedException:org.junit.internal.AssumptionViolatedException* [line 107]\n  n$90=_fun_Matcher CoreMatchers.sameInstance(Object)(n$89:org.junit.internal.AssumptionViolatedException*) [line 107]\n  *&$irvar22:org.hamcrest.Matcher*=n$90 [line 107]\n  NULLIFY(&assumptionViolatedException); [line 107]\n  EXIT_SCOPE(n$89,n$90,assumptionViolatedException); [line 107]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_39" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_40" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_39" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_40" [label="40:  Call void MatcherAssert.assertThat(Object,Matcher) \n   n$91=*&cause:java.lang.Throwable* [line 107]\n  n$92=_fun___cast(n$91:java.lang.Throwable*,sizeof(t=org.junit.internal.AssumptionViolatedException;sub_t=( sub )(cast)):void) [line 107]\n  n$93=*&$irvar22:org.hamcrest.Matcher* [line 107]\n  n$94=_fun_void MatcherAssert.assertThat(Object,Matcher)(n$92:org.junit.internal.AssumptionViolatedException*,n$93:org.hamcrest.Matcher*) [line 107]\n  NULLIFY(&$irvar22); [line 107]\n  NULLIFY(&cause); [line 107]\n  EXIT_SCOPE(n$91,n$92,n$93,n$94,$irvar22,cause); [line 107]\n  APPLY_ABSTRACTION; [line 107]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_40" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_41" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_40" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_41" [label="41:  method_body \n   NULLIFY(&assumptionViolatedException); [line 109]\n  EXIT_SCOPE(assumptionViolatedException); [line 109]\n  APPLY_ABSTRACTION; [line 109]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_41" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_2" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_41" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_42" [label="42: Prune (true branch, switch) \n   n$97=_fun___instanceof(n$96:org.junit.runners.model.MultipleFailureException*,sizeof(t=org.junit.runners.model.MultipleFailureException):void) [line 98]\n  PRUNE(n$97, true); [line 98]\n  *&CatchVar52:void=n$96 [line 98]\n  EXIT_SCOPE(n$96,n$97); [line 98]\n " shape="invhouse"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_42" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_11" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_42" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_43" [label="43: Prune (false branch, switch) \n   n$97=_fun___instanceof(n$96:org.junit.runners.model.MultipleFailureException*,sizeof(t=org.junit.runners.model.MultipleFailureException):void) [line 98]\n  PRUNE(!n$97, false); [line 98]\n  *&return:void=EXN n$96 [line 98]\n  NULLIFY(&assumptionViolatedException); [line 98]\n  EXIT_SCOPE(n$96,n$97,assumptionViolatedException); [line 98]\n " shape="invhouse"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_43" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_43" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_44" [label="44:  exception handler \n   n$95=*&return:void [line 98]\n  *&return:void=null [line 98]\n  n$96=_fun___unwrap_exception(n$95:void) [line 98]\n  EXIT_SCOPE(n$95); [line 98]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_44" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_42" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_44" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_43" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_44" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
}
