/* @generated */
digraph cfg {
"org.junit.tests.assertion.MultipleFailureExceptionTest.<clinit>():void.ca0ca2f0ccd777db4a59fe1443e743c8_1" [label="1: Start void MultipleFailureExceptionTest.<clinit>()\nFormals: \nLocals:  $irvar0:void \n  " color=yellow style=filled]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.<clinit>():void.ca0ca2f0ccd777db4a59fe1443e743c8_1" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.<clinit>():void.ca0ca2f0ccd777db4a59fe1443e743c8_4" ;
"org.junit.tests.assertion.MultipleFailureExceptionTest.<clinit>():void.ca0ca2f0ccd777db4a59fe1443e743c8_2" [label="2: Exit void MultipleFailureExceptionTest.<clinit>() \n  " color=yellow style=filled]
	

"org.junit.tests.assertion.MultipleFailureExceptionTest.<clinit>():void.ca0ca2f0ccd777db4a59fe1443e743c8_3" [label="3:  exceptions sink \n  " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.<clinit>():void.ca0ca2f0ccd777db4a59fe1443e743c8_3" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.<clinit>():void.ca0ca2f0ccd777db4a59fe1443e743c8_2" ;
"org.junit.tests.assertion.MultipleFailureExceptionTest.<clinit>():void.ca0ca2f0ccd777db4a59fe1443e743c8_4" [label="4:  Call String System.getProperty(String) \n   n$0=_fun_String System.getProperty(String)(\"line.separator\":java.lang.Object*) [line 29]\n  *&$irvar0:java.lang.String*=n$0 [line 29]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.<clinit>():void.ca0ca2f0ccd777db4a59fe1443e743c8_4" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.<clinit>():void.ca0ca2f0ccd777db4a59fe1443e743c8_5" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.<clinit>():void.ca0ca2f0ccd777db4a59fe1443e743c8_4" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.<clinit>():void.ca0ca2f0ccd777db4a59fe1443e743c8_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.<clinit>():void.ca0ca2f0ccd777db4a59fe1443e743c8_5" [label="5:  method_body \n   n$1=*&$irvar0:java.lang.String* [line 29]\n  *&#GB<>$org.junit.tests.assertion.MultipleFailureExceptionTest.LINE_SEPARATOR:org.junit.tests.assertion.MultipleFailureExceptionTest(root org.junit.tests.assertion.MultipleFailureExceptionTest)=n$1 [line 29]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.<clinit>():void.ca0ca2f0ccd777db4a59fe1443e743c8_5" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.<clinit>():void.ca0ca2f0ccd777db4a59fe1443e743c8_6" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.<clinit>():void.ca0ca2f0ccd777db4a59fe1443e743c8_5" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.<clinit>():void.ca0ca2f0ccd777db4a59fe1443e743c8_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.<clinit>():void.ca0ca2f0ccd777db4a59fe1443e743c8_6" [label="6:  method_body \n  " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.<clinit>():void.ca0ca2f0ccd777db4a59fe1443e743c8_6" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.<clinit>():void.ca0ca2f0ccd777db4a59fe1443e743c8_2" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.<clinit>():void.ca0ca2f0ccd777db4a59fe1443e743c8_6" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.<clinit>():void.ca0ca2f0ccd777db4a59fe1443e743c8_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.<init>().c54a2e4822c75e6a8564a48d7b070b15_1" [label="1: Start MultipleFailureExceptionTest.<init>()\nFormals:  this:org.junit.tests.assertion.MultipleFailureExceptionTest*\nLocals:  \n  " color=yellow style=filled]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.<init>().c54a2e4822c75e6a8564a48d7b070b15_1" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.<init>().c54a2e4822c75e6a8564a48d7b070b15_4" ;
"org.junit.tests.assertion.MultipleFailureExceptionTest.<init>().c54a2e4822c75e6a8564a48d7b070b15_2" [label="2: Exit MultipleFailureExceptionTest.<init>() \n  " color=yellow style=filled]
	

"org.junit.tests.assertion.MultipleFailureExceptionTest.<init>().c54a2e4822c75e6a8564a48d7b070b15_3" [label="3:  exceptions sink \n  " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.<init>().c54a2e4822c75e6a8564a48d7b070b15_3" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.<init>().c54a2e4822c75e6a8564a48d7b070b15_2" ;
"org.junit.tests.assertion.MultipleFailureExceptionTest.<init>().c54a2e4822c75e6a8564a48d7b070b15_4" [label="4:  Call Object.<init>() \n   n$0=*&this:org.junit.tests.assertion.MultipleFailureExceptionTest* [line 28]\n  n$1=_fun_Object.<init>()(n$0:org.junit.tests.assertion.MultipleFailureExceptionTest*) [line 28]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.<init>().c54a2e4822c75e6a8564a48d7b070b15_4" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.<init>().c54a2e4822c75e6a8564a48d7b070b15_5" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.<init>().c54a2e4822c75e6a8564a48d7b070b15_4" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.<init>().c54a2e4822c75e6a8564a48d7b070b15_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.<init>().c54a2e4822c75e6a8564a48d7b070b15_5" [label="5:  method_body \n  " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.<init>().c54a2e4822c75e6a8564a48d7b070b15_5" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.<init>().c54a2e4822c75e6a8564a48d7b070b15_2" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.<init>().c54a2e4822c75e6a8564a48d7b070b15_5" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.<init>().c54a2e4822c75e6a8564a48d7b070b15_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException.<init>(java.lang.String).0dda55128c51227757b80ca7131a7ebb_1" [label="1: Start MultipleFailureExceptionTest$ExpectedException.<init>(String)\nFormals:  this:org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException* message:java.lang.String*\nLocals:  \n  " color=yellow style=filled]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException.<init>(java.lang.String).0dda55128c51227757b80ca7131a7ebb_1" -> "org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException.<init>(java.lang.String).0dda55128c51227757b80ca7131a7ebb_4" ;
"org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException.<init>(java.lang.String).0dda55128c51227757b80ca7131a7ebb_2" [label="2: Exit MultipleFailureExceptionTest$ExpectedException.<init>(String) \n  " color=yellow style=filled]
	

"org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException.<init>(java.lang.String).0dda55128c51227757b80ca7131a7ebb_3" [label="3:  exceptions sink \n  " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException.<init>(java.lang.String).0dda55128c51227757b80ca7131a7ebb_3" -> "org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException.<init>(java.lang.String).0dda55128c51227757b80ca7131a7ebb_2" ;
"org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException.<init>(java.lang.String).0dda55128c51227757b80ca7131a7ebb_4" [label="4:  Call RuntimeException.<init>(String) \n   n$0=*&this:org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException* [line 115]\n  n$1=*&message:java.lang.String* [line 115]\n  n$2=_fun_RuntimeException.<init>(String)(n$0:org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException*,n$1:java.lang.String*) [line 115]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException.<init>(java.lang.String).0dda55128c51227757b80ca7131a7ebb_4" -> "org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException.<init>(java.lang.String).0dda55128c51227757b80ca7131a7ebb_5" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException.<init>(java.lang.String).0dda55128c51227757b80ca7131a7ebb_4" -> "org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException.<init>(java.lang.String).0dda55128c51227757b80ca7131a7ebb_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException.<init>(java.lang.String).0dda55128c51227757b80ca7131a7ebb_5" [label="5:  method_body \n  " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException.<init>(java.lang.String).0dda55128c51227757b80ca7131a7ebb_5" -> "org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException.<init>(java.lang.String).0dda55128c51227757b80ca7131a7ebb_2" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException.<init>(java.lang.String).0dda55128c51227757b80ca7131a7ebb_5" -> "org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException.<init>(java.lang.String).0dda55128c51227757b80ca7131a7ebb_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyDoesNotThrowForEmptyList():void.3489eb356197434d3ac58342db290d6e_1" [label="1: Start void MultipleFailureExceptionTest.assertEmptyDoesNotThrowForEmptyList()\nFormals:  this:org.junit.tests.assertion.MultipleFailureExceptionTest*\nLocals:  $irvar0:void\nAnnotation: <_org.junit.Test> void MultipleFailureExceptionTest.assertEmptyDoesNotThrowForEmptyList()() \n  " color=yellow style=filled]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyDoesNotThrowForEmptyList():void.3489eb356197434d3ac58342db290d6e_1" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyDoesNotThrowForEmptyList():void.3489eb356197434d3ac58342db290d6e_4" ;
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyDoesNotThrowForEmptyList():void.3489eb356197434d3ac58342db290d6e_2" [label="2: Exit void MultipleFailureExceptionTest.assertEmptyDoesNotThrowForEmptyList() \n  " color=yellow style=filled]
	

"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyDoesNotThrowForEmptyList():void.3489eb356197434d3ac58342db290d6e_3" [label="3:  exceptions sink \n  " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyDoesNotThrowForEmptyList():void.3489eb356197434d3ac58342db290d6e_3" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyDoesNotThrowForEmptyList():void.3489eb356197434d3ac58342db290d6e_2" ;
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyDoesNotThrowForEmptyList():void.3489eb356197434d3ac58342db290d6e_4" [label="4:  Call List Collections.emptyList() \n   n$0=_fun_List Collections.emptyList()() [line 33]\n  *&$irvar0:java.util.List*=n$0 [line 33]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyDoesNotThrowForEmptyList():void.3489eb356197434d3ac58342db290d6e_4" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyDoesNotThrowForEmptyList():void.3489eb356197434d3ac58342db290d6e_5" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyDoesNotThrowForEmptyList():void.3489eb356197434d3ac58342db290d6e_4" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyDoesNotThrowForEmptyList():void.3489eb356197434d3ac58342db290d6e_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyDoesNotThrowForEmptyList():void.3489eb356197434d3ac58342db290d6e_5" [label="5:  Call void MultipleFailureException.assertEmpty(List) \n   n$1=*&$irvar0:java.util.List* [line 33]\n  n$2=_fun_void MultipleFailureException.assertEmpty(List)(n$1:java.util.List*) [line 33]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyDoesNotThrowForEmptyList():void.3489eb356197434d3ac58342db290d6e_5" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyDoesNotThrowForEmptyList():void.3489eb356197434d3ac58342db290d6e_6" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyDoesNotThrowForEmptyList():void.3489eb356197434d3ac58342db290d6e_5" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyDoesNotThrowForEmptyList():void.3489eb356197434d3ac58342db290d6e_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyDoesNotThrowForEmptyList():void.3489eb356197434d3ac58342db290d6e_6" [label="6:  method_body \n  " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyDoesNotThrowForEmptyList():void.3489eb356197434d3ac58342db290d6e_6" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyDoesNotThrowForEmptyList():void.3489eb356197434d3ac58342db290d6e_2" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyDoesNotThrowForEmptyList():void.3489eb356197434d3ac58342db290d6e_6" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyDoesNotThrowForEmptyList():void.3489eb356197434d3ac58342db290d6e_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_1" [label="1: Start void MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure()\nFormals:  this:org.junit.tests.assertion.MultipleFailureExceptionTest*\nLocals:  $irvar3:void $irvar2:void CatchVar17:void $irvar1:void $irvar0:void expected:java.lang.IllegalArgumentException*\nAnnotation: <_org.junit.Test> void MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure()() \n  " color=yellow style=filled]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_1" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_4" ;
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_2" [label="2: Exit void MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure() \n  " color=yellow style=filled]
	

"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_3" [label="3:  exceptions sink \n  " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_3" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_2" ;
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_4" [label="4:  Call List Collections.emptyList() \n   n$0=_fun_List Collections.emptyList()() [line 80]\n  *&$irvar0:java.util.List*=n$0 [line 80]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_4" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_5" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_4" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_14" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_5" [label="5:  Call MultipleFailureException.<init>(List) \n   n$1=_fun___new(sizeof(t=org.junit.runners.model.MultipleFailureException):org.junit.runners.model.MultipleFailureException*) [line 80]\n  n$2=*&$irvar0:java.util.List* [line 80]\n  n$3=_fun_MultipleFailureException.<init>(List)(n$1:org.junit.runners.model.MultipleFailureException*,n$2:java.util.List*) [line 80]\n  *&$irvar1:org.junit.runners.model.MultipleFailureException*=n$1 [line 80]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_5" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_6" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_5" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_14" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_6" [label="6:  Call void Assert.fail() \n   n$4=_fun_void Assert.fail()() [line 81]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_6" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_11" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_6" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_14" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_7" [label="7:  method_body \n   n$5=*&CatchVar17:java.lang.Object* [line 82]\n  *&expected:java.lang.Object*=n$5 [line 82]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_7" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_8" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_7" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_8" [label="8:  Call String IllegalArgumentException.getMessage() \n   n$6=*&expected:java.lang.Object* [line 83]\n  _=*n$6:java.lang.Object*(root java.lang.Object) [line 83]\n  n$8=_fun_String IllegalArgumentException.getMessage()(n$6:java.lang.Object*) virtual [line 83]\n  *&$irvar2:java.lang.String*=n$8 [line 83]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_8" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_9" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_8" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_9" [label="9:  Call Matcher CoreMatchers.containsString(String) \n   n$9=_fun_Matcher CoreMatchers.containsString(String)(\"List of Throwables must not be empty\":java.lang.Object*) [line 84]\n  *&$irvar3:org.hamcrest.Matcher*=n$9 [line 84]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_9" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_10" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_9" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_10" [label="10:  Call void MatcherAssert.assertThat(Object,Matcher) \n   n$10=*&$irvar2:java.lang.String* [line 83]\n  n$11=*&$irvar3:org.hamcrest.Matcher* [line 83]\n  n$12=_fun_void MatcherAssert.assertThat(Object,Matcher)(n$10:java.lang.String*,n$11:org.hamcrest.Matcher*) [line 83]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_10" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_11" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_10" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_11" [label="11:  method_body \n  " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_11" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_2" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_11" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_12" [label="12: Prune (true branch, switch) \n   n$15=_fun___instanceof(n$14:java.lang.IllegalArgumentException*,sizeof(t=java.lang.IllegalArgumentException):void) [line 82]\n  PRUNE(n$15, true); [line 82]\n  *&CatchVar17:void=n$14 [line 82]\n " shape="invhouse"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_12" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_7" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_12" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_13" [label="13: Prune (false branch, switch) \n   n$15=_fun___instanceof(n$14:java.lang.IllegalArgumentException*,sizeof(t=java.lang.IllegalArgumentException):void) [line 82]\n  PRUNE(!n$15, false); [line 82]\n  *&return:void=EXN n$14 [line 82]\n " shape="invhouse"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_13" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_3" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_13" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_14" [label="14:  exception handler \n   n$13=*&return:void [line 82]\n  *&return:void=null [line 82]\n  n$14=_fun___unwrap_exception(n$13:void) [line 82]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_14" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_12" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_14" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_13" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_14" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyErrorListConstructorFailure():void.ece7655ef866b904de4ddd8793ffdb33_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_1" [label="1: Start void MultipleFailureExceptionTest.assertEmptyRethrowsSingleError()\nFormals:  this:org.junit.tests.assertion.MultipleFailureExceptionTest*\nLocals:  CatchVar25:void errors:java.util.List* exception:java.lang.Throwable* e:java.lang.annotation.AnnotationFormatError*\nAnnotation: <_org.junit.Test> void MultipleFailureExceptionTest.assertEmptyRethrowsSingleError()() \n  " color=yellow style=filled]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_1" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_4" ;
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_2" [label="2: Exit void MultipleFailureExceptionTest.assertEmptyRethrowsSingleError() \n  " color=yellow style=filled]
	

"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_3" [label="3:  exceptions sink \n  " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_3" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_2" ;
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_4" [label="4:  Call AnnotationFormatError.<init>(String) \n   n$0=_fun___new(sizeof(t=java.lang.annotation.AnnotationFormatError):java.lang.annotation.AnnotationFormatError*) [line 50]\n  n$1=_fun_AnnotationFormatError.<init>(String)(n$0:java.lang.annotation.AnnotationFormatError*,\"changeo\":java.lang.Object*) [line 50]\n  *&exception:java.lang.annotation.AnnotationFormatError*=n$0 [line 50]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_4" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_5" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_4" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_5" [label="5:  Call List Collections.singletonList(Object) \n   n$2=*&exception:java.lang.annotation.AnnotationFormatError* [line 51]\n  n$3=_fun_List Collections.singletonList(Object)(n$2:java.lang.annotation.AnnotationFormatError*) [line 51]\n  *&errors:java.util.List*=n$3 [line 51]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_5" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_6" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_5" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_6" [label="6:  Call void MultipleFailureException.assertEmpty(List) \n   n$4=*&errors:java.util.List* [line 53]\n  n$5=_fun_void MultipleFailureException.assertEmpty(List)(n$4:java.util.List*) [line 53]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_6" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_7" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_6" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_13" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_7" [label="7:  Call void Assert.fail() \n   n$6=_fun_void Assert.fail()() [line 54]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_7" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_10" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_7" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_13" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_8" [label="8:  method_body \n   n$7=*&CatchVar25:java.lang.Object* [line 55]\n  *&e:java.lang.Object*=n$7 [line 55]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_8" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_9" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_8" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_9" [label="9:  Call void Assert.assertSame(Object,Object) \n   n$8=*&e:java.lang.Object* [line 56]\n  n$9=*&exception:java.lang.annotation.AnnotationFormatError* [line 56]\n  n$10=_fun_void Assert.assertSame(Object,Object)(n$8:java.lang.Object*,n$9:java.lang.annotation.AnnotationFormatError*) [line 56]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_9" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_10" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_9" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_10" [label="10:  method_body \n  " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_10" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_2" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_10" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_11" [label="11: Prune (true branch, switch) \n   n$13=_fun___instanceof(n$12:java.lang.annotation.AnnotationFormatError*,sizeof(t=java.lang.annotation.AnnotationFormatError):void) [line 55]\n  PRUNE(n$13, true); [line 55]\n  *&CatchVar25:void=n$12 [line 55]\n " shape="invhouse"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_11" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_8" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_11" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_12" [label="12: Prune (false branch, switch) \n   n$13=_fun___instanceof(n$12:java.lang.annotation.AnnotationFormatError*,sizeof(t=java.lang.annotation.AnnotationFormatError):void) [line 55]\n  PRUNE(!n$13, false); [line 55]\n  *&return:void=EXN n$12 [line 55]\n " shape="invhouse"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_12" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_3" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_12" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_13" [label="13:  exception handler \n   n$11=*&return:void [line 55]\n  *&return:void=null [line 55]\n  n$12=_fun___unwrap_exception(n$11:void) [line 55]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_13" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_11" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_13" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_12" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_13" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError():void.0e076474734e75f1ea5a33882082fafa_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_1" [label="1: Start void MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException()\nFormals:  this:org.junit.tests.assertion.MultipleFailureExceptionTest*\nLocals:  CatchVar25:void errors:java.util.List* exception:java.lang.Throwable* e:org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException*\nAnnotation: <_org.junit.Test> void MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException()() \n  " color=yellow style=filled]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_1" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_4" ;
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_2" [label="2: Exit void MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException() \n  " color=yellow style=filled]
	

"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_3" [label="3:  exceptions sink \n  " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_3" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_2" ;
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_4" [label="4:  Call MultipleFailureExceptionTest$ExpectedException.<init>(String) \n   n$0=_fun___new(sizeof(t=org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException):org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException*) [line 38]\n  n$1=_fun_MultipleFailureExceptionTest$ExpectedException.<init>(String)(n$0:org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException*,\"pesto\":java.lang.Object*) [line 38]\n  *&exception:org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException*=n$0 [line 38]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_4" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_5" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_4" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_5" [label="5:  Call List Collections.singletonList(Object) \n   n$2=*&exception:org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException* [line 39]\n  n$3=_fun_List Collections.singletonList(Object)(n$2:org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException*) [line 39]\n  *&errors:java.util.List*=n$3 [line 39]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_5" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_6" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_5" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_6" [label="6:  Call void MultipleFailureException.assertEmpty(List) \n   n$4=*&errors:java.util.List* [line 41]\n  n$5=_fun_void MultipleFailureException.assertEmpty(List)(n$4:java.util.List*) [line 41]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_6" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_7" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_6" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_13" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_7" [label="7:  Call void Assert.fail() \n   n$6=_fun_void Assert.fail()() [line 42]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_7" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_10" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_7" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_13" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_8" [label="8:  method_body \n   n$7=*&CatchVar25:java.lang.Object* [line 43]\n  *&e:java.lang.Object*=n$7 [line 43]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_8" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_9" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_8" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_9" [label="9:  Call void Assert.assertSame(Object,Object) \n   n$8=*&e:java.lang.Object* [line 44]\n  n$9=*&exception:org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException* [line 44]\n  n$10=_fun_void Assert.assertSame(Object,Object)(n$8:java.lang.Object*,n$9:org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException*) [line 44]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_9" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_10" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_9" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_10" [label="10:  method_body \n  " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_10" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_2" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_10" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_11" [label="11: Prune (true branch, switch) \n   n$13=_fun___instanceof(n$12:org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException*,sizeof(t=org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException):void) [line 43]\n  PRUNE(n$13, true); [line 43]\n  *&CatchVar25:void=n$12 [line 43]\n " shape="invhouse"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_11" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_8" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_11" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_12" [label="12: Prune (false branch, switch) \n   n$13=_fun___instanceof(n$12:org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException*,sizeof(t=org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException):void) [line 43]\n  PRUNE(!n$13, false); [line 43]\n  *&return:void=EXN n$12 [line 43]\n " shape="invhouse"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_12" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_3" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_12" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_13" [label="13:  exception handler \n   n$11=*&return:void [line 43]\n  *&return:void=null [line 43]\n  n$12=_fun___unwrap_exception(n$11:void) [line 43]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_13" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_11" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_13" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_12" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_13" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException():v.45a2754f89c8ea8a5d2b4deeb88b1440_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_1" [label="1: Start void MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForManyThrowables()\nFormals:  this:org.junit.tests.assertion.MultipleFailureExceptionTest*\nLocals:  $irvar19:void $irvar18:void $irvar17:void $irvar16:void $irvar15:void $irvar14:void $irvar13:void $irvar12:void $irvar11:void $irvar10:void $irvar9:void $irvar8:void $irvar7:void $irvar6:void $irvar5:void $irvar4:void CatchVar50:void $irvar3:void $irvar2:void $irvar1:void $irvar0:void errors:java.util.List* expected:org.junit.runners.model.MultipleFailureException*\nAnnotation: <_org.junit.Test> void MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForManyThrowables()() \n  " color=yellow style=filled]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_1" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_4" ;
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_2" [label="2: Exit void MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForManyThrowables() \n  " color=yellow style=filled]
	

"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [label="3:  exceptions sink \n  " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_2" ;
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_4" [label="4:  Call ArrayList.<init>() \n   n$0=_fun___new(sizeof(t=java.util.ArrayList):java.util.ArrayList*) [line 62]\n  n$1=_fun_ArrayList.<init>()(n$0:java.util.ArrayList*) [line 62]\n  *&errors:java.util.ArrayList*=n$0 [line 62]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_4" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_5" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_4" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_5" [label="5:  Call MultipleFailureExceptionTest$ExpectedException.<init>(String) \n   n$2=_fun___new(sizeof(t=org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException):org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException*) [line 63]\n  n$3=_fun_MultipleFailureExceptionTest$ExpectedException.<init>(String)(n$2:org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException*,\"basil\":java.lang.Object*) [line 63]\n  *&$irvar0:org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException*=n$2 [line 63]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_5" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_6" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_5" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_6" [label="6:  Call boolean List.add(Object) \n   n$4=*&errors:java.util.ArrayList* [line 63]\n  _=*n$4:java.util.ArrayList*(root java.util.ArrayList) [line 63]\n  n$6=*&$irvar0:org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException* [line 63]\n  n$7=_fun_boolean List.add(Object)(n$4:java.util.ArrayList*,n$6:org.junit.tests.assertion.MultipleFailureExceptionTest$ExpectedException*) interface virtual [line 63]\n  *&$irvar1:_Bool=n$7 [line 63]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_6" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_7" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_6" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_7" [label="7:  Call RuntimeException.<init>(String) \n   n$8=_fun___new(sizeof(t=java.lang.RuntimeException):java.lang.RuntimeException*) [line 64]\n  n$9=_fun_RuntimeException.<init>(String)(n$8:java.lang.RuntimeException*,\"garlic\":java.lang.Object*) [line 64]\n  *&$irvar2:java.lang.RuntimeException*=n$8 [line 64]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_7" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_8" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_7" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_8" [label="8:  Call boolean List.add(Object) \n   n$10=*&errors:java.util.ArrayList* [line 64]\n  _=*n$10:java.util.ArrayList*(root java.util.ArrayList) [line 64]\n  n$12=*&$irvar2:java.lang.RuntimeException* [line 64]\n  n$13=_fun_boolean List.add(Object)(n$10:java.util.ArrayList*,n$12:java.lang.RuntimeException*) interface virtual [line 64]\n  *&$irvar3:_Bool=n$13 [line 64]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_8" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_9" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_8" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_9" [label="9:  Call void MultipleFailureException.assertEmpty(List) \n   n$14=*&errors:java.util.ArrayList* [line 67]\n  n$15=_fun_void MultipleFailureException.assertEmpty(List)(n$14:java.util.ArrayList*) [line 67]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_9" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_10" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_9" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_35" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_10" [label="10:  Call void Assert.fail() \n   n$16=_fun_void Assert.fail()() [line 68]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_10" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_32" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_10" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_35" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_11" [label="11:  method_body \n   n$17=*&CatchVar50:java.lang.Object* [line 69]\n  *&expected:java.lang.Object*=n$17 [line 69]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_11" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_12" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_11" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_12" [label="12:  Call List MultipleFailureException.getFailures() \n   n$18=*&expected:java.lang.Object* [line 70]\n  _=*n$18:java.lang.Object*(root java.lang.Object) [line 70]\n  n$20=_fun_List MultipleFailureException.getFailures()(n$18:java.lang.Object*) virtual [line 70]\n  *&$irvar4:java.util.List*=n$20 [line 70]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_12" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_13" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_12" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_13" [label="13:  Call Matcher CoreMatchers.equalTo(Object) \n   n$21=*&errors:java.util.ArrayList* [line 70]\n  n$22=_fun_Matcher CoreMatchers.equalTo(Object)(n$21:java.util.ArrayList*) [line 70]\n  *&$irvar5:org.hamcrest.Matcher*=n$22 [line 70]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_13" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_14" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_13" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_14" [label="14:  Call void MatcherAssert.assertThat(Object,Matcher) \n   n$23=*&$irvar4:java.util.List* [line 70]\n  n$24=*&$irvar5:org.hamcrest.Matcher* [line 70]\n  n$25=_fun_void MatcherAssert.assertThat(Object,Matcher)(n$23:java.util.List*,n$24:org.hamcrest.Matcher*) [line 70]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_14" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_15" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_14" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_15" [label="15:  Call String MultipleFailureException.getMessage() \n   n$26=*&expected:java.lang.Object* [line 71]\n  _=*n$26:java.lang.Object*(root java.lang.Object) [line 71]\n  n$28=_fun_String MultipleFailureException.getMessage()(n$26:java.lang.Object*) virtual [line 71]\n  *&$irvar6:java.lang.String*=n$28 [line 71]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_15" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_16" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_15" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_16" [label="16:  Call StringBuilder.<init>() \n   n$29=_fun___new(sizeof(t=java.lang.StringBuilder):java.lang.StringBuilder*) [line 71]\n  n$30=_fun_StringBuilder.<init>()(n$29:java.lang.StringBuilder*) [line 71]\n  *&$irvar7:java.lang.StringBuilder*=n$29 [line 71]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_16" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_17" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_16" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_17" [label="17:  Call StringBuilder StringBuilder.append(String) \n   n$31=*&$irvar7:java.lang.StringBuilder* [line 71]\n  _=*n$31:java.lang.StringBuilder*(root java.lang.StringBuilder) [line 71]\n  n$33=_fun_StringBuilder StringBuilder.append(String)(n$31:java.lang.StringBuilder*,\"There were 2 errors:\":java.lang.Object*) virtual [line 71]\n  *&$irvar8:java.lang.StringBuilder*=n$33 [line 71]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_17" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_18" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_17" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_18" [label="18:  Call StringBuilder StringBuilder.append(String) \n   n$34=*&$irvar8:java.lang.StringBuilder* [line 71]\n  _=*n$34:java.lang.StringBuilder*(root java.lang.StringBuilder) [line 71]\n  n$36=*&#GB<>$org.junit.tests.assertion.MultipleFailureExceptionTest.LINE_SEPARATOR:java.lang.String*(root org.junit.tests.assertion.MultipleFailureExceptionTest) [line 71]\n  n$37=_fun_StringBuilder StringBuilder.append(String)(n$34:java.lang.StringBuilder*,n$36:java.lang.String*) virtual [line 71]\n  *&$irvar9:java.lang.StringBuilder*=n$37 [line 71]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_18" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_19" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_18" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_19" [label="19:  Call String StringBuilder.toString() \n   n$38=*&$irvar9:java.lang.StringBuilder* [line 71]\n  _=*n$38:java.lang.StringBuilder*(root java.lang.StringBuilder) [line 71]\n  n$40=_fun_String StringBuilder.toString()(n$38:java.lang.StringBuilder*) virtual [line 71]\n  *&$irvar10:java.lang.String*=n$40 [line 71]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_19" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_20" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_19" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_20" [label="20:  Call boolean String.startsWith(String) \n   n$41=*&$irvar6:java.lang.String* [line 71]\n  _=*n$41:java.lang.String*(root java.lang.String) [line 71]\n  n$43=*&$irvar10:java.lang.String* [line 71]\n  n$44=_fun_boolean String.startsWith(String)(n$41:java.lang.String*,n$43:java.lang.String*) virtual [line 71]\n  *&$irvar11:_Bool=n$44 [line 71]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_20" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_21" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_20" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_21" [label="21:  Call void Assert.assertTrue(boolean) \n   n$45=*&$irvar11:_Bool [line 71]\n  n$46=_fun_void Assert.assertTrue(boolean)(n$45:_Bool) [line 71]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_21" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_22" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_21" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_22" [label="22:  Call String MultipleFailureException.getMessage() \n   n$47=*&expected:java.lang.Object* [line 72]\n  _=*n$47:java.lang.Object*(root java.lang.Object) [line 72]\n  n$49=_fun_String MultipleFailureException.getMessage()(n$47:java.lang.Object*) virtual [line 72]\n  *&$irvar12:java.lang.String*=n$49 [line 72]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_22" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_23" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_22" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_23" [label="23:  Call StringBuilder.<init>() \n   n$50=_fun___new(sizeof(t=java.lang.StringBuilder):java.lang.StringBuilder*) [line 72]\n  n$51=_fun_StringBuilder.<init>()(n$50:java.lang.StringBuilder*) [line 72]\n  *&$irvar13:java.lang.StringBuilder*=n$50 [line 72]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_23" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_24" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_23" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_24" [label="24:  Call StringBuilder StringBuilder.append(String) \n   n$52=*&$irvar13:java.lang.StringBuilder* [line 72]\n  _=*n$52:java.lang.StringBuilder*(root java.lang.StringBuilder) [line 72]\n  n$54=_fun_StringBuilder StringBuilder.append(String)(n$52:java.lang.StringBuilder*,\"ExpectedException(basil)\":java.lang.Object*) virtual [line 72]\n  *&$irvar14:java.lang.StringBuilder*=n$54 [line 72]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_24" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_25" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_24" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_25" [label="25:  Call StringBuilder StringBuilder.append(String) \n   n$55=*&$irvar14:java.lang.StringBuilder* [line 72]\n  _=*n$55:java.lang.StringBuilder*(root java.lang.StringBuilder) [line 72]\n  n$57=*&#GB<>$org.junit.tests.assertion.MultipleFailureExceptionTest.LINE_SEPARATOR:java.lang.String*(root org.junit.tests.assertion.MultipleFailureExceptionTest) [line 72]\n  n$58=_fun_StringBuilder StringBuilder.append(String)(n$55:java.lang.StringBuilder*,n$57:java.lang.String*) virtual [line 72]\n  *&$irvar15:java.lang.StringBuilder*=n$58 [line 72]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_25" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_26" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_25" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_26" [label="26:  Call String StringBuilder.toString() \n   n$59=*&$irvar15:java.lang.StringBuilder* [line 72]\n  _=*n$59:java.lang.StringBuilder*(root java.lang.StringBuilder) [line 72]\n  n$61=_fun_String StringBuilder.toString()(n$59:java.lang.StringBuilder*) virtual [line 72]\n  *&$irvar16:java.lang.String*=n$61 [line 72]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_26" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_27" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_26" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_27" [label="27:  Call boolean String.contains(CharSequence) \n   n$62=*&$irvar12:java.lang.String* [line 72]\n  _=*n$62:java.lang.String*(root java.lang.String) [line 72]\n  n$64=*&$irvar16:java.lang.String* [line 72]\n  n$65=_fun_boolean String.contains(CharSequence)(n$62:java.lang.String*,n$64:java.lang.String*) virtual [line 72]\n  *&$irvar17:_Bool=n$65 [line 72]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_27" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_28" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_27" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_28" [label="28:  Call void Assert.assertTrue(boolean) \n   n$66=*&$irvar17:_Bool [line 72]\n  n$67=_fun_void Assert.assertTrue(boolean)(n$66:_Bool) [line 72]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_28" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_29" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_28" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_29" [label="29:  Call String MultipleFailureException.getMessage() \n   n$68=*&expected:java.lang.Object* [line 73]\n  _=*n$68:java.lang.Object*(root java.lang.Object) [line 73]\n  n$70=_fun_String MultipleFailureException.getMessage()(n$68:java.lang.Object*) virtual [line 73]\n  *&$irvar18:java.lang.String*=n$70 [line 73]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_29" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_30" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_29" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_30" [label="30:  Call boolean String.contains(CharSequence) \n   n$71=*&$irvar18:java.lang.String* [line 73]\n  _=*n$71:java.lang.String*(root java.lang.String) [line 73]\n  n$73=_fun_boolean String.contains(CharSequence)(n$71:java.lang.String*,\"RuntimeException(garlic)\":java.lang.Object*) virtual [line 73]\n  *&$irvar19:_Bool=n$73 [line 73]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_30" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_31" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_30" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_31" [label="31:  Call void Assert.assertTrue(boolean) \n   n$74=*&$irvar19:_Bool [line 73]\n  n$75=_fun_void Assert.assertTrue(boolean)(n$74:_Bool) [line 73]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_31" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_32" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_31" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_32" [label="32:  method_body \n  " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_32" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_2" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_32" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_33" [label="33: Prune (true branch, switch) \n   n$78=_fun___instanceof(n$77:org.junit.runners.model.MultipleFailureException*,sizeof(t=org.junit.runners.model.MultipleFailureException):void) [line 69]\n  PRUNE(n$78, true); [line 69]\n  *&CatchVar50:void=n$77 [line 69]\n " shape="invhouse"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_33" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_11" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_33" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_34" [label="34: Prune (false branch, switch) \n   n$78=_fun___instanceof(n$77:org.junit.runners.model.MultipleFailureException*,sizeof(t=org.junit.runners.model.MultipleFailureException):void) [line 69]\n  PRUNE(!n$78, false); [line 69]\n  *&return:void=EXN n$77 [line 69]\n " shape="invhouse"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_34" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_34" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_35" [label="35:  exception handler \n   n$76=*&return:void [line 69]\n  *&return:void=null [line 69]\n  n$77=_fun___unwrap_exception(n$76:void) [line 69]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_35" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_33" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_35" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_34" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_35" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMultipleFailureExceptionForM.5b238c22ea1928e6bddea9492fb6da84_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_1" [label="1: Start void MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThrowables()\nFormals:  this:org.junit.tests.assertion.MultipleFailureExceptionTest*\nLocals:  $irvar22:void $irvar21:void $irvar20:void $irvar19:void $irvar18:void $irvar17:void $irvar16:void $irvar15:void $irvar14:void $irvar13:void $irvar12:void $irvar11:void $irvar10:void $irvar9:void $irvar8:void $irvar7:void $irvar6:void $irvar5:void $irvar4:void $irvar3:void CatchVar52:void $irvar2:void $irvar1:void $irvar0:void assumptionViolatedException:org.junit.internal.AssumptionViolatedException* errors:java.util.List* expected:org.junit.runners.model.MultipleFailureException* cause:java.lang.Throwable* first:java.lang.Throwable*\nAnnotation: <_org.junit.Test> void MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThrowables()() \n  " color=yellow style=filled]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_1" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_4" ;
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_2" [label="2: Exit void MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThrowables() \n  " color=yellow style=filled]
	

"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [label="3:  exceptions sink \n  " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_2" ;
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_4" [label="4:  Call ArrayList.<init>() \n   n$0=_fun___new(sizeof(t=java.util.ArrayList):java.util.ArrayList*) [line 90]\n  n$1=_fun_ArrayList.<init>()(n$0:java.util.ArrayList*) [line 90]\n  *&errors:java.util.ArrayList*=n$0 [line 90]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_4" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_5" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_4" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_5" [label="5:  Call AssumptionViolatedException.<init>(String) \n   n$2=_fun___new(sizeof(t=org.junit.internal.AssumptionViolatedException):org.junit.internal.AssumptionViolatedException*) [line 91]\n  n$3=_fun_AssumptionViolatedException.<init>(String)(n$2:org.junit.internal.AssumptionViolatedException*,\"skip it\":java.lang.Object*) [line 91]\n  *&assumptionViolatedException:org.junit.internal.AssumptionViolatedException*=n$2 [line 91]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_5" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_6" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_5" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_6" [label="6:  Call boolean List.add(Object) \n   n$4=*&errors:java.util.ArrayList* [line 92]\n  _=*n$4:java.util.ArrayList*(root java.util.ArrayList) [line 92]\n  n$6=*&assumptionViolatedException:org.junit.internal.AssumptionViolatedException* [line 92]\n  n$7=_fun_boolean List.add(Object)(n$4:java.util.ArrayList*,n$6:org.junit.internal.AssumptionViolatedException*) interface virtual [line 92]\n  *&$irvar0:_Bool=n$7 [line 92]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_6" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_7" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_6" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_7" [label="7:  Call RuntimeException.<init>(String) \n   n$8=_fun___new(sizeof(t=java.lang.RuntimeException):java.lang.RuntimeException*) [line 93]\n  n$9=_fun_RuntimeException.<init>(String)(n$8:java.lang.RuntimeException*,\"garlic\":java.lang.Object*) [line 93]\n  *&$irvar1:java.lang.RuntimeException*=n$8 [line 93]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_7" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_8" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_7" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_8" [label="8:  Call boolean List.add(Object) \n   n$10=*&errors:java.util.ArrayList* [line 93]\n  _=*n$10:java.util.ArrayList*(root java.util.ArrayList) [line 93]\n  n$12=*&$irvar1:java.lang.RuntimeException* [line 93]\n  n$13=_fun_boolean List.add(Object)(n$10:java.util.ArrayList*,n$12:java.lang.RuntimeException*) interface virtual [line 93]\n  *&$irvar2:_Bool=n$13 [line 93]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_8" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_9" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_8" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_9" [label="9:  Call void MultipleFailureException.assertEmpty(List) \n   n$14=*&errors:java.util.ArrayList* [line 96]\n  n$15=_fun_void MultipleFailureException.assertEmpty(List)(n$14:java.util.ArrayList*) [line 96]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_9" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_10" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_9" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_44" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_10" [label="10:  Call void Assert.fail() \n   n$16=_fun_void Assert.fail()() [line 97]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_10" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_41" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_10" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_44" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_11" [label="11:  method_body \n   n$17=*&CatchVar52:java.lang.Object* [line 98]\n  *&expected:java.lang.Object*=n$17 [line 98]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_11" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_12" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_11" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_12" [label="12:  Call List MultipleFailureException.getFailures() \n   n$18=*&expected:java.lang.Object* [line 99]\n  _=*n$18:java.lang.Object*(root java.lang.Object) [line 99]\n  n$20=_fun_List MultipleFailureException.getFailures()(n$18:java.lang.Object*) virtual [line 99]\n  *&$irvar3:java.util.List*=n$20 [line 99]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_12" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_13" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_12" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_13" [label="13:  Call int List.size() \n   n$21=*&$irvar3:java.util.List* [line 99]\n  _=*n$21:java.util.List*(root java.util.List) [line 99]\n  n$23=_fun_int List.size()(n$21:java.util.List*) interface virtual [line 99]\n  *&$irvar4:int=n$23 [line 99]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_13" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_14" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_13" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_14" [label="14:  Call Integer Integer.valueOf(int) \n   n$24=*&$irvar4:int [line 99]\n  n$25=_fun_Integer Integer.valueOf(int)(n$24:int) [line 99]\n  *&$irvar5:java.lang.Integer*=n$25 [line 99]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_14" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_15" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_14" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_15" [label="15:  Call Integer Integer.valueOf(int) \n   n$26=_fun_Integer Integer.valueOf(int)(2:int) [line 99]\n  *&$irvar6:java.lang.Integer*=n$26 [line 99]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_15" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_16" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_15" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_16" [label="16:  Call Matcher CoreMatchers.equalTo(Object) \n   n$27=*&$irvar6:java.lang.Integer* [line 99]\n  n$28=_fun_Matcher CoreMatchers.equalTo(Object)(n$27:java.lang.Integer*) [line 99]\n  *&$irvar7:org.hamcrest.Matcher*=n$28 [line 99]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_16" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_17" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_16" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_17" [label="17:  Call void MatcherAssert.assertThat(Object,Matcher) \n   n$29=*&$irvar5:java.lang.Integer* [line 99]\n  n$30=*&$irvar7:org.hamcrest.Matcher* [line 99]\n  n$31=_fun_void MatcherAssert.assertThat(Object,Matcher)(n$29:java.lang.Integer*,n$30:org.hamcrest.Matcher*) [line 99]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_17" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_18" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_17" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_18" [label="18:  Call String MultipleFailureException.getMessage() \n   n$32=*&expected:java.lang.Object* [line 100]\n  _=*n$32:java.lang.Object*(root java.lang.Object) [line 100]\n  n$34=_fun_String MultipleFailureException.getMessage()(n$32:java.lang.Object*) virtual [line 100]\n  *&$irvar8:java.lang.String*=n$34 [line 100]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_18" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_19" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_18" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_19" [label="19:  Call StringBuilder.<init>() \n   n$35=_fun___new(sizeof(t=java.lang.StringBuilder):java.lang.StringBuilder*) [line 100]\n  n$36=_fun_StringBuilder.<init>()(n$35:java.lang.StringBuilder*) [line 100]\n  *&$irvar9:java.lang.StringBuilder*=n$35 [line 100]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_19" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_20" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_19" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_20" [label="20:  Call StringBuilder StringBuilder.append(String) \n   n$37=*&$irvar9:java.lang.StringBuilder* [line 100]\n  _=*n$37:java.lang.StringBuilder*(root java.lang.StringBuilder) [line 100]\n  n$39=_fun_StringBuilder StringBuilder.append(String)(n$37:java.lang.StringBuilder*,\"There were 2 errors:\":java.lang.Object*) virtual [line 100]\n  *&$irvar10:java.lang.StringBuilder*=n$39 [line 100]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_20" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_21" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_20" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_21" [label="21:  Call StringBuilder StringBuilder.append(String) \n   n$40=*&$irvar10:java.lang.StringBuilder* [line 100]\n  _=*n$40:java.lang.StringBuilder*(root java.lang.StringBuilder) [line 100]\n  n$42=*&#GB<>$org.junit.tests.assertion.MultipleFailureExceptionTest.LINE_SEPARATOR:java.lang.String*(root org.junit.tests.assertion.MultipleFailureExceptionTest) [line 100]\n  n$43=_fun_StringBuilder StringBuilder.append(String)(n$40:java.lang.StringBuilder*,n$42:java.lang.String*) virtual [line 100]\n  *&$irvar11:java.lang.StringBuilder*=n$43 [line 100]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_21" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_22" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_21" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_22" [label="22:  Call String StringBuilder.toString() \n   n$44=*&$irvar11:java.lang.StringBuilder* [line 100]\n  _=*n$44:java.lang.StringBuilder*(root java.lang.StringBuilder) [line 100]\n  n$46=_fun_String StringBuilder.toString()(n$44:java.lang.StringBuilder*) virtual [line 100]\n  *&$irvar12:java.lang.String*=n$46 [line 100]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_22" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_23" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_22" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_23" [label="23:  Call boolean String.startsWith(String) \n   n$47=*&$irvar8:java.lang.String* [line 100]\n  _=*n$47:java.lang.String*(root java.lang.String) [line 100]\n  n$49=*&$irvar12:java.lang.String* [line 100]\n  n$50=_fun_boolean String.startsWith(String)(n$47:java.lang.String*,n$49:java.lang.String*) virtual [line 100]\n  *&$irvar13:_Bool=n$50 [line 100]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_23" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_24" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_23" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_24" [label="24:  Call void Assert.assertTrue(boolean) \n   n$51=*&$irvar13:_Bool [line 100]\n  n$52=_fun_void Assert.assertTrue(boolean)(n$51:_Bool) [line 100]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_24" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_25" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_24" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_25" [label="25:  Call String MultipleFailureException.getMessage() \n   n$53=*&expected:java.lang.Object* [line 101]\n  _=*n$53:java.lang.Object*(root java.lang.Object) [line 101]\n  n$55=_fun_String MultipleFailureException.getMessage()(n$53:java.lang.Object*) virtual [line 101]\n  *&$irvar14:java.lang.String*=n$55 [line 101]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_25" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_26" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_25" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_26" [label="26:  Call boolean String.contains(CharSequence) \n   n$56=*&$irvar14:java.lang.String* [line 101]\n  _=*n$56:java.lang.String*(root java.lang.String) [line 101]\n  n$58=_fun_boolean String.contains(CharSequence)(n$56:java.lang.String*,\"TestCouldNotBeSkippedException(Test could not be skipped\":java.lang.Object*) virtual [line 101]\n  *&$irvar15:_Bool=n$58 [line 101]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_26" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_27" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_26" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_27" [label="27:  Call void Assert.assertTrue(boolean) \n   n$59=*&$irvar15:_Bool [line 101]\n  n$60=_fun_void Assert.assertTrue(boolean)(n$59:_Bool) [line 101]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_27" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_28" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_27" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_28" [label="28:  Call String MultipleFailureException.getMessage() \n   n$61=*&expected:java.lang.Object* [line 102]\n  _=*n$61:java.lang.Object*(root java.lang.Object) [line 102]\n  n$63=_fun_String MultipleFailureException.getMessage()(n$61:java.lang.Object*) virtual [line 102]\n  *&$irvar16:java.lang.String*=n$63 [line 102]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_28" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_29" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_28" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_29" [label="29:  Call boolean String.contains(CharSequence) \n   n$64=*&$irvar16:java.lang.String* [line 102]\n  _=*n$64:java.lang.String*(root java.lang.String) [line 102]\n  n$66=_fun_boolean String.contains(CharSequence)(n$64:java.lang.String*,\"RuntimeException(garlic)\":java.lang.Object*) virtual [line 102]\n  *&$irvar17:_Bool=n$66 [line 102]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_29" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_30" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_29" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_30" [label="30:  Call void Assert.assertTrue(boolean) \n   n$67=*&$irvar17:_Bool [line 102]\n  n$68=_fun_void Assert.assertTrue(boolean)(n$67:_Bool) [line 102]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_30" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_31" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_30" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_31" [label="31:  Call List MultipleFailureException.getFailures() \n   n$69=*&expected:java.lang.Object* [line 103]\n  _=*n$69:java.lang.Object*(root java.lang.Object) [line 103]\n  n$71=_fun_List MultipleFailureException.getFailures()(n$69:java.lang.Object*) virtual [line 103]\n  *&$irvar18:java.util.List*=n$71 [line 103]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_31" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_32" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_31" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_32" [label="32:  Call Object List.get(int) \n   n$72=*&$irvar18:java.util.List* [line 103]\n  _=*n$72:java.util.List*(root java.util.List) [line 103]\n  n$74=_fun_Object List.get(int)(n$72:java.util.List*,0:int) interface virtual [line 103]\n  *&$irvar19:java.lang.Object*=n$74 [line 103]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_32" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_33" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_32" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_33" [label="33:  method_body \n   n$75=*&$irvar19:java.lang.Object* [line 103]\n  n$76=_fun___cast(n$75:java.lang.Object*,sizeof(t=java.lang.Throwable;sub_t=( sub )(cast)):void) [line 103]\n  *&first:java.lang.Throwable*=n$76 [line 103]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_33" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_34" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_33" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_34" [label="34:  Call Matcher CoreMatchers.instanceOf(Class) \n   n$77=_fun_Matcher CoreMatchers.instanceOf(Class)(org.junit.TestCouldNotBeSkippedException:java.lang.Object*) [line 104]\n  *&$irvar20:org.hamcrest.Matcher*=n$77 [line 104]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_34" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_35" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_34" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_35" [label="35:  Call void MatcherAssert.assertThat(Object,Matcher) \n   n$78=*&first:java.lang.Throwable* [line 104]\n  n$79=*&$irvar20:org.hamcrest.Matcher* [line 104]\n  n$80=_fun_void MatcherAssert.assertThat(Object,Matcher)(n$78:java.lang.Throwable*,n$79:org.hamcrest.Matcher*) [line 104]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_35" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_36" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_35" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_36" [label="36:  Call Throwable TestCouldNotBeSkippedException.getCause() \n   n$81=*&first:java.lang.Throwable* [line 105]\n  n$82=_fun___cast(n$81:java.lang.Throwable*,sizeof(t=org.junit.TestCouldNotBeSkippedException;sub_t=( sub )(cast)):void) [line 105]\n  _=*n$82:org.junit.TestCouldNotBeSkippedException*(root org.junit.TestCouldNotBeSkippedException) [line 105]\n  n$84=_fun_Throwable TestCouldNotBeSkippedException.getCause()(n$82:org.junit.TestCouldNotBeSkippedException*) virtual [line 105]\n  *&cause:java.lang.Throwable*=n$84 [line 105]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_36" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_37" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_36" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_37" [label="37:  Call Matcher CoreMatchers.instanceOf(Class) \n   n$85=_fun_Matcher CoreMatchers.instanceOf(Class)(org.junit.internal.AssumptionViolatedException:java.lang.Object*) [line 106]\n  *&$irvar21:org.hamcrest.Matcher*=n$85 [line 106]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_37" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_38" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_37" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_38" [label="38:  Call void MatcherAssert.assertThat(Object,Matcher) \n   n$86=*&cause:java.lang.Throwable* [line 106]\n  n$87=*&$irvar21:org.hamcrest.Matcher* [line 106]\n  n$88=_fun_void MatcherAssert.assertThat(Object,Matcher)(n$86:java.lang.Throwable*,n$87:org.hamcrest.Matcher*) [line 106]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_38" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_39" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_38" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_39" [label="39:  Call Matcher CoreMatchers.sameInstance(Object) \n   n$89=*&assumptionViolatedException:org.junit.internal.AssumptionViolatedException* [line 107]\n  n$90=_fun_Matcher CoreMatchers.sameInstance(Object)(n$89:org.junit.internal.AssumptionViolatedException*) [line 107]\n  *&$irvar22:org.hamcrest.Matcher*=n$90 [line 107]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_39" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_40" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_39" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_40" [label="40:  Call void MatcherAssert.assertThat(Object,Matcher) \n   n$91=*&cause:java.lang.Throwable* [line 107]\n  n$92=_fun___cast(n$91:java.lang.Throwable*,sizeof(t=org.junit.internal.AssumptionViolatedException;sub_t=( sub )(cast)):void) [line 107]\n  n$93=*&$irvar22:org.hamcrest.Matcher* [line 107]\n  n$94=_fun_void MatcherAssert.assertThat(Object,Matcher)(n$92:org.junit.internal.AssumptionViolatedException*,n$93:org.hamcrest.Matcher*) [line 107]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_40" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_41" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_40" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_41" [label="41:  method_body \n  " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_41" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_2" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_41" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_42" [label="42: Prune (true branch, switch) \n   n$97=_fun___instanceof(n$96:org.junit.runners.model.MultipleFailureException*,sizeof(t=org.junit.runners.model.MultipleFailureException):void) [line 98]\n  PRUNE(n$97, true); [line 98]\n  *&CatchVar52:void=n$96 [line 98]\n " shape="invhouse"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_42" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_11" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_42" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_43" [label="43: Prune (false branch, switch) \n   n$97=_fun___instanceof(n$96:org.junit.runners.model.MultipleFailureException*,sizeof(t=org.junit.runners.model.MultipleFailureException):void) [line 98]\n  PRUNE(!n$97, false); [line 98]\n  *&return:void=EXN n$96 [line 98]\n " shape="invhouse"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_43" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_43" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
"org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_44" [label="44:  exception handler \n   n$95=*&return:void [line 98]\n  *&return:void=null [line 98]\n  n$96=_fun___unwrap_exception(n$95:void) [line 98]\n " shape="box"]
	

	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_44" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_42" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_44" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_43" ;
	 "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_44" -> "org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyWrapsAssumptionFailuresForManyThro.0bd24b03b9531747f98cdee652cd4c91_3" [color="red" ];
}
