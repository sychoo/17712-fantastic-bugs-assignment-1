/* @generated */
digraph cfg {
"org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_1" [label="1: Start void AssumptionTest.assumeNotNullPasses()\nFormals:  this:org.junit.tests.experimental.AssumptionTest*\nLocals:  $irvar2:void $irvar1:void $irvar0:void objects:java.lang.Object*[_*_](*)\nAnnotation: <_org.junit.Test> void AssumptionTest.assumeNotNullPasses()() \n  " color=yellow style=filled]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_1" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_4" ;
"org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_2" [label="2: Exit void AssumptionTest.assumeNotNullPasses() \n  " color=yellow style=filled]
	

"org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_3" [label="3:  exceptions sink \n   NULLIFY(&objects); [line 128]\n  NULLIFY(&$irvar0); [line 128]\n  NULLIFY(&$irvar1); [line 128]\n  NULLIFY(&$irvar2); [line 128]\n  EXIT_SCOPE(objects,$irvar0,$irvar1,$irvar2); [line 128]\n  APPLY_ABSTRACTION; [line 128]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_3" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_2" ;
"org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_4" [label="4:  method_body \n   n$0=_fun___new_array(sizeof(t=java.lang.Object*[_*_];len=[2]):java.lang.Object*[_*_](*)) [line 125]\n  *&$irvar0:java.lang.Object*[_*_](*)=n$0 [line 125]\n  EXIT_SCOPE(n$0); [line 125]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_4" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_5" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_4" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_5" [label="5:  Call Integer Integer.valueOf(int) \n   n$1=_fun_Integer Integer.valueOf(int)(1:int) [line 125]\n  *&$irvar1:java.lang.Integer*=n$1 [line 125]\n  EXIT_SCOPE(n$1); [line 125]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_5" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_6" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_5" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_6" [label="6:  method_body \n   n$2=*&$irvar0:java.lang.Object*[_*_](*) [line 125]\n  n$3=*&$irvar1:java.lang.Integer* [line 125]\n  *n$2[0]:java.lang.Integer*=n$3 [line 125]\n  NULLIFY(&$irvar1); [line 125]\n  EXIT_SCOPE(n$2,n$3,$irvar1); [line 125]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_6" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_7" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_6" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_7" [label="7:  Call Integer Integer.valueOf(int) \n   n$4=_fun_Integer Integer.valueOf(int)(2:int) [line 125]\n  *&$irvar2:java.lang.Integer*=n$4 [line 125]\n  EXIT_SCOPE(n$4); [line 125]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_7" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_8" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_7" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_8" [label="8:  method_body \n   n$5=*&$irvar0:java.lang.Object*[_*_](*) [line 125]\n  n$6=*&$irvar2:java.lang.Integer* [line 125]\n  *n$5[1]:java.lang.Integer*=n$6 [line 125]\n  NULLIFY(&$irvar2); [line 125]\n  EXIT_SCOPE(n$5,n$6,$irvar2); [line 125]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_8" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_9" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_8" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_9" [label="9:  method_body \n   n$7=*&$irvar0:java.lang.Object*[_*_](*) [line 125]\n  *&objects:java.lang.Object*[_*_](*)=n$7 [line 125]\n  NULLIFY(&$irvar0); [line 125]\n  EXIT_SCOPE(n$7,$irvar0); [line 125]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_9" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_10" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_9" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_10" [label="10:  Call void Assume.assumeNotNull(Object[]) \n   n$8=*&objects:java.lang.Object*[_*_](*) [line 126]\n  n$9=_fun_void Assume.assumeNotNull(Object[])(n$8:java.lang.Object*[_*_](*)) [line 126]\n  NULLIFY(&objects); [line 126]\n  EXIT_SCOPE(n$8,n$9,objects); [line 126]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_10" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_11" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_10" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_11" [label="11:  Call void AssumptionTest.assertCompletesNormally() \n   n$10=*&this:org.junit.tests.experimental.AssumptionTest* [line 127]\n  n$11=_fun_void AssumptionTest.assertCompletesNormally()(n$10:org.junit.tests.experimental.AssumptionTest*) [line 127]\n  NULLIFY(&this); [line 127]\n  EXIT_SCOPE(n$10,n$11,this); [line 127]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_11" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_12" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_11" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_12" [label="12:  method_body \n   APPLY_ABSTRACTION; [line 128]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_12" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_2" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_12" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullPasses():void.ec065e99a63a399637431f9fe115def7_3" [color="red" ];
}
