/* @generated */
digraph cfg {
"org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_1" [label="1: Start void AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolatedException()\nFormals:  this:org.junit.tests.experimental.AssumptionTest*\nLocals:  $irvar4:void $irvar3:void $irvar2:void $irvar1:void $irvar0:void result:org.junit.runner.Result*\nAnnotation: <_org.junit.Test> void AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolatedException()() \n  " color=yellow style=filled]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_1" -> "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_4" ;
"org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_2" [label="2: Exit void AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolatedException() \n  " color=yellow style=filled]
	

"org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_3" [label="3:  exceptions sink \n   NULLIFY(&result); [line 238]\n  NULLIFY(&$irvar3); [line 238]\n  NULLIFY(&$irvar4); [line 238]\n  NULLIFY(&$irvar0); [line 238]\n  NULLIFY(&$irvar1); [line 238]\n  NULLIFY(&$irvar2); [line 238]\n  EXIT_SCOPE(result,$irvar3,$irvar4,$irvar0,$irvar1,$irvar2); [line 238]\n  APPLY_ABSTRACTION; [line 238]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_3" -> "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_2" ;
"org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_4" [label="4:  method_body \n   n$0=_fun___new_array(sizeof(t=java.lang.Class*[_*_];len=[1]):java.lang.Class*[_*_](*)) [line 236]\n  *&$irvar0:java.lang.Class*[_*_](*)=n$0 [line 236]\n  EXIT_SCOPE(n$0); [line 236]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_4" -> "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_5" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_4" -> "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_5" [label="5:  method_body \n   n$1=*&$irvar0:java.lang.Class*[_*_](*) [line 236]\n  *n$1[0]:java.lang.Object*=org.junit.tests.experimental.AssumptionTest$TestClassWithAssumptionFailure [line 236]\n  EXIT_SCOPE(n$1); [line 236]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_5" -> "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_6" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_5" -> "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_6" [label="6:  Call Result JUnitCore.runClasses(Class[]) \n   n$2=*&$irvar0:java.lang.Class*[_*_](*) [line 236]\n  n$3=_fun_Result JUnitCore.runClasses(Class[])(n$2:java.lang.Class*[_*_](*)) [line 236]\n  *&result:org.junit.runner.Result*=n$3 [line 236]\n  NULLIFY(&$irvar0); [line 236]\n  EXIT_SCOPE(n$2,n$3,$irvar0); [line 236]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_6" -> "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_7" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_6" -> "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_7" [label="7:  Call int Result.getAssumptionFailureCount() \n   n$4=*&result:org.junit.runner.Result* [line 237]\n  _=*n$4:org.junit.runner.Result*(root org.junit.runner.Result) [line 237]\n  n$6=_fun_int Result.getAssumptionFailureCount()(n$4:org.junit.runner.Result*) virtual [line 237]\n  *&$irvar1:int=n$6 [line 237]\n  NULLIFY(&result); [line 237]\n  EXIT_SCOPE(_,n$4,n$6,result); [line 237]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_7" -> "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_8" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_7" -> "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_8" [label="8:  Call Integer Integer.valueOf(int) \n   n$7=*&$irvar1:int [line 237]\n  n$8=_fun_Integer Integer.valueOf(int)(n$7:int) [line 237]\n  *&$irvar2:java.lang.Integer*=n$8 [line 237]\n  NULLIFY(&$irvar1); [line 237]\n  EXIT_SCOPE(n$7,n$8,$irvar1); [line 237]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_8" -> "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_9" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_8" -> "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_9" [label="9:  Call Integer Integer.valueOf(int) \n   n$9=_fun_Integer Integer.valueOf(int)(1:int) [line 237]\n  *&$irvar3:java.lang.Integer*=n$9 [line 237]\n  EXIT_SCOPE(n$9); [line 237]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_9" -> "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_10" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_9" -> "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_10" [label="10:  Call Matcher CoreMatchers.is(Object) \n   n$10=*&$irvar3:java.lang.Integer* [line 237]\n  n$11=_fun_Matcher CoreMatchers.is(Object)(n$10:java.lang.Integer*) [line 237]\n  *&$irvar4:org.hamcrest.Matcher*=n$11 [line 237]\n  NULLIFY(&$irvar3); [line 237]\n  EXIT_SCOPE(n$10,n$11,$irvar3); [line 237]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_10" -> "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_11" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_10" -> "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_11" [label="11:  Call void MatcherAssert.assertThat(Object,Matcher) \n   n$12=*&$irvar2:java.lang.Integer* [line 237]\n  n$13=*&$irvar4:org.hamcrest.Matcher* [line 237]\n  n$14=_fun_void MatcherAssert.assertThat(Object,Matcher)(n$12:java.lang.Integer*,n$13:org.hamcrest.Matcher*) [line 237]\n  NULLIFY(&$irvar4); [line 237]\n  NULLIFY(&$irvar2); [line 237]\n  EXIT_SCOPE(n$12,n$13,n$14,$irvar4,$irvar2); [line 237]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_11" -> "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_12" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_11" -> "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_12" [label="12:  method_body \n   APPLY_ABSTRACTION; [line 238]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_12" -> "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_2" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_12" -> "org.junit.tests.experimental.AssumptionTest.assumeWithExpectedExceptionShouldThrowAssumptionViolated.55e01a68a2677c14477698c0cc1e3af3_3" [color="red" ];
}
