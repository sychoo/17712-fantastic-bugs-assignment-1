/* @generated */
digraph cfg {
"org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_1" [label="1: Start void AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail()\nFormals:  this:org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage*\nLocals:  $irvar2:void $irvar1:void $irvar0:void\nAnnotation: <_org.junit.Test> void AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail()() \n  " color=yellow style=filled]
	

	 "org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_1" -> "org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_4" ;
"org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_2" [label="2: Exit void AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail() \n  " color=yellow style=filled]
	

"org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_3" [label="3:  exceptions sink \n   NULLIFY(&$irvar0); [line 284]\n  NULLIFY(&$irvar1); [line 284]\n  NULLIFY(&$irvar2); [line 284]\n  EXIT_SCOPE($irvar0,$irvar1,$irvar2); [line 284]\n  APPLY_ABSTRACTION; [line 284]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_3" -> "org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_2" ;
"org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_4" [label="4:  Call Integer Integer.valueOf(int) \n   n$0=_fun_Integer Integer.valueOf(int)(3:int) [line 282]\n  *&$irvar0:java.lang.Integer*=n$0 [line 282]\n  EXIT_SCOPE(n$0); [line 282]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_4" -> "org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_5" ;
	 "org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_4" -> "org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_5" [label="5:  Call Integer Integer.valueOf(int) \n   n$1=_fun_Integer Integer.valueOf(int)(4:int) [line 282]\n  *&$irvar1:java.lang.Integer*=n$1 [line 282]\n  EXIT_SCOPE(n$1); [line 282]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_5" -> "org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_6" ;
	 "org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_5" -> "org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_6" [label="6:  Call Matcher CoreMatchers.is(Object) \n   n$2=*&$irvar1:java.lang.Integer* [line 282]\n  n$3=_fun_Matcher CoreMatchers.is(Object)(n$2:java.lang.Integer*) [line 282]\n  *&$irvar2:org.hamcrest.Matcher*=n$3 [line 282]\n  NULLIFY(&$irvar1); [line 282]\n  EXIT_SCOPE(n$2,n$3,$irvar1); [line 282]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_6" -> "org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_7" ;
	 "org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_6" -> "org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_7" [label="7:  Call void Assume.assumeThat(String,Object,Matcher) \n   n$4=*&$irvar0:java.lang.Integer* [line 282]\n  n$5=*&$irvar2:org.hamcrest.Matcher* [line 282]\n  n$6=_fun_void Assume.assumeThat(String,Object,Matcher)(\"Some random message string.\":java.lang.Object*,n$4:java.lang.Integer*,n$5:org.hamcrest.Matcher*) [line 282]\n  NULLIFY(&$irvar0); [line 282]\n  NULLIFY(&$irvar2); [line 282]\n  EXIT_SCOPE(n$4,n$5,n$6,$irvar0,$irvar2); [line 282]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_7" -> "org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_8" ;
	 "org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_7" -> "org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_8" [label="8:  Call void Assert.fail() \n   n$7=_fun_void Assert.fail()() [line 283]\n  EXIT_SCOPE(n$7); [line 283]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_8" -> "org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_9" ;
	 "org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_8" -> "org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_9" [label="9:  method_body \n   APPLY_ABSTRACTION; [line 284]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_9" -> "org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_2" ;
	 "org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_9" -> "org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail():void.2579eedd2d98fe9ef360a248ebc26b25_3" [color="red" ];
}
