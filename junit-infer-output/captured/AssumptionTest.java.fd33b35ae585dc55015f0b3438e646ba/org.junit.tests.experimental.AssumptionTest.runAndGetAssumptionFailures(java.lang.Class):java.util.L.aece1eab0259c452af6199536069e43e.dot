/* @generated */
digraph cfg {
"org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_1" [label="1: Start List AssumptionTest.runAndGetAssumptionFailures(Class)\nFormals:  clazz:java.lang.Class*\nLocals:  $irvar2:void $irvar1:void $irvar0:void core:org.junit.runner.JUnitCore* failures:java.util.List* \n  " color=yellow style=filled]
	

	 "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_1" -> "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_4" ;
"org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_2" [label="2: Exit List AssumptionTest.runAndGetAssumptionFailures(Class) \n  " color=yellow style=filled]
	

"org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_3" [label="3:  exceptions sink \n   NULLIFY(&failures); [line 310]\n  NULLIFY(&core); [line 310]\n  NULLIFY(&$irvar0); [line 310]\n  NULLIFY(&$irvar1); [line 310]\n  EXIT_SCOPE(failures,core,$irvar0,$irvar1); [line 310]\n  APPLY_ABSTRACTION; [line 310]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_3" -> "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_2" ;
"org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_4" [label="4:  Call ArrayList.<init>() \n   n$0=_fun___new(sizeof(t=java.util.ArrayList):java.util.ArrayList*) [line 301]\n  n$1=_fun_ArrayList.<init>()(n$0:java.util.ArrayList*) [line 301]\n  *&failures:java.util.ArrayList*=n$0 [line 301]\n  EXIT_SCOPE(n$0,n$1); [line 301]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_4" -> "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_5" ;
	 "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_4" -> "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_5" [label="5:  Call JUnitCore.<init>() \n   n$2=_fun___new(sizeof(t=org.junit.runner.JUnitCore):org.junit.runner.JUnitCore*) [line 302]\n  n$3=_fun_JUnitCore.<init>()(n$2:org.junit.runner.JUnitCore*) [line 302]\n  *&core:org.junit.runner.JUnitCore*=n$2 [line 302]\n  EXIT_SCOPE(n$2,n$3); [line 302]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_5" -> "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_6" ;
	 "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_5" -> "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_6" [label="6:  Call AssumptionTest$2.<init>(List) \n   n$4=_fun___new(sizeof(t=org.junit.tests.experimental.AssumptionTest$2):org.junit.tests.experimental.AssumptionTest$2*) [line 303]\n  n$5=*&failures:java.util.ArrayList* [line 303]\n  n$6=_fun_AssumptionTest$2.<init>(List)(n$4:org.junit.tests.experimental.AssumptionTest$2*,n$5:java.util.ArrayList*) [line 303]\n  *&$irvar0:org.junit.tests.experimental.AssumptionTest$2*=n$4 [line 303]\n  EXIT_SCOPE(n$4,n$5,n$6); [line 303]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_6" -> "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_7" ;
	 "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_6" -> "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_7" [label="7:  Call void JUnitCore.addListener(RunListener) \n   n$7=*&core:org.junit.runner.JUnitCore* [line 303]\n  _=*n$7:org.junit.runner.JUnitCore*(root org.junit.runner.JUnitCore) [line 303]\n  n$9=*&$irvar0:org.junit.tests.experimental.AssumptionTest$2* [line 303]\n  n$10=_fun_void JUnitCore.addListener(RunListener)(n$7:org.junit.runner.JUnitCore*,n$9:org.junit.tests.experimental.AssumptionTest$2*) [line 303]\n  NULLIFY(&$irvar0); [line 303]\n  EXIT_SCOPE(_,n$7,n$9,n$10,$irvar0); [line 303]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_7" -> "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_8" ;
	 "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_7" -> "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_8" [label="8:  method_body \n   n$11=_fun___new_array(sizeof(t=java.lang.Class*[_*_];len=[1]):java.lang.Class*[_*_](*)) [line 309]\n  *&$irvar1:java.lang.Class*[_*_](*)=n$11 [line 309]\n  EXIT_SCOPE(n$11); [line 309]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_8" -> "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_9" ;
	 "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_8" -> "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_9" [label="9:  method_body \n   n$12=*&$irvar1:java.lang.Class*[_*_](*) [line 309]\n  n$13=*&clazz:java.lang.Class* [line 309]\n  *n$12[0]:java.lang.Class*=n$13 [line 309]\n  NULLIFY(&clazz); [line 309]\n  EXIT_SCOPE(n$12,n$13,clazz); [line 309]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_9" -> "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_10" ;
	 "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_9" -> "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_10" [label="10:  Call Result JUnitCore.run(Class[]) \n   n$14=*&core:org.junit.runner.JUnitCore* [line 309]\n  _=*n$14:org.junit.runner.JUnitCore*(root org.junit.runner.JUnitCore) [line 309]\n  n$16=*&$irvar1:java.lang.Class*[_*_](*) [line 309]\n  n$17=_fun_Result JUnitCore.run(Class[])(n$14:org.junit.runner.JUnitCore*,n$16:java.lang.Class*[_*_](*)) [line 309]\n  *&$irvar2:org.junit.runner.Result*=n$17 [line 309]\n  NULLIFY(&core); [line 309]\n  NULLIFY(&$irvar1); [line 309]\n  NULLIFY(&$irvar2); [line 309]\n  EXIT_SCOPE(_,n$14,n$16,n$17,core,$irvar1,$irvar2); [line 309]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_10" -> "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_11" ;
	 "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_10" -> "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_11" [label="11:  method_body \n   n$18=*&failures:java.util.ArrayList* [line 310]\n  *&return:java.util.List*=n$18 [line 310]\n  NULLIFY(&failures); [line 310]\n  EXIT_SCOPE(n$18,failures); [line 310]\n  APPLY_ABSTRACTION; [line 310]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_11" -> "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_2" ;
	 "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_11" -> "org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class):java.util.L.aece1eab0259c452af6199536069e43e_3" [color="red" ];
}
