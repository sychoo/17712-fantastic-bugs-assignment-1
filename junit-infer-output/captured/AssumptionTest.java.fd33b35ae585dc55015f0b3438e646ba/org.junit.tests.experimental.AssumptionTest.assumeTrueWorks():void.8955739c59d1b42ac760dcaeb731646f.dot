/* @generated */
digraph cfg {
"org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_1" [label="1: Start void AssumptionTest.assumeTrueWorks()\nFormals:  this:org.junit.tests.experimental.AssumptionTest*\nLocals:  $irvar0:void CatchVar12:void e:org.junit.AssumptionViolatedException*\nAnnotation: <_org.junit.Test> void AssumptionTest.assumeTrueWorks()() \n  " color=yellow style=filled]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_1" -> "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_4" ;
"org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_2" [label="2: Exit void AssumptionTest.assumeTrueWorks() \n  " color=yellow style=filled]
	

"org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_3" [label="3:  exceptions sink \n   NULLIFY(&$irvar0); [line 164]\n  NULLIFY(&CatchVar12); [line 164]\n  NULLIFY(&e); [line 164]\n  EXIT_SCOPE(n$9,$irvar0,CatchVar12,e); [line 164]\n  APPLY_ABSTRACTION; [line 164]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_3" -> "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_2" ;
"org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_4" [label="4:  Call void Assume.assumeTrue(boolean) \n   n$0=_fun_void Assume.assumeTrue(boolean)(0:int) [line 159]\n  EXIT_SCOPE(n$0); [line 159]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_4" -> "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_5" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_4" -> "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_12" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_5" [label="5:  Call void Assert.fail(String) \n   n$1=_fun_void Assert.fail(String)(\"should throw AssumptionViolatedException\":java.lang.Object*) [line 160]\n  EXIT_SCOPE(n$1); [line 160]\n  APPLY_ABSTRACTION; [line 160]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_5" -> "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_9" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_5" -> "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_12" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_6" [label="6:  method_body \n   n$2=*&CatchVar12:java.lang.Object* [line 161]\n  *&e:java.lang.Object*=n$2 [line 161]\n  NULLIFY(&CatchVar12); [line 161]\n  EXIT_SCOPE(n$2,CatchVar12); [line 161]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_6" -> "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_7" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_6" -> "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_7" [label="7:  Call String AssumptionViolatedException.getMessage() \n   n$3=*&e:java.lang.Object* [line 162]\n  _=*n$3:java.lang.Object*(root java.lang.Object) [line 162]\n  n$5=_fun_String AssumptionViolatedException.getMessage()(n$3:java.lang.Object*) virtual [line 162]\n  *&$irvar0:java.lang.String*=n$5 [line 162]\n  NULLIFY(&e); [line 162]\n  EXIT_SCOPE(_,n$3,n$5,e); [line 162]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_7" -> "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_8" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_7" -> "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_8" [label="8:  Call void Assert.assertEquals(Object,Object) \n   n$6=*&$irvar0:java.lang.String* [line 162]\n  n$7=_fun_void Assert.assertEquals(Object,Object)(\"got: <false>, expected: is <true>\":java.lang.Object*,n$6:java.lang.String*) [line 162]\n  NULLIFY(&$irvar0); [line 162]\n  EXIT_SCOPE(n$6,n$7,$irvar0); [line 162]\n  APPLY_ABSTRACTION; [line 162]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_8" -> "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_9" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_8" -> "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_9" [label="9:  method_body \n   APPLY_ABSTRACTION; [line 164]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_9" -> "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_2" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_9" -> "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_10" [label="10: Prune (true branch, switch) \n   n$10=_fun___instanceof(n$9:org.junit.AssumptionViolatedException*,sizeof(t=org.junit.AssumptionViolatedException):void) [line 161]\n  PRUNE(n$10, true); [line 161]\n  *&CatchVar12:void=n$9 [line 161]\n  EXIT_SCOPE(n$9,n$10); [line 161]\n " shape="invhouse"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_10" -> "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_6" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_10" -> "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_11" [label="11: Prune (false branch, switch) \n   n$10=_fun___instanceof(n$9:org.junit.AssumptionViolatedException*,sizeof(t=org.junit.AssumptionViolatedException):void) [line 161]\n  PRUNE(!n$10, false); [line 161]\n  *&return:void=EXN n$9 [line 161]\n  EXIT_SCOPE(n$9,n$10); [line 161]\n " shape="invhouse"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_11" -> "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_3" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_11" -> "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_12" [label="12:  exception handler \n   n$8=*&return:void [line 161]\n  *&return:void=null [line 161]\n  n$9=_fun___unwrap_exception(n$8:void) [line 161]\n  EXIT_SCOPE(n$8); [line 161]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_12" -> "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_10" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_12" -> "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_11" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_12" -> "org.junit.tests.experimental.AssumptionTest.assumeTrueWorks():void.8955739c59d1b42ac760dcaeb731646f_3" [color="red" ];
}
