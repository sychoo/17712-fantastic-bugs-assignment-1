/* @generated */
digraph cfg {
"org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_1" [label="1: Start void AssumptionTest.assumeNotNullThrowsException()\nFormals:  this:org.junit.tests.experimental.AssumptionTest*\nLocals:  $bcvar2:void CatchVar35:void $irvar2:void $irvar1:void $irvar0:void objects:java.lang.Object*[_*_](*)\nAnnotation: <_org.junit.Test> void AssumptionTest.assumeNotNullThrowsException()() \n  " color=yellow style=filled]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_1" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_4" ;
"org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_2" [label="2: Exit void AssumptionTest.assumeNotNullThrowsException() \n  " color=yellow style=filled]
	

"org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_3" [label="3:  exceptions sink \n   NULLIFY(&CatchVar35); [line 111]\n  NULLIFY(&objects); [line 111]\n  NULLIFY(&$irvar0); [line 111]\n  NULLIFY(&$irvar1); [line 111]\n  NULLIFY(&$irvar2); [line 111]\n  EXIT_SCOPE(n$14,CatchVar35,objects,$irvar0,$irvar1,$irvar2); [line 111]\n  APPLY_ABSTRACTION; [line 111]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_3" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_2" ;
"org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_4" [label="4:  method_body \n   n$0=_fun___new_array(sizeof(t=java.lang.Object*[_*_];len=[3]):java.lang.Object*[_*_](*)) [line 104]\n  *&$irvar0:java.lang.Object*[_*_](*)=n$0 [line 104]\n  EXIT_SCOPE(n$0); [line 104]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_4" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_5" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_4" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_5" [label="5:  Call Integer Integer.valueOf(int) \n   n$1=_fun_Integer Integer.valueOf(int)(1:int) [line 104]\n  *&$irvar1:java.lang.Integer*=n$1 [line 104]\n  EXIT_SCOPE(n$1); [line 104]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_5" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_6" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_5" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_6" [label="6:  method_body \n   n$2=*&$irvar0:java.lang.Object*[_*_](*) [line 104]\n  n$3=*&$irvar1:java.lang.Integer* [line 104]\n  *n$2[0]:java.lang.Integer*=n$3 [line 104]\n  NULLIFY(&$irvar1); [line 104]\n  EXIT_SCOPE(n$2,n$3,$irvar1); [line 104]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_6" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_7" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_6" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_7" [label="7:  Call Integer Integer.valueOf(int) \n   n$4=_fun_Integer Integer.valueOf(int)(2:int) [line 104]\n  *&$irvar2:java.lang.Integer*=n$4 [line 104]\n  EXIT_SCOPE(n$4); [line 104]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_7" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_8" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_7" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_8" [label="8:  method_body \n   n$5=*&$irvar0:java.lang.Object*[_*_](*) [line 104]\n  n$6=*&$irvar2:java.lang.Integer* [line 104]\n  *n$5[1]:java.lang.Integer*=n$6 [line 104]\n  NULLIFY(&$irvar2); [line 104]\n  EXIT_SCOPE(n$5,n$6,$irvar2); [line 104]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_8" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_9" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_8" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_9" [label="9:  method_body \n   n$7=*&$irvar0:java.lang.Object*[_*_](*) [line 104]\n  *n$7[2]:java.lang.Object*=null [line 104]\n  EXIT_SCOPE(n$7); [line 104]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_9" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_10" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_9" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_10" [label="10:  method_body \n   n$8=*&$irvar0:java.lang.Object*[_*_](*) [line 104]\n  *&objects:java.lang.Object*[_*_](*)=n$8 [line 104]\n  NULLIFY(&$irvar0); [line 104]\n  EXIT_SCOPE(n$8,$irvar0); [line 104]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_10" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_11" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_10" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_11" [label="11:  Call void Assume.assumeNotNull(Object[]) \n   n$9=*&objects:java.lang.Object*[_*_](*) [line 106]\n  n$10=_fun_void Assume.assumeNotNull(Object[])(n$9:java.lang.Object*[_*_](*)) [line 106]\n  NULLIFY(&objects); [line 106]\n  EXIT_SCOPE(n$9,n$10,objects); [line 106]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_11" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_12" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_11" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_17" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_12" [label="12:  Call void Assert.fail(String) \n   n$11=_fun_void Assert.fail(String)(\"should throw AssumptionViolatedException\":java.lang.Object*) [line 107]\n  EXIT_SCOPE(n$11); [line 107]\n  APPLY_ABSTRACTION; [line 107]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_12" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_14" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_12" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_17" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_13" [label="13:  method_body \n   n$12=*&CatchVar35:java.lang.Object* [line 108]\n  *&$bcvar2:java.lang.Object*=n$12 [line 108]\n  NULLIFY(&CatchVar35); [line 108]\n  NULLIFY(&$bcvar2); [line 108]\n  EXIT_SCOPE(n$12,CatchVar35,$bcvar2); [line 108]\n  APPLY_ABSTRACTION; [line 108]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_13" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_14" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_13" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_14" [label="14:  method_body \n   APPLY_ABSTRACTION; [line 111]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_14" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_2" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_14" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_15" [label="15: Prune (true branch, switch) \n   n$15=_fun___instanceof(n$14:org.junit.AssumptionViolatedException*,sizeof(t=org.junit.AssumptionViolatedException):void) [line 108]\n  PRUNE(n$15, true); [line 108]\n  *&CatchVar35:void=n$14 [line 108]\n  EXIT_SCOPE(n$14,n$15); [line 108]\n " shape="invhouse"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_15" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_13" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_15" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_16" [label="16: Prune (false branch, switch) \n   n$15=_fun___instanceof(n$14:org.junit.AssumptionViolatedException*,sizeof(t=org.junit.AssumptionViolatedException):void) [line 108]\n  PRUNE(!n$15, false); [line 108]\n  *&return:void=EXN n$14 [line 108]\n  EXIT_SCOPE(n$14,n$15); [line 108]\n " shape="invhouse"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_16" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_3" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_16" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_17" [label="17:  exception handler \n   n$13=*&return:void [line 108]\n  *&return:void=null [line 108]\n  n$14=_fun___unwrap_exception(n$13:void) [line 108]\n  EXIT_SCOPE(n$13); [line 108]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_17" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_15" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_17" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_16" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_17" -> "org.junit.tests.experimental.AssumptionTest.assumeNotNullThrowsException():void.9099668d9848442aa02b9877277c0e84_3" [color="red" ];
}
