/* @generated */
digraph cfg {
"org.junit.tests.experimental.AssumptionTest$TestClassWithAssumptionFailure.assumeWithExpectedExcepti.42d17baed1362a2d74045ef04e01bf19_1" [label="1: Start void AssumptionTest$TestClassWithAssumptionFailure.assumeWithExpectedException()\nFormals:  this:org.junit.tests.experimental.AssumptionTest$TestClassWithAssumptionFailure*\nLocals: \nAnnotation: <_org.junit.Test(expected="java.lang.IllegalArgumentException")> void AssumptionTest$TestClassWithAssumptionFailure.assumeWithExpectedException()() \n  " color=yellow style=filled]
	

	 "org.junit.tests.experimental.AssumptionTest$TestClassWithAssumptionFailure.assumeWithExpectedExcepti.42d17baed1362a2d74045ef04e01bf19_1" -> "org.junit.tests.experimental.AssumptionTest$TestClassWithAssumptionFailure.assumeWithExpectedExcepti.42d17baed1362a2d74045ef04e01bf19_4" ;
"org.junit.tests.experimental.AssumptionTest$TestClassWithAssumptionFailure.assumeWithExpectedExcepti.42d17baed1362a2d74045ef04e01bf19_2" [label="2: Exit void AssumptionTest$TestClassWithAssumptionFailure.assumeWithExpectedException() \n  " color=yellow style=filled]
	

"org.junit.tests.experimental.AssumptionTest$TestClassWithAssumptionFailure.assumeWithExpectedExcepti.42d17baed1362a2d74045ef04e01bf19_3" [label="3:  exceptions sink \n   APPLY_ABSTRACTION; [line 231]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest$TestClassWithAssumptionFailure.assumeWithExpectedExcepti.42d17baed1362a2d74045ef04e01bf19_3" -> "org.junit.tests.experimental.AssumptionTest$TestClassWithAssumptionFailure.assumeWithExpectedExcepti.42d17baed1362a2d74045ef04e01bf19_2" ;
"org.junit.tests.experimental.AssumptionTest$TestClassWithAssumptionFailure.assumeWithExpectedExcepti.42d17baed1362a2d74045ef04e01bf19_4" [label="4:  Call void Assume.assumeTrue(boolean) \n   n$0=_fun_void Assume.assumeTrue(boolean)(0:int) [line 230]\n  EXIT_SCOPE(n$0); [line 230]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest$TestClassWithAssumptionFailure.assumeWithExpectedExcepti.42d17baed1362a2d74045ef04e01bf19_4" -> "org.junit.tests.experimental.AssumptionTest$TestClassWithAssumptionFailure.assumeWithExpectedExcepti.42d17baed1362a2d74045ef04e01bf19_5" ;
	 "org.junit.tests.experimental.AssumptionTest$TestClassWithAssumptionFailure.assumeWithExpectedExcepti.42d17baed1362a2d74045ef04e01bf19_4" -> "org.junit.tests.experimental.AssumptionTest$TestClassWithAssumptionFailure.assumeWithExpectedExcepti.42d17baed1362a2d74045ef04e01bf19_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest$TestClassWithAssumptionFailure.assumeWithExpectedExcepti.42d17baed1362a2d74045ef04e01bf19_5" [label="5:  method_body \n   APPLY_ABSTRACTION; [line 231]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest$TestClassWithAssumptionFailure.assumeWithExpectedExcepti.42d17baed1362a2d74045ef04e01bf19_5" -> "org.junit.tests.experimental.AssumptionTest$TestClassWithAssumptionFailure.assumeWithExpectedExcepti.42d17baed1362a2d74045ef04e01bf19_2" ;
	 "org.junit.tests.experimental.AssumptionTest$TestClassWithAssumptionFailure.assumeWithExpectedExcepti.42d17baed1362a2d74045ef04e01bf19_5" -> "org.junit.tests.experimental.AssumptionTest$TestClassWithAssumptionFailure.assumeWithExpectedExcepti.42d17baed1362a2d74045ef04e01bf19_3" [color="red" ];
}
