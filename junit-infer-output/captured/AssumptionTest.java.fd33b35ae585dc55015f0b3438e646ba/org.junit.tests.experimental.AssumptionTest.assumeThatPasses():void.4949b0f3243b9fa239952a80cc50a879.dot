/* @generated */
digraph cfg {
"org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_1" [label="1: Start void AssumptionTest.assumeThatPasses()\nFormals:  this:org.junit.tests.experimental.AssumptionTest*\nLocals:  $irvar2:void $irvar1:void $irvar0:void\nAnnotation: <_org.junit.Test> void AssumptionTest.assumeThatPasses()() \n  " color=yellow style=filled]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_1" -> "org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_4" ;
"org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_2" [label="2: Exit void AssumptionTest.assumeThatPasses() \n  " color=yellow style=filled]
	

"org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_3" [label="3:  exceptions sink \n   NULLIFY(&$irvar0); [line 94]\n  NULLIFY(&$irvar1); [line 94]\n  NULLIFY(&$irvar2); [line 94]\n  EXIT_SCOPE($irvar0,$irvar1,$irvar2); [line 94]\n  APPLY_ABSTRACTION; [line 94]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_3" -> "org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_2" ;
"org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_4" [label="4:  Call Integer Integer.valueOf(int) \n   n$0=_fun_Integer Integer.valueOf(int)(1:int) [line 92]\n  *&$irvar0:java.lang.Integer*=n$0 [line 92]\n  EXIT_SCOPE(n$0); [line 92]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_4" -> "org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_5" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_4" -> "org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_5" [label="5:  Call Integer Integer.valueOf(int) \n   n$1=_fun_Integer Integer.valueOf(int)(1:int) [line 92]\n  *&$irvar1:java.lang.Integer*=n$1 [line 92]\n  EXIT_SCOPE(n$1); [line 92]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_5" -> "org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_6" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_5" -> "org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_6" [label="6:  Call Matcher CoreMatchers.is(Object) \n   n$2=*&$irvar1:java.lang.Integer* [line 92]\n  n$3=_fun_Matcher CoreMatchers.is(Object)(n$2:java.lang.Integer*) [line 92]\n  *&$irvar2:org.hamcrest.Matcher*=n$3 [line 92]\n  NULLIFY(&$irvar1); [line 92]\n  EXIT_SCOPE(n$2,n$3,$irvar1); [line 92]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_6" -> "org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_7" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_6" -> "org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_7" [label="7:  Call void Assume.assumeThat(Object,Matcher) \n   n$4=*&$irvar0:java.lang.Integer* [line 92]\n  n$5=*&$irvar2:org.hamcrest.Matcher* [line 92]\n  n$6=_fun_void Assume.assumeThat(Object,Matcher)(n$4:java.lang.Integer*,n$5:org.hamcrest.Matcher*) [line 92]\n  NULLIFY(&$irvar0); [line 92]\n  NULLIFY(&$irvar2); [line 92]\n  EXIT_SCOPE(n$4,n$5,n$6,$irvar0,$irvar2); [line 92]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_7" -> "org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_8" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_7" -> "org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_8" [label="8:  Call void AssumptionTest.assertCompletesNormally() \n   n$7=*&this:org.junit.tests.experimental.AssumptionTest* [line 93]\n  n$8=_fun_void AssumptionTest.assertCompletesNormally()(n$7:org.junit.tests.experimental.AssumptionTest*) [line 93]\n  NULLIFY(&this); [line 93]\n  EXIT_SCOPE(n$7,n$8,this); [line 93]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_8" -> "org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_9" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_8" -> "org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_3" [color="red" ];
"org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_9" [label="9:  method_body \n   APPLY_ABSTRACTION; [line 94]\n " shape="box"]
	

	 "org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_9" -> "org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_2" ;
	 "org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_9" -> "org.junit.tests.experimental.AssumptionTest.assumeThatPasses():void.4949b0f3243b9fa239952a80cc50a879_3" [color="red" ];
}
