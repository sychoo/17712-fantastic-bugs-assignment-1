[{"bug_type":"NULL_DEREFERENCE","qualifier":"object returned by `getProperty(\"java.vm.specification.version\")` could be null and is dereferenced at line 31.","severity":"ERROR","line":31,"column":-1,"procedure":"clojure.lang.Reflector.isJava8():boolean","procedure_start_line":30,"file":"src/jvm/clojure/lang/Reflector.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/Reflector.java","line_number":30,"column_number":-1,"description":"start of procedure isJava8()"},{"level":0,"filename":"src/jvm/clojure/lang/Reflector.java","line_number":31,"column_number":-1,"description":""}],"key":"Reflector.java|isJava8|NULL_DEREFERENCE","node_key":"8fe6896617fe48d976e5405cc17d2e7a","hash":"1b82e7f6845e7f2c87543c2c7c57de26","bug_type_hum":"Null Dereference"},{"bug_type":"NULL_DEREFERENCE","qualifier":"object `foundNode` last assigned on line 131 could be null and is dereferenced at line 132.","severity":"ERROR","line":132,"column":-1,"procedure":"clojure.lang.PersistentTreeMap.assoc(java.lang.Integer,clojure.lang.Symbol):clojure.lang.PersistentTreeMap","procedure_start_line":126,"file":"src/jvm/clojure/lang/PersistentTreeMap.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":126,"column_number":-1,"description":"start of procedure assoc(...)"},{"level":0,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":127,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/Box.java","line_number":19,"column_number":-1,"description":"start of procedure Box(...)"},{"level":1,"filename":"src/jvm/clojure/lang/Box.java","line_number":20,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/Box.java","line_number":21,"column_number":-1,"description":"return from a call to Box.<init>(Object)"},{"level":0,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":128,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":334,"column_number":-1,"description":"start of procedure add(...)"},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":335,"column_number":-1,"description":"Taking false branch"},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":343,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":328,"column_number":-1,"description":"start of procedure doCompare(...)"},{"level":2,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":330,"column_number":-1,"description":"return from a call to int PersistentTreeMap.doCompare(Object,Object)"},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":344,"column_number":-1,"description":"Taking false branch"},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":349,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":536,"column_number":-1,"description":"start of procedure right()"},{"level":2,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":537,"column_number":-1,"description":"return from a call to PersistentTreeMap$Node PersistentTreeMap$Node.right()"},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":349,"column_number":-1,"description":"Skipping add(...): unknown method"},{"level":2,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":334,"column_number":-1,"description":"Definition of add(...)"},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":349,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":350,"column_number":-1,"description":"Taking true branch"},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":351,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":354,"column_number":-1,"description":"return from a call to PersistentTreeMap$Node PersistentTreeMap.add(PersistentTreeMap$Node,Object,Object,Box)"},{"level":0,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":129,"column_number":-1,"description":"Taking true branch"},{"level":0,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":131,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":132,"column_number":-1,"description":""}],"key":"PersistentTreeMap.java|assoc|NULL_DEREFERENCE","node_key":"f9f3a406a670c0aa947d90550a5afa34","hash":"b9e66105825a77938a769c36152e3e98","bug_type_hum":"Null Dereference"},{"bug_type":"NULL_DEREFERENCE","qualifier":"object `name` last assigned on line 295 could be null and is dereferenced at line 297.","severity":"ERROR","line":297,"column":-1,"procedure":"clojure.lang.EdnReader.matchSymbol(java.lang.String):java.lang.Object","procedure_start_line":289,"file":"src/jvm/clojure/lang/EdnReader.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/EdnReader.java","line_number":289,"column_number":-1,"description":"start of procedure matchSymbol(...)"},{"level":0,"filename":"src/jvm/clojure/lang/EdnReader.java","line_number":290,"column_number":-1,"description":"Skipping matcher(...): unknown method"},{"level":0,"filename":"src/jvm/clojure/lang/EdnReader.java","line_number":291,"column_number":-1,"description":"Taking true branch"},{"level":0,"filename":"src/jvm/clojure/lang/EdnReader.java","line_number":293,"column_number":-1,"description":"Skipping groupCount(): unknown method"},{"level":0,"filename":"src/jvm/clojure/lang/EdnReader.java","line_number":294,"column_number":-1,"description":"Skipping group(...): unknown method"},{"level":0,"filename":"src/jvm/clojure/lang/EdnReader.java","line_number":295,"column_number":-1,"description":"Skipping group(...): unknown method"},{"level":0,"filename":"src/jvm/clojure/lang/EdnReader.java","line_number":296,"column_number":-1,"description":"Taking false branch"},{"level":0,"filename":"src/jvm/clojure/lang/EdnReader.java","line_number":297,"column_number":-1,"description":""}],"key":"EdnReader.java|matchSymbol|NULL_DEREFERENCE","node_key":"047871464c9f6b1d4e24f2901018f710","hash":"cd373e352ff1599ef25ed5de26a3a24c","bug_type_hum":"Null Dereference"},{"bug_type":"NULL_DEREFERENCE","qualifier":"object returned by `m.group(1)` could be null and is dereferenced at line 324.","severity":"ERROR","line":324,"column":-1,"procedure":"clojure.lang.EdnReader.matchNumber(java.lang.String):java.lang.Object","procedure_start_line":314,"file":"src/jvm/clojure/lang/EdnReader.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/EdnReader.java","line_number":314,"column_number":-1,"description":"start of procedure matchNumber(...)"},{"level":0,"filename":"src/jvm/clojure/lang/EdnReader.java","line_number":315,"column_number":-1,"description":"Skipping matcher(...): unknown method"},{"level":0,"filename":"src/jvm/clojure/lang/EdnReader.java","line_number":316,"column_number":-1,"description":"Taking true branch"},{"level":0,"filename":"src/jvm/clojure/lang/EdnReader.java","line_number":318,"column_number":-1,"description":"Taking false branch"},{"level":0,"filename":"src/jvm/clojure/lang/EdnReader.java","line_number":324,"column_number":-1,"description":""}],"key":"EdnReader.java|matchNumber|NULL_DEREFERENCE","node_key":"24ee14a57e8a90ab88fc833015223ecd","hash":"32789491b893e19c5a3985abb336e07b","bug_type_hum":"Null Dereference"},{"bug_type":"NULL_DEREFERENCE","qualifier":"object `v` last assigned on line 325 could be null and is dereferenced at line 326.","severity":"ERROR","line":326,"column":-1,"procedure":"clojure.lang.Var.pushThreadBindings(clojure.lang.PersistentHashMap):void","procedure_start_line":319,"file":"src/jvm/clojure/lang/Var.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/Var.java","line_number":319,"column_number":-1,"description":"start of procedure pushThreadBindings(...)"},{"level":0,"filename":"src/jvm/clojure/lang/Var.java","line_number":320,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/lang/Var.java","line_number":321,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/lang/Var.java","line_number":322,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":267,"column_number":-1,"description":"start of procedure seq()"},{"level":1,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":268,"column_number":-1,"description":"Taking true branch"},{"level":2,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":-1,"column_number":-1,"description":"Definition of nodeSeq()"},{"level":1,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":268,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":269,"column_number":-1,"description":"Taking true branch"},{"level":2,"filename":"src/jvm/clojure/lang/MapEntry.java","line_number":22,"column_number":-1,"description":"start of procedure create(...)"},{"level":2,"filename":"src/jvm/clojure/lang/MapEntry.java","line_number":23,"column_number":-1,"description":""},{"level":3,"filename":"src/jvm/clojure/lang/MapEntry.java","line_number":26,"column_number":-1,"description":"start of procedure MapEntry(...)"},{"level":4,"filename":"src/jvm/clojure/lang/AMapEntry.java","line_number":17,"column_number":-1,"description":"start of procedure AMapEntry()"},{"level":5,"filename":"src/jvm/clojure/lang/APersistentVector.java","line_number":18,"column_number":-1,"description":"start of procedure APersistentVector()"},{"level":6,"filename":"src/jvm/clojure/lang/AFn.java","line_number":15,"column_number":-1,"description":"start of procedure AFn()"},{"level":6,"filename":"src/jvm/clojure/lang/AFn.java","line_number":15,"column_number":-1,"description":"return from a call to AFn.<init>()"},{"level":5,"filename":"src/jvm/clojure/lang/APersistentVector.java","line_number":18,"column_number":-1,"description":"return from a call to APersistentVector.<init>()"},{"level":4,"filename":"src/jvm/clojure/lang/AMapEntry.java","line_number":17,"column_number":-1,"description":"return from a call to AMapEntry.<init>()"},{"level":3,"filename":"src/jvm/clojure/lang/MapEntry.java","line_number":27,"column_number":-1,"description":""},{"level":3,"filename":"src/jvm/clojure/lang/MapEntry.java","line_number":28,"column_number":-1,"description":""},{"level":3,"filename":"src/jvm/clojure/lang/MapEntry.java","line_number":29,"column_number":-1,"description":"return from a call to MapEntry.<init>(Object,Object)"},{"level":2,"filename":"src/jvm/clojure/lang/MapEntry.java","line_number":23,"column_number":-1,"description":"return from a call to MapEntry MapEntry.create(Object,Object)"},{"level":1,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":269,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Cons.java","line_number":24,"column_number":-1,"description":"start of procedure Cons(...)"},{"level":3,"filename":"src/jvm/clojure/lang/ASeq.java","line_number":36,"column_number":-1,"description":"start of procedure ASeq()"},{"level":4,"filename":"src/jvm/clojure/lang/Obj.java","line_number":27,"column_number":-1,"description":"start of procedure Obj()"},{"level":4,"filename":"src/jvm/clojure/lang/Obj.java","line_number":28,"column_number":-1,"description":""},{"level":4,"filename":"src/jvm/clojure/lang/Obj.java","line_number":29,"column_number":-1,"description":"return from a call to Obj.<init>()"},{"level":3,"filename":"src/jvm/clojure/lang/ASeq.java","line_number":37,"column_number":-1,"description":"return from a call to ASeq.<init>()"},{"level":2,"filename":"src/jvm/clojure/lang/Cons.java","line_number":25,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Cons.java","line_number":26,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Cons.java","line_number":27,"column_number":-1,"description":"return from a call to Cons.<init>(MapEntry,ISeq)"},{"level":1,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":269,"column_number":-1,"description":"return from a call to ISeq PersistentHashMap.seq()"},{"level":0,"filename":"src/jvm/clojure/lang/Var.java","line_number":322,"column_number":-1,"description":"Taking true branch"},{"level":0,"filename":"src/jvm/clojure/lang/Var.java","line_number":324,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/Cons.java","line_number":36,"column_number":-1,"description":"start of procedure first()"},{"level":1,"filename":"src/jvm/clojure/lang/Cons.java","line_number":37,"column_number":-1,"description":"return from a call to Object Cons.first()"},{"level":0,"filename":"src/jvm/clojure/lang/Var.java","line_number":324,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/lang/Var.java","line_number":325,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/MapEntry.java","line_number":31,"column_number":-1,"description":"start of procedure key()"},{"level":1,"filename":"src/jvm/clojure/lang/MapEntry.java","line_number":32,"column_number":-1,"description":"return from a call to Object MapEntry.key()"},{"level":0,"filename":"src/jvm/clojure/lang/Var.java","line_number":325,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/lang/Var.java","line_number":326,"column_number":-1,"description":"Taking false branch"}],"key":"Var.java|pushThreadBindings|NULL_DEREFERENCE","node_key":"3df05d068ed6e5a593b8c0e2733790a3","hash":"9be69f0109da4da818b6c759bd4cd1de","bug_type_hum":"Null Dereference"},{"bug_type":"NULL_DEREFERENCE","qualifier":"object returned by `left.left()` could be null and is dereferenced by call to `balanceLeftDel(...)` at line 413.","severity":"ERROR","line":413,"column":-1,"procedure":"clojure.lang.PersistentTreeMap.append(clojure.lang.PersistentTreeMap$Node,clojure.lang.PersistentTreeMap$Node):clojure.lang.PersistentTreeMap$Node","procedure_start_line":383,"file":"src/jvm/clojure/lang/PersistentTreeMap.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":383,"column_number":-1,"description":"start of procedure append(...)"},{"level":0,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":384,"column_number":-1,"description":"Taking false branch"},{"level":0,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":386,"column_number":-1,"description":"Taking false branch"},{"level":0,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":388,"column_number":-1,"description":"Taking false branch"},{"level":0,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":403,"column_number":-1,"description":"Taking false branch"},{"level":0,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":407,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":536,"column_number":-1,"description":"start of procedure right()"},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":537,"column_number":-1,"description":"return from a call to PersistentTreeMap$Node PersistentTreeMap$Node.right()"},{"level":0,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":407,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":532,"column_number":-1,"description":"start of procedure left()"},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":533,"column_number":-1,"description":"return from a call to PersistentTreeMap$Node PersistentTreeMap$Node.left()"},{"level":0,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":407,"column_number":-1,"description":"Skipping append(...): unknown method"},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":383,"column_number":-1,"description":"Definition of append(...)"},{"level":0,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":408,"column_number":-1,"description":"Taking false branch"},{"level":0,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":413,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":520,"column_number":-1,"description":"start of procedure val()"},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":521,"column_number":-1,"description":"return from a call to Object PersistentTreeMap$Node.val()"},{"level":0,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":413,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":532,"column_number":-1,"description":"start of procedure left()"},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":533,"column_number":-1,"description":"return from a call to PersistentTreeMap$Node PersistentTreeMap$Node.left()"},{"level":0,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":413,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":520,"column_number":-1,"description":"start of procedure val()"},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":521,"column_number":-1,"description":"return from a call to Object PersistentTreeMap$Node.val()"},{"level":0,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":413,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":536,"column_number":-1,"description":"start of procedure right()"},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":537,"column_number":-1,"description":"return from a call to PersistentTreeMap$Node PersistentTreeMap$Node.right()"},{"level":0,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":413,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":493,"column_number":-1,"description":"start of procedure black(...)"},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":494,"column_number":-1,"description":"Taking false branch"},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":500,"column_number":-1,"description":"Taking true branch"},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":501,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":640,"column_number":-1,"description":"start of procedure PersistentTreeMap$BlackBranch(...)"},{"level":3,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":583,"column_number":-1,"description":"start of procedure PersistentTreeMap$Black(...)"},{"level":4,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":512,"column_number":-1,"description":"start of procedure PersistentTreeMap$Node(...)"},{"level":5,"filename":"src/jvm/clojure/lang/AMapEntry.java","line_number":17,"column_number":-1,"description":"start of procedure AMapEntry()"},{"level":6,"filename":"src/jvm/clojure/lang/APersistentVector.java","line_number":18,"column_number":-1,"description":"start of procedure APersistentVector()"},{"level":7,"filename":"src/jvm/clojure/lang/AFn.java","line_number":15,"column_number":-1,"description":"start of procedure AFn()"},{"level":7,"filename":"src/jvm/clojure/lang/AFn.java","line_number":15,"column_number":-1,"description":"return from a call to AFn.<init>()"},{"level":6,"filename":"src/jvm/clojure/lang/APersistentVector.java","line_number":18,"column_number":-1,"description":"return from a call to APersistentVector.<init>()"},{"level":5,"filename":"src/jvm/clojure/lang/AMapEntry.java","line_number":17,"column_number":-1,"description":"return from a call to AMapEntry.<init>()"},{"level":4,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":513,"column_number":-1,"description":""},{"level":4,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":514,"column_number":-1,"description":"return from a call to PersistentTreeMap$Node.<init>(Object)"},{"level":3,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":584,"column_number":-1,"description":"return from a call to PersistentTreeMap$Black.<init>(Object)"},{"level":2,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":641,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":642,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":643,"column_number":-1,"description":"return from a call to PersistentTreeMap$BlackBranch.<init>(Object,PersistentTreeMap$Node,PersistentTreeMap$Node)"},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":501,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":502,"column_number":-1,"description":"return from a call to PersistentTreeMap$Black PersistentTreeMap.black(Object,Object,PersistentTreeMap$Node,PersistentTreeMap$Node)"},{"level":0,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":413,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":417,"column_number":-1,"description":"start of procedure balanceLeftDel(...)"},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":418,"column_number":-1,"description":"Taking true branch"},{"level":1,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":419,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":698,"column_number":-1,"description":"start of procedure blacken()"},{"level":2,"filename":"src/jvm/clojure/lang/PersistentTreeMap.java","line_number":699,"column_number":-1,"description":""}],"key":"PersistentTreeMap.java|append|NULL_DEREFERENCE","node_key":"5fd7906e0ac52560e04ed085822a8cce","hash":"3815ed3bee5ccd69c0e4a20124530186","bug_type_hum":"Null Dereference"},{"bug_type":"RESOURCE_LEAK","qualifier":"resource of type `java.net.HttpURLConnection` acquired by call to `openConnection()` at line 393 is not released after line 401.","severity":"ERROR","line":401,"column":-1,"procedure":"clojure.lang.RT.lastModified(java.net.URL,java.lang.String):long","procedure_start_line":392,"file":"src/jvm/clojure/lang/RT.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/RT.java","line_number":392,"column_number":-1,"description":"start of procedure lastModified(...)"},{"level":0,"filename":"src/jvm/clojure/lang/RT.java","line_number":393,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/lang/RT.java","line_number":395,"column_number":-1,"description":"Taking false branch"},{"level":0,"filename":"src/jvm/clojure/lang/RT.java","line_number":398,"column_number":-1,"description":"Skipping getLastModified(): unknown method"},{"level":0,"filename":"src/jvm/clojure/lang/RT.java","line_number":401,"column_number":-1,"description":""}],"key":"RT.java|lastModified|RESOURCE_LEAK","node_key":"18086a76ec6f499138a84f176568ec09","hash":"d0c5cb802d0d615287b7db9589d101e5","bug_type_hum":"Resource Leak"},{"bug_type":"NULL_DEREFERENCE","qualifier":"object `name` last assigned on line 422 could be null and is dereferenced at line 424.","severity":"ERROR","line":424,"column":-1,"procedure":"clojure.lang.LispReader.matchSymbol(java.lang.String,clojure.lang.LispReader$Resolver):java.lang.Object","procedure_start_line":416,"file":"src/jvm/clojure/lang/LispReader.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":416,"column_number":-1,"description":"start of procedure matchSymbol(...)"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":417,"column_number":-1,"description":"Skipping matcher(...): unknown method"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":418,"column_number":-1,"description":"Taking true branch"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":420,"column_number":-1,"description":"Skipping groupCount(): unknown method"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":421,"column_number":-1,"description":"Skipping group(...): unknown method"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":422,"column_number":-1,"description":"Skipping group(...): unknown method"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":423,"column_number":-1,"description":"Taking false branch"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":424,"column_number":-1,"description":""}],"key":"LispReader.java|matchSymbol|NULL_DEREFERENCE","node_key":"047871464c9f6b1d4e24f2901018f710","hash":"4765c58e7df18a632ddad8869ae6f916","bug_type_hum":"Null Dereference"},{"bug_type":"NULL_DEREFERENCE","qualifier":"object returned by `m.group(1)` could be null and is dereferenced at line 477.","severity":"ERROR","line":477,"column":-1,"procedure":"clojure.lang.LispReader.matchNumber(java.lang.String):java.lang.Object","procedure_start_line":467,"file":"src/jvm/clojure/lang/LispReader.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":467,"column_number":-1,"description":"start of procedure matchNumber(...)"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":468,"column_number":-1,"description":"Skipping matcher(...): unknown method"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":469,"column_number":-1,"description":"Taking true branch"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":471,"column_number":-1,"description":"Taking false branch"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":477,"column_number":-1,"description":""}],"key":"LispReader.java|matchNumber|NULL_DEREFERENCE","node_key":"24ee14a57e8a90ab88fc833015223ecd","hash":"49ca07c6d9c00ccc09a994d721c3e5a8","bug_type_hum":"Null Dereference"},{"bug_type":"NULL_DEREFERENCE","qualifier":"object `sym` last assigned on line 528 could be null and is dereferenced at line 544.","severity":"ERROR","line":544,"column":-1,"procedure":"clojure.lang.Compiler$DefExpr$Parser.parse(clojure.lang.Compiler$C,java.lang.Object):clojure.lang.Compiler$Expr","procedure_start_line":515,"file":"src/jvm/clojure/lang/Compiler.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":515,"column_number":-1,"description":"start of procedure parse(...)"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":517,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":518,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":640,"column_number":-1,"description":"start of procedure count(...)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":641,"column_number":-1,"description":"Taking false branch"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":643,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Util.java","line_number":197,"column_number":-1,"description":"start of procedure ret1(...)"},{"level":2,"filename":"src/jvm/clojure/lang/Util.java","line_number":198,"column_number":-1,"description":"return from a call to Object Util.ret1(IPersistentCollection,Object)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":643,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":646,"column_number":-1,"description":"start of procedure countFrom(...)"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":647,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":649,"column_number":-1,"description":"Taking true branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":650,"column_number":-1,"description":""},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":531,"column_number":-1,"description":"start of procedure seq(...)"},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":532,"column_number":-1,"description":"Taking false branch"},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":534,"column_number":-1,"description":"Taking false branch"},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":537,"column_number":-1,"description":""},{"level":4,"filename":"src/jvm/clojure/lang/RT.java","line_number":541,"column_number":-1,"description":"start of procedure seqFrom(...)"},{"level":4,"filename":"src/jvm/clojure/lang/RT.java","line_number":542,"column_number":-1,"description":"Taking true branch"},{"level":4,"filename":"src/jvm/clojure/lang/RT.java","line_number":543,"column_number":-1,"description":"Skipping seq(): unknown method"},{"level":5,"filename":"src/jvm/clojure/lang/Seqable.java","line_number":-1,"column_number":-1,"description":"Definition of seq()"},{"level":4,"filename":"src/jvm/clojure/lang/RT.java","line_number":543,"column_number":-1,"description":""},{"level":4,"filename":"src/jvm/clojure/lang/RT.java","line_number":557,"column_number":-1,"description":"return from a call to ISeq RT.seqFrom(Seqable)"},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":537,"column_number":-1,"description":"return from a call to ISeq RT.seq(IPersistentCollection)"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":651,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":652,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":653,"column_number":-1,"description":"Taking true branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":654,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":656,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":653,"column_number":-1,"description":"Skipping next(): unknown method"},{"level":3,"filename":"src/jvm/clojure/lang/ISeq.java","line_number":-1,"column_number":-1,"description":"Definition of next()"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":653,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":658,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":671,"column_number":-1,"description":"return from a call to int RT.countFrom(IPersistentCollection)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":643,"column_number":-1,"description":"return from a call to int RT.count(Object)"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":518,"column_number":-1,"description":"Taking false branch"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":522,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":640,"column_number":-1,"description":"start of procedure count(...)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":641,"column_number":-1,"description":"Taking false branch"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":643,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Util.java","line_number":197,"column_number":-1,"description":"start of procedure ret1(...)"},{"level":2,"filename":"src/jvm/clojure/lang/Util.java","line_number":198,"column_number":-1,"description":"return from a call to Object Util.ret1(IPersistentCollection,Object)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":643,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":646,"column_number":-1,"description":"start of procedure countFrom(...)"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":647,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":649,"column_number":-1,"description":"Taking true branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":650,"column_number":-1,"description":""},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":531,"column_number":-1,"description":"start of procedure seq(...)"},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":532,"column_number":-1,"description":"Taking false branch"},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":534,"column_number":-1,"description":"Taking false branch"},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":537,"column_number":-1,"description":""},{"level":4,"filename":"src/jvm/clojure/lang/RT.java","line_number":541,"column_number":-1,"description":"start of procedure seqFrom(...)"},{"level":4,"filename":"src/jvm/clojure/lang/RT.java","line_number":542,"column_number":-1,"description":"Taking true branch"},{"level":4,"filename":"src/jvm/clojure/lang/RT.java","line_number":543,"column_number":-1,"description":"Skipping seq(): unknown method"},{"level":5,"filename":"src/jvm/clojure/lang/Seqable.java","line_number":-1,"column_number":-1,"description":"Definition of seq()"},{"level":4,"filename":"src/jvm/clojure/lang/RT.java","line_number":543,"column_number":-1,"description":""},{"level":4,"filename":"src/jvm/clojure/lang/RT.java","line_number":557,"column_number":-1,"description":"return from a call to ISeq RT.seqFrom(Seqable)"},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":537,"column_number":-1,"description":"return from a call to ISeq RT.seq(IPersistentCollection)"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":651,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":652,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":653,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":658,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":671,"column_number":-1,"description":"return from a call to int RT.countFrom(IPersistentCollection)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":643,"column_number":-1,"description":"return from a call to int RT.count(IPersistentCollection)"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":522,"column_number":-1,"description":"Taking false branch"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":524,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":640,"column_number":-1,"description":"start of procedure count(...)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":641,"column_number":-1,"description":"Taking false branch"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":643,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Util.java","line_number":197,"column_number":-1,"description":"start of procedure ret1(...)"},{"level":2,"filename":"src/jvm/clojure/lang/Util.java","line_number":198,"column_number":-1,"description":"return from a call to Object Util.ret1(IPersistentCollection,Object)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":643,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":646,"column_number":-1,"description":"start of procedure countFrom(...)"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":647,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":649,"column_number":-1,"description":"Taking true branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":650,"column_number":-1,"description":""},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":531,"column_number":-1,"description":"start of procedure seq(...)"},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":532,"column_number":-1,"description":"Taking false branch"},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":534,"column_number":-1,"description":"Taking false branch"},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":537,"column_number":-1,"description":""},{"level":4,"filename":"src/jvm/clojure/lang/RT.java","line_number":541,"column_number":-1,"description":"start of procedure seqFrom(...)"},{"level":4,"filename":"src/jvm/clojure/lang/RT.java","line_number":542,"column_number":-1,"description":"Taking true branch"},{"level":4,"filename":"src/jvm/clojure/lang/RT.java","line_number":543,"column_number":-1,"description":"Skipping seq(): unknown method"},{"level":5,"filename":"src/jvm/clojure/lang/Seqable.java","line_number":-1,"column_number":-1,"description":"Definition of seq()"},{"level":4,"filename":"src/jvm/clojure/lang/RT.java","line_number":543,"column_number":-1,"description":""},{"level":4,"filename":"src/jvm/clojure/lang/RT.java","line_number":557,"column_number":-1,"description":"return from a call to ISeq RT.seqFrom(Seqable)"},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":537,"column_number":-1,"description":"return from a call to ISeq RT.seq(IPersistentCollection)"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":651,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":652,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":653,"column_number":-1,"description":"Taking true branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":654,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":656,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":653,"column_number":-1,"description":"Skipping next(): unknown method"},{"level":3,"filename":"src/jvm/clojure/lang/ISeq.java","line_number":-1,"column_number":-1,"description":"Definition of next()"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":653,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":658,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":671,"column_number":-1,"description":"return from a call to int RT.countFrom(IPersistentCollection)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":643,"column_number":-1,"description":"return from a call to int RT.count(IPersistentCollection)"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":524,"column_number":-1,"description":"Taking false branch"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":526,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":699,"column_number":-1,"description":"start of procedure second(...)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":700,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":711,"column_number":-1,"description":"start of procedure next(...)"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":712,"column_number":-1,"description":"Taking true branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":713,"column_number":-1,"description":"Skipping next(): unknown method"},{"level":3,"filename":"src/jvm/clojure/lang/ISeq.java","line_number":-1,"column_number":-1,"description":"Definition of next()"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":713,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":717,"column_number":-1,"description":"return from a call to ISeq RT.next(ISeq)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":700,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":690,"column_number":-1,"description":"start of procedure first(...)"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":691,"column_number":-1,"description":"Taking true branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":692,"column_number":-1,"description":"Skipping first(): unknown method"},{"level":3,"filename":"src/jvm/clojure/lang/ISeq.java","line_number":-1,"column_number":-1,"description":"Definition of first()"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":692,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":696,"column_number":-1,"description":"return from a call to Object RT.first(Object)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":700,"column_number":-1,"description":"return from a call to Object RT.second(IPersistentCollection)"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":526,"column_number":-1,"description":"Taking false branch"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":528,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":699,"column_number":-1,"description":"start of procedure second(...)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":700,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":711,"column_number":-1,"description":"start of procedure next(...)"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":712,"column_number":-1,"description":"Taking true branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":713,"column_number":-1,"description":"Skipping next(): unknown method"},{"level":3,"filename":"src/jvm/clojure/lang/ISeq.java","line_number":-1,"column_number":-1,"description":"Definition of next()"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":713,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":717,"column_number":-1,"description":"return from a call to ISeq RT.next(ISeq)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":700,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":690,"column_number":-1,"description":"start of procedure first(...)"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":691,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":693,"column_number":-1,"description":"Skipping seq(...): unknown method"},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":531,"column_number":-1,"description":"Definition of seq(...)"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":694,"column_number":-1,"description":"Taking true branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":695,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":696,"column_number":-1,"description":"return from a call to Object RT.first(Object)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":700,"column_number":-1,"description":"return from a call to Object RT.second(ISeq)"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":528,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":529,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":7502,"column_number":-1,"description":"start of procedure lookupVar(...)"},{"level":2,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":7458,"column_number":-1,"description":"Definition of lookupVar(...)"},{"level":1,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":7502,"column_number":-1,"description":"return from a call to Var Compiler.lookupVar(Symbol,boolean)"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":530,"column_number":-1,"description":"Taking false branch"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":532,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":7518,"column_number":-1,"description":"start of procedure currentNS()"},{"level":1,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":7519,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":201,"column_number":-1,"description":"start of procedure deref()"},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":202,"column_number":-1,"description":""},{"level":3,"filename":"src/jvm/clojure/lang/Var.java","line_number":359,"column_number":-1,"description":"start of procedure getThreadBinding()"},{"level":3,"filename":"src/jvm/clojure/lang/Var.java","line_number":360,"column_number":-1,"description":"Taking false branch"},{"level":3,"filename":"src/jvm/clojure/lang/Var.java","line_number":366,"column_number":-1,"description":"return from a call to Var$TBox Var.getThreadBinding()"},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":203,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":205,"column_number":-1,"description":"return from a call to Object Var.deref()"},{"level":1,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":7519,"column_number":-1,"description":"return from a call to Namespace Compiler.currentNS()"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":532,"column_number":-1,"description":"Taking false branch"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":544,"column_number":-1,"description":""}],"key":"Compiler.java|parse|NULL_DEREFERENCE","node_key":"cb297163403999cf68090631b1eb80a6","hash":"c5488be35d1cca0ea7b26c86ef485d8a","bug_type_hum":"Null Dereference"},{"bug_type":"NULL_DEREFERENCE","qualifier":"object `argsyms` last assigned on line 874 could be null and is dereferenced at line 875.","severity":"ERROR","line":875,"column":-1,"procedure":"clojure.lang.LispReader$FnReader.invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object):java.lang.Object","procedure_start_line":862,"file":"src/jvm/clojure/lang/LispReader.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":862,"column_number":-1,"description":"start of procedure invoke(...)"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":863,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":864,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/Var.java","line_number":201,"column_number":-1,"description":"start of procedure deref()"},{"level":1,"filename":"src/jvm/clojure/lang/Var.java","line_number":202,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":359,"column_number":-1,"description":"start of procedure getThreadBinding()"},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":360,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":366,"column_number":-1,"description":"return from a call to Var$TBox Var.getThreadBinding()"},{"level":1,"filename":"src/jvm/clojure/lang/Var.java","line_number":203,"column_number":-1,"description":"Taking false branch"},{"level":1,"filename":"src/jvm/clojure/lang/Var.java","line_number":205,"column_number":-1,"description":"return from a call to Object Var.deref()"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":864,"column_number":-1,"description":"Taking false branch"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":868,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":869,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":1588,"column_number":-1,"description":"start of procedure map(...)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":1589,"column_number":-1,"description":"Taking true branch"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":1589,"column_number":-1,"description":"Taking false branch"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":1591,"column_number":-1,"description":"Taking false branch"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":1593,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":63,"column_number":-1,"description":"start of procedure createWithCheck(...)"},{"level":2,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":64,"column_number":-1,"description":""},{"level":3,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":287,"column_number":-1,"description":"start of procedure asTransient()"},{"level":3,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":288,"column_number":-1,"description":""},{"level":4,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":305,"column_number":-1,"description":"start of procedure PersistentHashMap$TransientHashMap(...)"},{"level":5,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":308,"column_number":-1,"description":"start of procedure PersistentHashMap$TransientHashMap(...)"},{"level":6,"filename":"src/jvm/clojure/lang/ATransientMap.java","line_number":17,"column_number":-1,"description":"start of procedure ATransientMap()"},{"level":7,"filename":"src/jvm/clojure/lang/AFn.java","line_number":15,"column_number":-1,"description":"start of procedure AFn()"},{"level":7,"filename":"src/jvm/clojure/lang/AFn.java","line_number":15,"column_number":-1,"description":"return from a call to AFn.<init>()"},{"level":6,"filename":"src/jvm/clojure/lang/ATransientMap.java","line_number":17,"column_number":-1,"description":"return from a call to ATransientMap.<init>()"},{"level":5,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":301,"column_number":-1,"description":""},{"level":6,"filename":"src/jvm/clojure/lang/Box.java","line_number":19,"column_number":-1,"description":"start of procedure Box(...)"},{"level":6,"filename":"src/jvm/clojure/lang/Box.java","line_number":20,"column_number":-1,"description":""},{"level":6,"filename":"src/jvm/clojure/lang/Box.java","line_number":21,"column_number":-1,"description":"return from a call to Box.<init>(Object)"},{"level":5,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":301,"column_number":-1,"description":""},{"level":5,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":309,"column_number":-1,"description":""},{"level":5,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":310,"column_number":-1,"description":""},{"level":5,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":311,"column_number":-1,"description":""},{"level":5,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":312,"column_number":-1,"description":""},{"level":5,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":313,"column_number":-1,"description":""},{"level":5,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":314,"column_number":-1,"description":"return from a call to PersistentHashMap$TransientHashMap.<init>(AtomicReference,PersistentHashMap$INode,int,boolean,Object)"},{"level":4,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":306,"column_number":-1,"description":"return from a call to PersistentHashMap$TransientHashMap.<init>(PersistentHashMap)"},{"level":3,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":288,"column_number":-1,"description":"return from a call to PersistentHashMap$TransientHashMap PersistentHashMap.asTransient()"},{"level":2,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":65,"column_number":-1,"description":"Taking true branch"},{"level":2,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":67,"column_number":-1,"description":""},{"level":3,"filename":"src/jvm/clojure/lang/ATransientMap.java","line_number":62,"column_number":-1,"description":"start of procedure assoc(...)"},{"level":3,"filename":"src/jvm/clojure/lang/ATransientMap.java","line_number":63,"column_number":-1,"description":"Skipping ensureEditable(): unknown method"},{"level":4,"filename":"src/jvm/clojure/lang/ATransientMap.java","line_number":-1,"column_number":-1,"description":"Definition of ensureEditable()"},{"level":3,"filename":"src/jvm/clojure/lang/ATransientMap.java","line_number":64,"column_number":-1,"description":"Skipping doAssoc(...): unknown method"},{"level":4,"filename":"src/jvm/clojure/lang/ATransientMap.java","line_number":-1,"column_number":-1,"description":"Definition of doAssoc(...)"},{"level":3,"filename":"src/jvm/clojure/lang/ATransientMap.java","line_number":64,"column_number":-1,"description":"return from a call to ITransientMap ATransientMap.assoc(Object,Object)"},{"level":2,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":67,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":68,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":65,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":71,"column_number":-1,"description":"Skipping persistent(): unknown method"},{"level":3,"filename":"src/jvm/clojure/lang/ITransientMap.java","line_number":-1,"column_number":-1,"description":"Definition of persistent()"},{"level":2,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":71,"column_number":-1,"description":"return from a call to PersistentHashMap PersistentHashMap.createWithCheck(Object[])"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":1593,"column_number":-1,"description":"return from a call to IPersistentMap RT.map(Object[])"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":868,"column_number":-1,"description":"Skipping pushThreadBindings(...): empty list of specs"},{"level":1,"filename":"src/jvm/clojure/lang/Var.java","line_number":319,"column_number":-1,"description":"Definition of pushThreadBindings(...)"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":870,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":134,"column_number":-1,"description":"start of procedure unread(...)"},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":135,"column_number":-1,"description":"Taking true branch"},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":138,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":144,"column_number":-1,"description":"return from a call to void LispReader.unread(PushbackReader,int)"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":871,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":223,"column_number":-1,"description":"start of procedure ensurePending(...)"},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":224,"column_number":-1,"description":"Taking false branch"},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":227,"column_number":-1,"description":"return from a call to Object LispReader.ensurePending(Object)"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":871,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":220,"column_number":-1,"description":"start of procedure read(...)"},{"level":2,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":223,"column_number":-1,"description":"start of procedure ensurePending(...)"},{"level":2,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":224,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":227,"column_number":-1,"description":"return from a call to Object LispReader.ensurePending(Object)"},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":220,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":201,"column_number":-1,"description":"start of procedure deref()"},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":202,"column_number":-1,"description":""},{"level":3,"filename":"src/jvm/clojure/lang/Var.java","line_number":359,"column_number":-1,"description":"start of procedure getThreadBinding()"},{"level":3,"filename":"src/jvm/clojure/lang/Var.java","line_number":360,"column_number":-1,"description":"Taking false branch"},{"level":3,"filename":"src/jvm/clojure/lang/Var.java","line_number":366,"column_number":-1,"description":"return from a call to Var$TBox Var.getThreadBinding()"},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":203,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":205,"column_number":-1,"description":"return from a call to Object Var.deref()"},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":220,"column_number":-1,"description":"Skipping read(...): empty list of specs"},{"level":2,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":243,"column_number":-1,"description":"Definition of read(...)"},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":220,"column_number":-1,"description":"return from a call to Object LispReader.read(PushbackReader,boolean,Object,boolean,Object,Object)"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":873,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":874,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/Var.java","line_number":201,"column_number":-1,"description":"start of procedure deref()"},{"level":1,"filename":"src/jvm/clojure/lang/Var.java","line_number":202,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":359,"column_number":-1,"description":"start of procedure getThreadBinding()"},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":360,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":366,"column_number":-1,"description":"return from a call to Var$TBox Var.getThreadBinding()"},{"level":1,"filename":"src/jvm/clojure/lang/Var.java","line_number":203,"column_number":-1,"description":"Taking false branch"},{"level":1,"filename":"src/jvm/clojure/lang/Var.java","line_number":205,"column_number":-1,"description":"return from a call to Object Var.deref()"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":874,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":875,"column_number":-1,"description":""}],"key":"LispReader.java|invoke|NULL_DEREFERENCE","node_key":"cbf4abef6a7d17d1b80dfb598ec521f3","hash":"ddff43b482c2d1669394873dd5340613","bug_type_hum":"Null Dereference"},{"bug_type":"NULL_DEREFERENCE","qualifier":"object `e` last assigned on line 1151 could be null and is dereferenced at line 1152.","severity":"ERROR","line":1152,"column":-1,"procedure":"clojure.lang.LispReader$SyntaxQuoteReader.flattenMap(java.lang.Object):clojure.lang.IPersistentVector","procedure_start_line":1147,"file":"src/jvm/clojure/lang/LispReader.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1147,"column_number":-1,"description":"start of procedure flattenMap(...)"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1148,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1149,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":531,"column_number":-1,"description":"start of procedure seq(...)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":532,"column_number":-1,"description":"Taking false branch"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":534,"column_number":-1,"description":"Taking false branch"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":537,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":541,"column_number":-1,"description":"start of procedure seqFrom(...)"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":542,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":544,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":546,"column_number":-1,"description":"Taking true branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":547,"column_number":-1,"description":""},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":516,"column_number":-1,"description":"start of procedure chunkIteratorSeq(...)"},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":517,"column_number":-1,"description":"Taking true branch"},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":518,"column_number":-1,"description":""},{"level":4,"filename":"src/jvm/clojure/lang/RT.java","line_number":518,"column_number":-1,"description":"start of procedure RT$4(...)"},{"level":5,"filename":"src/jvm/clojure/lang/AFn.java","line_number":15,"column_number":-1,"description":"start of procedure AFn()"},{"level":5,"filename":"src/jvm/clojure/lang/AFn.java","line_number":15,"column_number":-1,"description":"return from a call to AFn.<init>()"},{"level":4,"filename":"src/jvm/clojure/lang/RT.java","line_number":518,"column_number":-1,"description":"return from a call to RT$4.<init>(Iterator)"},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":518,"column_number":-1,"description":""},{"level":4,"filename":"src/jvm/clojure/lang/LazySeq.java","line_number":25,"column_number":-1,"description":"start of procedure LazySeq(...)"},{"level":5,"filename":"src/jvm/clojure/lang/Obj.java","line_number":27,"column_number":-1,"description":"start of procedure Obj()"},{"level":5,"filename":"src/jvm/clojure/lang/Obj.java","line_number":28,"column_number":-1,"description":""},{"level":5,"filename":"src/jvm/clojure/lang/Obj.java","line_number":29,"column_number":-1,"description":"return from a call to Obj.<init>()"},{"level":4,"filename":"src/jvm/clojure/lang/LazySeq.java","line_number":26,"column_number":-1,"description":""},{"level":4,"filename":"src/jvm/clojure/lang/LazySeq.java","line_number":27,"column_number":-1,"description":"return from a call to LazySeq.<init>(RT$4)"},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":518,"column_number":-1,"description":""},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":528,"column_number":-1,"description":"return from a call to ISeq RT.chunkIteratorSeq(Iterator)"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":547,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":557,"column_number":-1,"description":"return from a call to ISeq RT.seqFrom(Iterable)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":537,"column_number":-1,"description":"return from a call to ISeq RT.seq(Object)"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1149,"column_number":-1,"description":"Taking true branch"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1151,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/LazySeq.java","line_number":74,"column_number":-1,"description":"start of procedure first()"},{"level":1,"filename":"src/jvm/clojure/lang/LazySeq.java","line_number":75,"column_number":-1,"description":"Skipping seq(): empty list of specs"},{"level":2,"filename":"src/jvm/clojure/lang/LazySeq.java","line_number":52,"column_number":-1,"description":"Definition of seq()"},{"level":1,"filename":"src/jvm/clojure/lang/LazySeq.java","line_number":76,"column_number":-1,"description":"Taking true branch"},{"level":1,"filename":"src/jvm/clojure/lang/LazySeq.java","line_number":77,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/LazySeq.java","line_number":78,"column_number":-1,"description":"return from a call to Object LazySeq.first()"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1151,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1152,"column_number":-1,"description":""}],"key":"LispReader.java|flattenMap|NULL_DEREFERENCE","node_key":"35342c54f5d596fdda40db0c5b900b93","hash":"81342096341bd812e923897c7e16c635","bug_type_hum":"Null Dereference"},{"bug_type":"NULL_DEREFERENCE","qualifier":"object `fs` last assigned on line 1308 could be null and is dereferenced at line 1309.","severity":"ERROR","line":1309,"column":-1,"procedure":"clojure.lang.LispReader$EvalReader.invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object):java.lang.Object","procedure_start_line":1294,"file":"src/jvm/clojure/lang/LispReader.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1294,"column_number":-1,"description":"start of procedure invoke(...)"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1295,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/Var.java","line_number":201,"column_number":-1,"description":"start of procedure deref()"},{"level":1,"filename":"src/jvm/clojure/lang/Var.java","line_number":202,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":359,"column_number":-1,"description":"start of procedure getThreadBinding()"},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":360,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":366,"column_number":-1,"description":"return from a call to Var$TBox Var.getThreadBinding()"},{"level":1,"filename":"src/jvm/clojure/lang/Var.java","line_number":203,"column_number":-1,"description":"Taking false branch"},{"level":1,"filename":"src/jvm/clojure/lang/Var.java","line_number":205,"column_number":-1,"description":"return from a call to Object Var.deref()"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1295,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":1112,"column_number":-1,"description":"start of procedure booleanCast(...)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":1113,"column_number":-1,"description":"Taking true branch"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":1114,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":1115,"column_number":-1,"description":"return from a call to boolean RT.booleanCast(Object)"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1295,"column_number":-1,"description":"Taking false branch"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1300,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1301,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":223,"column_number":-1,"description":"start of procedure ensurePending(...)"},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":224,"column_number":-1,"description":"Taking false branch"},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":227,"column_number":-1,"description":"return from a call to Object LispReader.ensurePending(Object)"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1301,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":220,"column_number":-1,"description":"start of procedure read(...)"},{"level":2,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":223,"column_number":-1,"description":"start of procedure ensurePending(...)"},{"level":2,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":224,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":227,"column_number":-1,"description":"return from a call to Object LispReader.ensurePending(Object)"},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":220,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":201,"column_number":-1,"description":"start of procedure deref()"},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":202,"column_number":-1,"description":""},{"level":3,"filename":"src/jvm/clojure/lang/Var.java","line_number":359,"column_number":-1,"description":"start of procedure getThreadBinding()"},{"level":3,"filename":"src/jvm/clojure/lang/Var.java","line_number":360,"column_number":-1,"description":"Taking false branch"},{"level":3,"filename":"src/jvm/clojure/lang/Var.java","line_number":366,"column_number":-1,"description":"return from a call to Var$TBox Var.getThreadBinding()"},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":203,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":205,"column_number":-1,"description":"return from a call to Object Var.deref()"},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":220,"column_number":-1,"description":"Skipping read(...): empty list of specs"},{"level":2,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":243,"column_number":-1,"description":"Definition of read(...)"},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":220,"column_number":-1,"description":"return from a call to Object LispReader.read(PushbackReader,boolean,Object,boolean,Object,Object)"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1302,"column_number":-1,"description":"Taking false branch"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1306,"column_number":-1,"description":"Taking true branch"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1308,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":690,"column_number":-1,"description":"start of procedure first(...)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":691,"column_number":-1,"description":"Taking false branch"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":693,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":531,"column_number":-1,"description":"start of procedure seq(...)"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":532,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":534,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":537,"column_number":-1,"description":""},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":541,"column_number":-1,"description":"start of procedure seqFrom(...)"},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":542,"column_number":-1,"description":"Taking true branch"},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":543,"column_number":-1,"description":"Skipping seq(): unknown method"},{"level":4,"filename":"src/jvm/clojure/lang/Seqable.java","line_number":-1,"column_number":-1,"description":"Definition of seq()"},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":543,"column_number":-1,"description":""},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":557,"column_number":-1,"description":"return from a call to ISeq RT.seqFrom(Seqable)"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":537,"column_number":-1,"description":"return from a call to ISeq RT.seq(Seqable)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":694,"column_number":-1,"description":"Taking true branch"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":695,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":696,"column_number":-1,"description":"return from a call to Object RT.first(IPersistentList)"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1308,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1309,"column_number":-1,"description":""}],"key":"LispReader.java|invoke|NULL_DEREFERENCE","node_key":"47cad7001b4f0ad29a14d042d789646c","hash":"cc1069cf5093e89865eeda45d23890a9","bug_type_hum":"Null Dereference"},{"bug_type":"NULL_DEREFERENCE","qualifier":"object `listReader` last assigned on line 1654 could be null and is dereferenced at line 1655.","severity":"ERROR","line":1655,"column":-1,"procedure":"clojure.lang.LispReader$ConditionalReader.invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object):java.lang.Object","procedure_start_line":1626,"file":"src/jvm/clojure/lang/LispReader.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1626,"column_number":-1,"description":"start of procedure invoke(...)"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1627,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1619,"column_number":-1,"description":"start of procedure checkConditionalAllowed(...)"},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1620,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1621,"column_number":-1,"description":"Taking true branch"},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1621,"column_number":-1,"description":"Taking false branch"},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1624,"column_number":-1,"description":"return from a call to void LispReader$ConditionalReader.checkConditionalAllowed(Object)"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1629,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1630,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":167,"column_number":-1,"description":"start of procedure read1(...)"},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":170,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":174,"column_number":-1,"description":"return from a call to int LispReader.read1(PushbackReader)"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1631,"column_number":-1,"description":"Taking false branch"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1634,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1636,"column_number":-1,"description":"Taking false branch"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1641,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":130,"column_number":-1,"description":"start of procedure isWhitespace(...)"},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":131,"column_number":-1,"description":"Taking false branch"},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":131,"column_number":-1,"description":"return from a call to boolean LispReader.isWhitespace(int)"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1641,"column_number":-1,"description":"Taking false branch"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1644,"column_number":-1,"description":"Taking false branch"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1647,"column_number":-1,"description":"Taking false branch"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1651,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":1588,"column_number":-1,"description":"start of procedure map(...)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":1589,"column_number":-1,"description":"Taking true branch"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":1589,"column_number":-1,"description":"Taking false branch"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":1591,"column_number":-1,"description":"Taking false branch"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":1593,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":63,"column_number":-1,"description":"start of procedure createWithCheck(...)"},{"level":2,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":64,"column_number":-1,"description":""},{"level":3,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":287,"column_number":-1,"description":"start of procedure asTransient()"},{"level":3,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":288,"column_number":-1,"description":""},{"level":4,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":305,"column_number":-1,"description":"start of procedure PersistentHashMap$TransientHashMap(...)"},{"level":5,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":308,"column_number":-1,"description":"start of procedure PersistentHashMap$TransientHashMap(...)"},{"level":6,"filename":"src/jvm/clojure/lang/ATransientMap.java","line_number":17,"column_number":-1,"description":"start of procedure ATransientMap()"},{"level":7,"filename":"src/jvm/clojure/lang/AFn.java","line_number":15,"column_number":-1,"description":"start of procedure AFn()"},{"level":7,"filename":"src/jvm/clojure/lang/AFn.java","line_number":15,"column_number":-1,"description":"return from a call to AFn.<init>()"},{"level":6,"filename":"src/jvm/clojure/lang/ATransientMap.java","line_number":17,"column_number":-1,"description":"return from a call to ATransientMap.<init>()"},{"level":5,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":301,"column_number":-1,"description":""},{"level":6,"filename":"src/jvm/clojure/lang/Box.java","line_number":19,"column_number":-1,"description":"start of procedure Box(...)"},{"level":6,"filename":"src/jvm/clojure/lang/Box.java","line_number":20,"column_number":-1,"description":""},{"level":6,"filename":"src/jvm/clojure/lang/Box.java","line_number":21,"column_number":-1,"description":"return from a call to Box.<init>(Object)"},{"level":5,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":301,"column_number":-1,"description":""},{"level":5,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":309,"column_number":-1,"description":""},{"level":5,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":310,"column_number":-1,"description":""},{"level":5,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":311,"column_number":-1,"description":""},{"level":5,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":312,"column_number":-1,"description":""},{"level":5,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":313,"column_number":-1,"description":""},{"level":5,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":314,"column_number":-1,"description":"return from a call to PersistentHashMap$TransientHashMap.<init>(AtomicReference,PersistentHashMap$INode,int,boolean,Object)"},{"level":4,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":306,"column_number":-1,"description":"return from a call to PersistentHashMap$TransientHashMap.<init>(PersistentHashMap)"},{"level":3,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":288,"column_number":-1,"description":"return from a call to PersistentHashMap$TransientHashMap PersistentHashMap.asTransient()"},{"level":2,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":65,"column_number":-1,"description":"Taking true branch"},{"level":2,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":67,"column_number":-1,"description":""},{"level":3,"filename":"src/jvm/clojure/lang/ATransientMap.java","line_number":62,"column_number":-1,"description":"start of procedure assoc(...)"},{"level":3,"filename":"src/jvm/clojure/lang/ATransientMap.java","line_number":63,"column_number":-1,"description":"Skipping ensureEditable(): unknown method"},{"level":4,"filename":"src/jvm/clojure/lang/ATransientMap.java","line_number":-1,"column_number":-1,"description":"Definition of ensureEditable()"},{"level":3,"filename":"src/jvm/clojure/lang/ATransientMap.java","line_number":64,"column_number":-1,"description":"Skipping doAssoc(...): unknown method"},{"level":4,"filename":"src/jvm/clojure/lang/ATransientMap.java","line_number":-1,"column_number":-1,"description":"Definition of doAssoc(...)"},{"level":3,"filename":"src/jvm/clojure/lang/ATransientMap.java","line_number":64,"column_number":-1,"description":"return from a call to ITransientMap ATransientMap.assoc(Object,Object)"},{"level":2,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":67,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":68,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":65,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":71,"column_number":-1,"description":"Skipping persistent(): unknown method"},{"level":3,"filename":"src/jvm/clojure/lang/ITransientMap.java","line_number":-1,"column_number":-1,"description":"Definition of persistent()"},{"level":2,"filename":"src/jvm/clojure/lang/PersistentHashMap.java","line_number":71,"column_number":-1,"description":"return from a call to PersistentHashMap PersistentHashMap.createWithCheck(Object[])"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":1593,"column_number":-1,"description":"return from a call to IPersistentMap RT.map(Object[])"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1651,"column_number":-1,"description":"Skipping pushThreadBindings(...): empty list of specs"},{"level":1,"filename":"src/jvm/clojure/lang/Var.java","line_number":319,"column_number":-1,"description":"Definition of pushThreadBindings(...)"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1653,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1504,"column_number":-1,"description":"start of procedure isPreserveReadCond(...)"},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1505,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":201,"column_number":-1,"description":"start of procedure deref()"},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":202,"column_number":-1,"description":""},{"level":3,"filename":"src/jvm/clojure/lang/Var.java","line_number":359,"column_number":-1,"description":"start of procedure getThreadBinding()"},{"level":3,"filename":"src/jvm/clojure/lang/Var.java","line_number":360,"column_number":-1,"description":"Taking false branch"},{"level":3,"filename":"src/jvm/clojure/lang/Var.java","line_number":366,"column_number":-1,"description":"return from a call to Var$TBox Var.getThreadBinding()"},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":203,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":205,"column_number":-1,"description":"return from a call to Object Var.deref()"},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1505,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":1112,"column_number":-1,"description":"start of procedure booleanCast(...)"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":1113,"column_number":-1,"description":"Taking true branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":1114,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":1115,"column_number":-1,"description":"return from a call to boolean RT.booleanCast(Boolean)"},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1505,"column_number":-1,"description":"Taking true branch"},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1505,"column_number":-1,"description":"Taking true branch"},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1507,"column_number":-1,"description":"Skipping valAt(...): unknown method"},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1508,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1511,"column_number":-1,"description":"return from a call to boolean LispReader.isPreserveReadCond(IPersistentMap)"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1653,"column_number":-1,"description":"Taking true branch"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1654,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":518,"column_number":-1,"description":"start of procedure getMacro(...)"},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":519,"column_number":-1,"description":"Taking false branch"},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":521,"column_number":-1,"description":"return from a call to IFn LispReader.getMacro(int)"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1655,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":223,"column_number":-1,"description":"start of procedure ensurePending(...)"},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":224,"column_number":-1,"description":"Taking false branch"},{"level":1,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":227,"column_number":-1,"description":"return from a call to Object LispReader.ensurePending(Object)"},{"level":0,"filename":"src/jvm/clojure/lang/LispReader.java","line_number":1655,"column_number":-1,"description":""}],"key":"LispReader.java|invoke|NULL_DEREFERENCE","node_key":"815de478d5485011ce9a5ac7091fbabc","hash":"0fea2d116886addbc8ac9adb3c715d70","bug_type_hum":"Null Dereference"},{"bug_type":"NULL_DEREFERENCE","qualifier":"object `null` is dereferenced by call to `readElementValues(...)` at line 2581.","severity":"ERROR","line":2581,"column":-1,"procedure":"clojure.asm.ClassReader.readTypeAnnotations(clojure.asm.MethodVisitor,clojure.asm.Context,int,boolean):int[]","procedure_start_line":2495,"file":"src/jvm/clojure/asm/ClassReader.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2495,"column_number":-1,"description":"start of procedure readTypeAnnotations(...)"},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2500,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2501,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2503,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":3314,"column_number":-1,"description":"start of procedure readUnsignedShort(...)"},{"level":1,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":3315,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":3316,"column_number":-1,"description":"return from a call to int ClassReader.readUnsignedShort(int)"},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2503,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2504,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2506,"column_number":-1,"description":"Taking true branch"},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2507,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2510,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":3338,"column_number":-1,"description":"start of procedure readInt(...)"},{"level":1,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":3339,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":3340,"column_number":-1,"description":"return from a call to int ClassReader.readInt(int)"},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2511,"column_number":-1,"description":"Taking true branch"},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2511,"column_number":-1,"description":"Taking true branch"},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2511,"column_number":-1,"description":"Taking true branch"},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2511,"column_number":-1,"description":"Taking true branch"},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2511,"column_number":-1,"description":"Taking true branch"},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2511,"column_number":-1,"description":"Taking true branch"},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2511,"column_number":-1,"description":"Taking true branch"},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2511,"column_number":-1,"description":"Taking true branch"},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2511,"column_number":-1,"description":"Taking true branch"},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2511,"column_number":-1,"description":"Taking true branch"},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2511,"column_number":-1,"description":"Taking true branch"},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2511,"column_number":-1,"description":"Taking true branch"},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2511,"column_number":-1,"description":"Taking true branch"},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2511,"column_number":-1,"description":"Taking true branch"},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2511,"column_number":-1,"description":"Taking true branch"},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2511,"column_number":-1,"description":"Taking true branch"},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2511,"column_number":-1,"description":"Taking false branch"},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2543,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2557,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":3303,"column_number":-1,"description":"start of procedure readByte(...)"},{"level":1,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":3304,"column_number":-1,"description":"return from a call to int ClassReader.readByte(int)"},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2558,"column_number":-1,"description":"Taking false branch"},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2577,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/asm/ClassReader.java","line_number":2581,"column_number":-1,"description":""}],"key":"ClassReader.java|readTypeAnnotations|NULL_DEREFERENCE","node_key":"19c394479b950184e528ea31390c1a14","hash":"3ac7effb0b4d16970d48c612df771333","bug_type_hum":"Null Dereference"},{"bug_type":"NULL_DEREFERENCE","qualifier":"object `bindings` last assigned on line 6210 could be null and is dereferenced at line 6211.","severity":"ERROR","line":6211,"column":-1,"procedure":"clojure.lang.Compiler$LetFnExpr$Parser.parse(clojure.lang.Compiler$C,java.lang.Object):clojure.lang.Compiler$Expr","procedure_start_line":6204,"file":"src/jvm/clojure/lang/Compiler.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6204,"column_number":-1,"description":"start of procedure parse(...)"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6205,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6207,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":699,"column_number":-1,"description":"start of procedure second(...)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":700,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":711,"column_number":-1,"description":"start of procedure next(...)"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":712,"column_number":-1,"description":"Taking true branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":713,"column_number":-1,"description":"Skipping next(): unknown method"},{"level":3,"filename":"src/jvm/clojure/lang/ISeq.java","line_number":-1,"column_number":-1,"description":"Definition of next()"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":713,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":717,"column_number":-1,"description":"return from a call to ISeq RT.next(ISeq)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":700,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":690,"column_number":-1,"description":"start of procedure first(...)"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":691,"column_number":-1,"description":"Taking true branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":692,"column_number":-1,"description":"Skipping first(): unknown method"},{"level":3,"filename":"src/jvm/clojure/lang/ISeq.java","line_number":-1,"column_number":-1,"description":"Definition of first()"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":692,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":696,"column_number":-1,"description":"return from a call to Object RT.first(Object)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":700,"column_number":-1,"description":"return from a call to Object RT.second(ISeq)"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6207,"column_number":-1,"description":"Taking false branch"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6210,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":699,"column_number":-1,"description":"start of procedure second(...)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":700,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":711,"column_number":-1,"description":"start of procedure next(...)"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":712,"column_number":-1,"description":"Taking true branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":713,"column_number":-1,"description":"Skipping next(): unknown method"},{"level":3,"filename":"src/jvm/clojure/lang/ISeq.java","line_number":-1,"column_number":-1,"description":"Definition of next()"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":713,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":717,"column_number":-1,"description":"return from a call to ISeq RT.next(ISeq)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":700,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":690,"column_number":-1,"description":"start of procedure first(...)"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":691,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":693,"column_number":-1,"description":"Skipping seq(...): unknown method"},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":531,"column_number":-1,"description":"Definition of seq(...)"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":694,"column_number":-1,"description":"Taking true branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":695,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":696,"column_number":-1,"description":"return from a call to Object RT.first(Object)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":700,"column_number":-1,"description":"return from a call to Object RT.second(ISeq)"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6210,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6211,"column_number":-1,"description":""}],"key":"Compiler.java|parse|NULL_DEREFERENCE","node_key":"cbf4abef6a7d17d1b80dfb598ec521f3","hash":"f84a84bf19f32173a5a2a37cce110295","bug_type_hum":"Null Dereference"},{"bug_type":"NULL_DEREFERENCE","qualifier":"object `bindings` last assigned on line 6338 could be null and is dereferenced at line 6339.","severity":"ERROR","line":6339,"column":-1,"procedure":"clojure.lang.Compiler$LetExpr$Parser.parse(clojure.lang.Compiler$C,java.lang.Object):clojure.lang.Compiler$Expr","procedure_start_line":6331,"file":"src/jvm/clojure/lang/Compiler.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6331,"column_number":-1,"description":"start of procedure parse(...)"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6332,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6334,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":690,"column_number":-1,"description":"start of procedure first(...)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":691,"column_number":-1,"description":"Taking true branch"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":692,"column_number":-1,"description":"Skipping first(): unknown method"},{"level":2,"filename":"src/jvm/clojure/lang/ISeq.java","line_number":-1,"column_number":-1,"description":"Definition of first()"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":692,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":696,"column_number":-1,"description":"return from a call to Object RT.first(ISeq)"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6334,"column_number":-1,"description":"Skipping equals(...): unknown method"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6335,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":699,"column_number":-1,"description":"start of procedure second(...)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":700,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":711,"column_number":-1,"description":"start of procedure next(...)"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":712,"column_number":-1,"description":"Taking true branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":713,"column_number":-1,"description":"Skipping next(): unknown method"},{"level":3,"filename":"src/jvm/clojure/lang/ISeq.java","line_number":-1,"column_number":-1,"description":"Definition of next()"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":713,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":717,"column_number":-1,"description":"return from a call to ISeq RT.next(ISeq)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":700,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":690,"column_number":-1,"description":"start of procedure first(...)"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":691,"column_number":-1,"description":"Taking true branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":692,"column_number":-1,"description":"Skipping first(): unknown method"},{"level":3,"filename":"src/jvm/clojure/lang/ISeq.java","line_number":-1,"column_number":-1,"description":"Definition of first()"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":692,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":696,"column_number":-1,"description":"return from a call to Object RT.first(Object)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":700,"column_number":-1,"description":"return from a call to Object RT.second(ISeq)"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6335,"column_number":-1,"description":"Taking false branch"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6338,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":699,"column_number":-1,"description":"start of procedure second(...)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":700,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":711,"column_number":-1,"description":"start of procedure next(...)"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":712,"column_number":-1,"description":"Taking true branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":713,"column_number":-1,"description":"Skipping next(): unknown method"},{"level":3,"filename":"src/jvm/clojure/lang/ISeq.java","line_number":-1,"column_number":-1,"description":"Definition of next()"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":713,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":717,"column_number":-1,"description":"return from a call to ISeq RT.next(ISeq)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":700,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":690,"column_number":-1,"description":"start of procedure first(...)"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":691,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":693,"column_number":-1,"description":"Skipping seq(...): unknown method"},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":531,"column_number":-1,"description":"Definition of seq(...)"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":694,"column_number":-1,"description":"Taking true branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":695,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":696,"column_number":-1,"description":"return from a call to Object RT.first(Object)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":700,"column_number":-1,"description":"return from a call to Object RT.second(ISeq)"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6338,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6339,"column_number":-1,"description":""}],"key":"Compiler.java|parse|NULL_DEREFERENCE","node_key":"cbf4abef6a7d17d1b80dfb598ec521f3","hash":"b753ef705ed02232308a316a2c4974b0","bug_type_hum":"Null Dereference"},{"bug_type":"NULL_DEREFERENCE","qualifier":"object returned by `ensureMacroCheck()` could be null and is dereferenced at line 6970.","severity":"ERROR","line":6970,"column":-1,"procedure":"clojure.lang.Compiler.checkSpecs(clojure.lang.Var,clojure.lang.ISeq):void","procedure_start_line":6967,"file":"src/jvm/clojure/lang/Compiler.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6967,"column_number":-1,"description":"start of procedure checkSpecs(...)"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6968,"column_number":-1,"description":"Taking true branch"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6968,"column_number":-1,"description":"Taking true branch"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6970,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6952,"column_number":-1,"description":"start of procedure ensureMacroCheck()"},{"level":1,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6953,"column_number":-1,"description":"Taking true branch"},{"level":1,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6954,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6955,"column_number":-1,"description":"Taking true branch"},{"level":1,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6956,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6957,"column_number":-1,"description":"Skipping load(...): unknown method"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":423,"column_number":-1,"description":"Definition of load(...)"},{"level":1,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6958,"column_number":-1,"description":"Skipping load(...): unknown method"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":423,"column_number":-1,"description":"Definition of load(...)"},{"level":1,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6959,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":57,"column_number":-1,"description":"start of procedure intern(...)"},{"level":2,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":58,"column_number":-1,"description":""},{"level":3,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":69,"column_number":-1,"description":"start of procedure Symbol(...)"},{"level":4,"filename":"src/jvm/clojure/lang/AFn.java","line_number":15,"column_number":-1,"description":"start of procedure AFn()"},{"level":4,"filename":"src/jvm/clojure/lang/AFn.java","line_number":15,"column_number":-1,"description":"return from a call to AFn.<init>()"},{"level":3,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":70,"column_number":-1,"description":""},{"level":3,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":71,"column_number":-1,"description":""},{"level":3,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":72,"column_number":-1,"description":""},{"level":3,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":73,"column_number":-1,"description":"return from a call to Symbol.<init>(String,String)"},{"level":2,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":58,"column_number":-1,"description":"return from a call to Symbol Symbol.intern(String,String)"},{"level":1,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6959,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":143,"column_number":-1,"description":"start of procedure find(...)"},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":144,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":146,"column_number":-1,"description":""},{"level":3,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":61,"column_number":-1,"description":"start of procedure intern(...)"},{"level":3,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":62,"column_number":-1,"description":"Skipping indexOf(...): unknown method"},{"level":3,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":63,"column_number":-1,"description":"Taking false branch"},{"level":3,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":64,"column_number":-1,"description":""},{"level":4,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":69,"column_number":-1,"description":"start of procedure Symbol(...)"},{"level":5,"filename":"src/jvm/clojure/lang/AFn.java","line_number":15,"column_number":-1,"description":"start of procedure AFn()"},{"level":5,"filename":"src/jvm/clojure/lang/AFn.java","line_number":15,"column_number":-1,"description":"return from a call to AFn.<init>()"},{"level":4,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":70,"column_number":-1,"description":""},{"level":4,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":71,"column_number":-1,"description":""},{"level":4,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":72,"column_number":-1,"description":""},{"level":4,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":73,"column_number":-1,"description":"return from a call to Symbol.<init>(String,String)"},{"level":3,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":64,"column_number":-1,"description":""},{"level":3,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":66,"column_number":-1,"description":"return from a call to Symbol Symbol.intern(String)"},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":146,"column_number":-1,"description":""},{"level":3,"filename":"src/jvm/clojure/lang/Namespace.java","line_number":221,"column_number":-1,"description":"start of procedure find(...)"},{"level":3,"filename":"src/jvm/clojure/lang/Namespace.java","line_number":222,"column_number":-1,"description":"return from a call to Namespace Namespace.find(Symbol)"},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":147,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":149,"column_number":-1,"description":""},{"level":3,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":61,"column_number":-1,"description":"start of procedure intern(...)"},{"level":3,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":62,"column_number":-1,"description":"Skipping indexOf(...): unknown method"},{"level":3,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":63,"column_number":-1,"description":"Taking false branch"},{"level":3,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":64,"column_number":-1,"description":""},{"level":4,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":69,"column_number":-1,"description":"start of procedure Symbol(...)"},{"level":5,"filename":"src/jvm/clojure/lang/AFn.java","line_number":15,"column_number":-1,"description":"start of procedure AFn()"},{"level":5,"filename":"src/jvm/clojure/lang/AFn.java","line_number":15,"column_number":-1,"description":"return from a call to AFn.<init>()"},{"level":4,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":70,"column_number":-1,"description":""},{"level":4,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":71,"column_number":-1,"description":""},{"level":4,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":72,"column_number":-1,"description":""},{"level":4,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":73,"column_number":-1,"description":"return from a call to Symbol.<init>(String,String)"},{"level":3,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":64,"column_number":-1,"description":""},{"level":3,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":66,"column_number":-1,"description":"return from a call to Symbol Symbol.intern(String)"},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":149,"column_number":-1,"description":""},{"level":3,"filename":"src/jvm/clojure/lang/Namespace.java","line_number":229,"column_number":-1,"description":"start of procedure findInternedVar(...)"},{"level":3,"filename":"src/jvm/clojure/lang/Namespace.java","line_number":230,"column_number":-1,"description":"Skipping valAt(...): unknown method"},{"level":3,"filename":"src/jvm/clojure/lang/Namespace.java","line_number":231,"column_number":-1,"description":"Taking false branch"},{"level":3,"filename":"src/jvm/clojure/lang/Namespace.java","line_number":233,"column_number":-1,"description":"return from a call to Var Namespace.findInternedVar(Symbol)"},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":149,"column_number":-1,"description":"return from a call to Var Var.find(Symbol)"},{"level":1,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6959,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6960,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6962,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6964,"column_number":-1,"description":"return from a call to Var Compiler.ensureMacroCheck()"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6970,"column_number":-1,"description":"Skipping next(): unknown method"},{"level":1,"filename":"src/jvm/clojure/lang/ISeq.java","line_number":-1,"column_number":-1,"description":"Definition of next()"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6970,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":1629,"column_number":-1,"description":"start of procedure list(...)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":1630,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/PersistentList.java","line_number":72,"column_number":-1,"description":"start of procedure PersistentList(...)"},{"level":3,"filename":"src/jvm/clojure/lang/ASeq.java","line_number":36,"column_number":-1,"description":"start of procedure ASeq()"},{"level":4,"filename":"src/jvm/clojure/lang/Obj.java","line_number":27,"column_number":-1,"description":"start of procedure Obj()"},{"level":4,"filename":"src/jvm/clojure/lang/Obj.java","line_number":28,"column_number":-1,"description":""},{"level":4,"filename":"src/jvm/clojure/lang/Obj.java","line_number":29,"column_number":-1,"description":"return from a call to Obj.<init>()"},{"level":3,"filename":"src/jvm/clojure/lang/ASeq.java","line_number":37,"column_number":-1,"description":"return from a call to ASeq.<init>()"},{"level":2,"filename":"src/jvm/clojure/lang/PersistentList.java","line_number":73,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/PersistentList.java","line_number":74,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/PersistentList.java","line_number":76,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/PersistentList.java","line_number":77,"column_number":-1,"description":"return from a call to PersistentList.<init>(Object)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":1630,"column_number":-1,"description":"return from a call to ISeq RT.list(Object)"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6970,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":680,"column_number":-1,"description":"start of procedure cons(...)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":682,"column_number":-1,"description":"Taking false branch"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":684,"column_number":-1,"description":"Taking true branch"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":685,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Cons.java","line_number":24,"column_number":-1,"description":"start of procedure Cons(...)"},{"level":3,"filename":"src/jvm/clojure/lang/ASeq.java","line_number":36,"column_number":-1,"description":"start of procedure ASeq()"},{"level":4,"filename":"src/jvm/clojure/lang/Obj.java","line_number":27,"column_number":-1,"description":"start of procedure Obj()"},{"level":4,"filename":"src/jvm/clojure/lang/Obj.java","line_number":28,"column_number":-1,"description":""},{"level":4,"filename":"src/jvm/clojure/lang/Obj.java","line_number":29,"column_number":-1,"description":"return from a call to Obj.<init>()"},{"level":3,"filename":"src/jvm/clojure/lang/ASeq.java","line_number":37,"column_number":-1,"description":"return from a call to ASeq.<init>()"},{"level":2,"filename":"src/jvm/clojure/lang/Cons.java","line_number":25,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Cons.java","line_number":26,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Cons.java","line_number":27,"column_number":-1,"description":"return from a call to Cons.<init>(Object,ISeq)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":685,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":687,"column_number":-1,"description":"return from a call to ISeq RT.cons(Object,PersistentList)"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":6970,"column_number":-1,"description":""}],"key":"Compiler.java|checkSpecs|NULL_DEREFERENCE","node_key":"7e9fc31bc469440d6384630f8b346526","hash":"ece82c2853723d17143d3067cd4d2184","bug_type_hum":"Null Dereference"},{"bug_type":"NULL_DEREFERENCE","qualifier":"object `parms` last assigned on line 8434 could be null and is dereferenced at line 8435.","severity":"ERROR","line":8435,"column":-1,"procedure":"clojure.lang.Compiler$NewInstanceMethod.parse(clojure.lang.Compiler$ObjExpr,clojure.lang.ISeq,clojure.lang.Symbol,java.util.Map):clojure.lang.Compiler$NewInstanceMethod","procedure_start_line":8427,"file":"src/jvm/clojure/lang/Compiler.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":8427,"column_number":-1,"description":"start of procedure parse(...)"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":8431,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/Var.java","line_number":201,"column_number":-1,"description":"start of procedure deref()"},{"level":1,"filename":"src/jvm/clojure/lang/Var.java","line_number":202,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":359,"column_number":-1,"description":"start of procedure getThreadBinding()"},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":360,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/Var.java","line_number":366,"column_number":-1,"description":"return from a call to Var$TBox Var.getThreadBinding()"},{"level":1,"filename":"src/jvm/clojure/lang/Var.java","line_number":203,"column_number":-1,"description":"Taking false branch"},{"level":1,"filename":"src/jvm/clojure/lang/Var.java","line_number":205,"column_number":-1,"description":"return from a call to Object Var.deref()"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":8431,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":8402,"column_number":-1,"description":"start of procedure Compiler$NewInstanceMethod(...)"},{"level":2,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":5817,"column_number":-1,"description":"start of procedure Compiler$ObjMethod(...)"},{"level":2,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":5775,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":5777,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":5778,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":5781,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":5784,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":5785,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":5818,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":5819,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":5820,"column_number":-1,"description":"return from a call to Compiler$ObjMethod.<init>(Compiler$ObjExpr,Compiler$ObjMethod)"},{"level":1,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":8403,"column_number":-1,"description":"return from a call to Compiler$NewInstanceMethod.<init>(Compiler$ObjExpr,Compiler$ObjMethod)"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":8432,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":690,"column_number":-1,"description":"start of procedure first(...)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":691,"column_number":-1,"description":"Taking true branch"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":692,"column_number":-1,"description":"Skipping first(): unknown method"},{"level":2,"filename":"src/jvm/clojure/lang/ISeq.java","line_number":-1,"column_number":-1,"description":"Definition of first()"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":692,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":696,"column_number":-1,"description":"return from a call to Object RT.first(Object)"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":8432,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":8433,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":2916,"column_number":-1,"description":"start of procedure munge(...)"},{"level":1,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":2917,"column_number":-1,"description":"Skipping StringBuilder(): unknown method"},{"level":1,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":2918,"column_number":-1,"description":"Taking false branch"},{"level":1,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":2926,"column_number":-1,"description":"return from a call to String Compiler.munge(String)"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":8433,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":57,"column_number":-1,"description":"start of procedure intern(...)"},{"level":1,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":58,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":69,"column_number":-1,"description":"start of procedure Symbol(...)"},{"level":3,"filename":"src/jvm/clojure/lang/AFn.java","line_number":15,"column_number":-1,"description":"start of procedure AFn()"},{"level":3,"filename":"src/jvm/clojure/lang/AFn.java","line_number":15,"column_number":-1,"description":"return from a call to AFn.<init>()"},{"level":2,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":70,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":71,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":72,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":73,"column_number":-1,"description":"return from a call to Symbol.<init>(String,String)"},{"level":1,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":58,"column_number":-1,"description":"return from a call to Symbol Symbol.intern(String,String)"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":8433,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":634,"column_number":-1,"description":"start of procedure meta(...)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":635,"column_number":-1,"description":"Taking true branch"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":636,"column_number":-1,"description":"Skipping meta(): unknown method"},{"level":2,"filename":"src/jvm/clojure/lang/IMeta.java","line_number":-1,"column_number":-1,"description":"Definition of meta()"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":636,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":637,"column_number":-1,"description":"return from a call to IPersistentMap RT.meta(Symbol)"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":8433,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":97,"column_number":-1,"description":"start of procedure withMeta(...)"},{"level":1,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":98,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":138,"column_number":-1,"description":"start of procedure meta()"},{"level":2,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":139,"column_number":-1,"description":"return from a call to IPersistentMap Symbol.meta()"},{"level":1,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":98,"column_number":-1,"description":"Taking false branch"},{"level":1,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":100,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":103,"column_number":-1,"description":"start of procedure Symbol(...)"},{"level":3,"filename":"src/jvm/clojure/lang/AFn.java","line_number":15,"column_number":-1,"description":"start of procedure AFn()"},{"level":3,"filename":"src/jvm/clojure/lang/AFn.java","line_number":15,"column_number":-1,"description":"return from a call to AFn.<init>()"},{"level":2,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":104,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":105,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":106,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":107,"column_number":-1,"description":"return from a call to Symbol.<init>(IPersistentMap,String,String)"},{"level":1,"filename":"src/jvm/clojure/lang/Symbol.java","line_number":100,"column_number":-1,"description":"return from a call to IObj Symbol.withMeta(IPersistentMap)"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":8433,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":8434,"column_number":-1,"description":""},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":699,"column_number":-1,"description":"start of procedure second(...)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":700,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":711,"column_number":-1,"description":"start of procedure next(...)"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":712,"column_number":-1,"description":"Taking true branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":713,"column_number":-1,"description":"Skipping next(): unknown method"},{"level":3,"filename":"src/jvm/clojure/lang/ISeq.java","line_number":-1,"column_number":-1,"description":"Definition of next()"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":713,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":717,"column_number":-1,"description":"return from a call to ISeq RT.next(ISeq)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":700,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":690,"column_number":-1,"description":"start of procedure first(...)"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":691,"column_number":-1,"description":"Taking false branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":693,"column_number":-1,"description":"Skipping seq(...): unknown method"},{"level":3,"filename":"src/jvm/clojure/lang/RT.java","line_number":531,"column_number":-1,"description":"Definition of seq(...)"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":694,"column_number":-1,"description":"Taking true branch"},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":695,"column_number":-1,"description":""},{"level":2,"filename":"src/jvm/clojure/lang/RT.java","line_number":696,"column_number":-1,"description":"return from a call to Object RT.first(Object)"},{"level":1,"filename":"src/jvm/clojure/lang/RT.java","line_number":700,"column_number":-1,"description":"return from a call to Object RT.second(ISeq)"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":8434,"column_number":-1,"description":""},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":8435,"column_number":-1,"description":""}],"key":"Compiler.java|parse|NULL_DEREFERENCE","node_key":"cbf4abef6a7d17d1b80dfb598ec521f3","hash":"eeb27f6170b7b50db886ea657c65f0eb","bug_type_hum":"Null Dereference"},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Unprotected write. Non-private method `LockingTransaction.abort()` indirectly writes to field `this.info` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","severity":"WARNING","line":184,"column":-1,"procedure":"clojure.lang.LockingTransaction.abort():void","procedure_start_line":0,"file":"src/jvm/clojure/lang/LockingTransaction.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":184,"column_number":-1,"description":"<Write on unknown thread>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":184,"column_number":-1,"description":"call to void LockingTransaction.stop(int)"},{"level":1,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":92,"column_number":-1,"description":"access to `this.info`"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":460,"column_number":-1,"description":"<Write on background thread>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":460,"column_number":-1,"description":"call to Object LockingTransaction.blockAndBail(LockingTransaction$Info)"},{"level":1,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":163,"column_number":-1,"description":"call to void LockingTransaction.stop(int)"},{"level":2,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":92,"column_number":-1,"description":"access to `this.info`"}],"key":"LockingTransaction.java|abort|THREAD_SAFETY_VIOLATION","hash":"ebde50672fe1a34f7233f0a3bcf02404","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAGsAAAAIAAAALAAAACCgsABcAP+SCSxzcmMvanZtL2Nsb2p1cmUvbGFuZy9Mb2NraW5nVHJhbnNhY3Rpb24uamF2YaCwAFwA/5IJLHNyYy9qdm0vY2xvanVyZS9sYW5nL0xvY2tpbmdUcmFuc2FjdGlvbi5qYXZhQA=="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Read/Write race. Non-private method `Compiler$ObjExpr.compiledClass()` reads without synchronization from `this.compiledClass`. Potentially races with write in method `Compiler$ObjExpr.getCompiledClass()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","severity":"WARNING","line":4231,"column":-1,"procedure":"clojure.lang.Compiler$ObjExpr.compiledClass():java.lang.Class","procedure_start_line":0,"file":"src/jvm/clojure/lang/Compiler.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":4231,"column_number":-1,"description":"<Read trace>"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":4231,"column_number":-1,"description":"access to `this.compiledClass`"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":4981,"column_number":-1,"description":"<Write trace>"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":4981,"column_number":-1,"description":"access to `this.compiledClass`"}],"key":"Compiler.java|compiledClass|THREAD_SAFETY_VIOLATION","hash":"94025d75a19328424b483660c943db33","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAFkAAAAIAAAAJgAAAB6gsAEQhwD/kgkic3JjL2p2bS9jbG9qdXJlL2xhbmcvQ29tcGlsZXIuamF2YaCwARN1AP+SCSJzcmMvanZtL2Nsb2p1cmUvbGFuZy9Db21waWxlci5qYXZhQA=="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Read/Write race. Non-private method `LockingTransaction.doCommute(...)` reads without synchronization from `this.info`. Potentially races with write in method `LockingTransaction.doEnsure(...)`.\n Reporting because this access may occur on a background thread.","severity":"WARNING","line":468,"column":-1,"procedure":"clojure.lang.LockingTransaction.doCommute(clojure.lang.Ref,clojure.lang.IFn,clojure.lang.ISeq):java.lang.Object","procedure_start_line":0,"file":"src/jvm/clojure/lang/LockingTransaction.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":468,"column_number":-1,"description":"<Read trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":468,"column_number":-1,"description":"access to `this.info`"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":460,"column_number":-1,"description":"<Write trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":460,"column_number":-1,"description":"call to Object LockingTransaction.blockAndBail(LockingTransaction$Info)"},{"level":1,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":163,"column_number":-1,"description":"call to void LockingTransaction.stop(int)"},{"level":2,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":92,"column_number":-1,"description":"access to `this.info`"}],"key":"LockingTransaction.java|doCommute|THREAD_SAFETY_VIOLATION","hash":"209b11a160773da68d3e69aac848666f","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAGwAAAAIAAAALAAAACCgsAEB1AD/kgksc3JjL2p2bS9jbG9qdXJlL2xhbmcvTG9ja2luZ1RyYW5zYWN0aW9uLmphdmGgsABcAP+SCSxzcmMvanZtL2Nsb2p1cmUvbGFuZy9Mb2NraW5nVHJhbnNhY3Rpb24uamF2YUA="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Unprotected write. Non-private method `LockingTransaction.doEnsure(...)` indirectly writes to field `this.info` outside of synchronization.\n Reporting because this access may occur on a background thread.","severity":"WARNING","line":460,"column":-1,"procedure":"clojure.lang.LockingTransaction.doEnsure(clojure.lang.Ref):void","procedure_start_line":0,"file":"src/jvm/clojure/lang/LockingTransaction.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":460,"column_number":-1,"description":"call to Object LockingTransaction.blockAndBail(LockingTransaction$Info)"},{"level":1,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":163,"column_number":-1,"description":"call to void LockingTransaction.stop(int)"},{"level":2,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":92,"column_number":-1,"description":"access to `this.info`"}],"key":"LockingTransaction.java|doEnsure|THREAD_SAFETY_VIOLATION","hash":"5c199cab8141c1d7b5ee90fddf799f77","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAADYAAAAEAAAAFgAAABCgsABcAP+SCSxzcmMvanZtL2Nsb2p1cmUvbGFuZy9Mb2NraW5nVHJhbnNhY3Rpb24uamF2YUA="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Read/Write race. Non-private method `LockingTransaction.doEnsure(...)` reads with synchronization from `this.readPoint`. Potentially races with unsynchronized write in method `LockingTransaction.run(...)`.\n Reporting because this access may occur on a background thread.","severity":"WARNING","line":446,"column":-1,"procedure":"clojure.lang.LockingTransaction.doEnsure(clojure.lang.Ref):void","procedure_start_line":0,"file":"src/jvm/clojure/lang/LockingTransaction.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":446,"column_number":-1,"description":"<Read trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":446,"column_number":-1,"description":"access to `this.readPoint`"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":266,"column_number":-1,"description":"<Write trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":266,"column_number":-1,"description":"call to void LockingTransaction.getReadPoint()"},{"level":1,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":77,"column_number":-1,"description":"access to `this.readPoint`"}],"key":"LockingTransaction.java|doEnsure|THREAD_SAFETY_VIOLATION","hash":"56cf7401a8dd354a0fecccaf6e045216","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAGwAAAAIAAAALAAAACCgsAEBvgD/kgksc3JjL2p2bS9jbG9qdXJlL2xhbmcvTG9ja2luZ1RyYW5zYWN0aW9uLmphdmGgsABNAP+SCSxzcmMvanZtL2Nsb2p1cmUvbGFuZy9Mb2NraW5nVHJhbnNhY3Rpb24uamF2YUA="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Read/Write race. Non-private method `LockingTransaction.doEnsure(...)` reads without synchronization from `this.info`. Potentially races with write in method `LockingTransaction.doEnsure(...)`.\n Reporting because this access may occur on a background thread.","severity":"WARNING","line":458,"column":-1,"procedure":"clojure.lang.LockingTransaction.doEnsure(clojure.lang.Ref):void","procedure_start_line":0,"file":"src/jvm/clojure/lang/LockingTransaction.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":458,"column_number":-1,"description":"<Read trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":458,"column_number":-1,"description":"access to `this.info`"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":460,"column_number":-1,"description":"<Write trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":460,"column_number":-1,"description":"call to Object LockingTransaction.blockAndBail(LockingTransaction$Info)"},{"level":1,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":163,"column_number":-1,"description":"call to void LockingTransaction.stop(int)"},{"level":2,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":92,"column_number":-1,"description":"access to `this.info`"}],"key":"LockingTransaction.java|doEnsure|THREAD_SAFETY_VIOLATION","hash":"cc9e84f5e9c76a35f65d7cdb7271e025","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAGwAAAAIAAAALAAAACCgsAEBygD/kgksc3JjL2p2bS9jbG9qdXJlL2xhbmcvTG9ja2luZ1RyYW5zYWN0aW9uLmphdmGgsABcAP+SCSxzcmMvanZtL2Nsb2p1cmUvbGFuZy9Mb2NraW5nVHJhbnNhY3Rpb24uamF2YUA="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Read/Write race. Non-private method `LockingTransaction.doGet(...)` reads with synchronization from `this.readPoint`. Potentially races with unsynchronized write in method `LockingTransaction.run(...)`.\n Reporting because this access may occur on a background thread.","severity":"WARNING","line":410,"column":-1,"procedure":"clojure.lang.LockingTransaction.doGet(clojure.lang.Ref):java.lang.Object","procedure_start_line":0,"file":"src/jvm/clojure/lang/LockingTransaction.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":410,"column_number":-1,"description":"<Read trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":410,"column_number":-1,"description":"access to `this.readPoint`"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":266,"column_number":-1,"description":"<Write trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":266,"column_number":-1,"description":"call to void LockingTransaction.getReadPoint()"},{"level":1,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":77,"column_number":-1,"description":"access to `this.readPoint`"}],"key":"LockingTransaction.java|doGet|THREAD_SAFETY_VIOLATION","hash":"03f7310255246c6ad11799c09414e21b","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAGwAAAAIAAAALAAAACCgsAEBmgD/kgksc3JjL2p2bS9jbG9qdXJlL2xhbmcvTG9ja2luZ1RyYW5zYWN0aW9uLmphdmGgsABNAP+SCSxzcmMvanZtL2Nsb2p1cmUvbGFuZy9Mb2NraW5nVHJhbnNhY3Rpb24uamF2YUA="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Read/Write race. Non-private method `LockingTransaction.doGet(...)` reads without synchronization from `this.info`. Potentially races with write in method `LockingTransaction.doEnsure(...)`.\n Reporting because this access may occur on a background thread.","severity":"WARNING","line":398,"column":-1,"procedure":"clojure.lang.LockingTransaction.doGet(clojure.lang.Ref):java.lang.Object","procedure_start_line":0,"file":"src/jvm/clojure/lang/LockingTransaction.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":398,"column_number":-1,"description":"<Read trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":398,"column_number":-1,"description":"access to `this.info`"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":460,"column_number":-1,"description":"<Write trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":460,"column_number":-1,"description":"call to Object LockingTransaction.blockAndBail(LockingTransaction$Info)"},{"level":1,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":163,"column_number":-1,"description":"call to void LockingTransaction.stop(int)"},{"level":2,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":92,"column_number":-1,"description":"access to `this.info`"}],"key":"LockingTransaction.java|doGet|THREAD_SAFETY_VIOLATION","hash":"338452be4e546d6d5569fbc402fc1c92","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAGwAAAAIAAAALAAAACCgsAEBjgD/kgksc3JjL2p2bS9jbG9qdXJlL2xhbmcvTG9ja2luZ1RyYW5zYWN0aW9uLmphdmGgsABcAP+SCSxzcmMvanZtL2Nsb2p1cmUvbGFuZy9Mb2NraW5nVHJhbnNhY3Rpb24uamF2YUA="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Unprotected write. Non-private method `LockingTransaction.doSet(...)` indirectly writes to field `this.info` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","severity":"WARNING","line":432,"column":-1,"procedure":"clojure.lang.LockingTransaction.doSet(clojure.lang.Ref,java.lang.Object):java.lang.Object","procedure_start_line":0,"file":"src/jvm/clojure/lang/LockingTransaction.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":432,"column_number":-1,"description":"<Write on unknown thread>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":432,"column_number":-1,"description":"call to Object LockingTransaction.lock(Ref)"},{"level":1,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":148,"column_number":-1,"description":"call to Object LockingTransaction.blockAndBail(LockingTransaction$Info)"},{"level":2,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":163,"column_number":-1,"description":"call to void LockingTransaction.stop(int)"},{"level":3,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":92,"column_number":-1,"description":"access to `this.info`"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":460,"column_number":-1,"description":"<Write on background thread>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":460,"column_number":-1,"description":"call to Object LockingTransaction.blockAndBail(LockingTransaction$Info)"},{"level":1,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":163,"column_number":-1,"description":"call to void LockingTransaction.stop(int)"},{"level":2,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":92,"column_number":-1,"description":"access to `this.info`"}],"key":"LockingTransaction.java|doSet|THREAD_SAFETY_VIOLATION","hash":"6c0e56a5fa4cb9467b7b4c220235c2c1","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAGsAAAAIAAAALAAAACCgsABcAP+SCSxzcmMvanZtL2Nsb2p1cmUvbGFuZy9Mb2NraW5nVHJhbnNhY3Rpb24uamF2YaCwAFwA/5IJLHNyYy9qdm0vY2xvanVyZS9sYW5nL0xvY2tpbmdUcmFuc2FjdGlvbi5qYXZhQA=="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Read/Write race. Non-private method `LockingTransaction.doSet(...)` reads without synchronization from `this.info`. Potentially races with write in method `LockingTransaction.doEnsure(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","severity":"WARNING","line":425,"column":-1,"procedure":"clojure.lang.LockingTransaction.doSet(clojure.lang.Ref,java.lang.Object):java.lang.Object","procedure_start_line":0,"file":"src/jvm/clojure/lang/LockingTransaction.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":425,"column_number":-1,"description":"<Read trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":425,"column_number":-1,"description":"access to `this.info`"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":460,"column_number":-1,"description":"<Write trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":460,"column_number":-1,"description":"call to Object LockingTransaction.blockAndBail(LockingTransaction$Info)"},{"level":1,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":163,"column_number":-1,"description":"call to void LockingTransaction.stop(int)"},{"level":2,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":92,"column_number":-1,"description":"access to `this.info`"}],"key":"LockingTransaction.java|doSet|THREAD_SAFETY_VIOLATION","hash":"6e94cb49920fea7860405a684e342c67","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAGwAAAAIAAAALAAAACCgsAEBqQD/kgksc3JjL2p2bS9jbG9qdXJlL2xhbmcvTG9ja2luZ1RyYW5zYWN0aW9uLmphdmGgsABcAP+SCSxzcmMvanZtL2Nsb2p1cmUvbGFuZy9Mb2NraW5nVHJhbnNhY3Rpb24uamF2YUA="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Read/Write race. Non-private method `LazySeq.first()` reads without synchronization from `this.s`. Potentially races with write in method `LazySeq.seq()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","severity":"WARNING","line":76,"column":-1,"procedure":"clojure.lang.LazySeq.first():java.lang.Object","procedure_start_line":0,"file":"src/jvm/clojure/lang/LazySeq.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LazySeq.java","line_number":76,"column_number":-1,"description":"<Read trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LazySeq.java","line_number":76,"column_number":-1,"description":"access to `this.s`"},{"level":0,"filename":"src/jvm/clojure/lang/LazySeq.java","line_number":62,"column_number":-1,"description":"<Write trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LazySeq.java","line_number":62,"column_number":-1,"description":"access to `this.s`"}],"key":"LazySeq.java|first|THREAD_SAFETY_VIOLATION","hash":"63726a50952279d5a1d9f71e5593ccb9","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAFQAAAAIAAAAJgAAAB6gsABMAP+SCSFzcmMvanZtL2Nsb2p1cmUvbGFuZy9MYXp5U2VxLmphdmGgsH4A/5IJIXNyYy9qdm0vY2xvanVyZS9sYW5nL0xhenlTZXEuamF2YUA="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Read/Write race. Non-private method `Compiler$ObjExpr.getJavaClass()` reads without synchronization from `this.compiledClass`. Potentially races with write in method `Compiler$ObjExpr.getCompiledClass()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","severity":"WARNING","line":5062,"column":-1,"procedure":"clojure.lang.Compiler$ObjExpr.getJavaClass():java.lang.Class","procedure_start_line":0,"file":"src/jvm/clojure/lang/Compiler.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":5062,"column_number":-1,"description":"<Read trace>"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":5062,"column_number":-1,"description":"access to `this.compiledClass`"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":4981,"column_number":-1,"description":"<Write trace>"},{"level":0,"filename":"src/jvm/clojure/lang/Compiler.java","line_number":4981,"column_number":-1,"description":"access to `this.compiledClass`"}],"key":"Compiler.java|getJavaClass|THREAD_SAFETY_VIOLATION","hash":"ed9b39d24af4cf6101174e6029876e86","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAFkAAAAIAAAAJgAAAB6gsAETxgD/kgkic3JjL2p2bS9jbG9qdXJlL2xhbmcvQ29tcGlsZXIuamF2YaCwARN1AP+SCSJzcmMvanZtL2Nsb2p1cmUvbGFuZy9Db21waWxlci5qYXZhQA=="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Unprotected write. Non-private method `LockingTransaction.getReadPoint()` writes to field `this.readPoint` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","severity":"WARNING","line":77,"column":-1,"procedure":"clojure.lang.LockingTransaction.getReadPoint():void","procedure_start_line":0,"file":"src/jvm/clojure/lang/LockingTransaction.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":77,"column_number":-1,"description":"<Write on unknown thread>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":77,"column_number":-1,"description":"access to `this.readPoint`"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":266,"column_number":-1,"description":"<Write on background thread>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":266,"column_number":-1,"description":"call to void LockingTransaction.getReadPoint()"},{"level":1,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":77,"column_number":-1,"description":"access to `this.readPoint`"}],"key":"LockingTransaction.java|getReadPoint|THREAD_SAFETY_VIOLATION","hash":"e60c68e6ee2a0d83962f5a89daa66c9a","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAADkAAAAFAAAAGQAAABOgsABNAP+SCSxzcmMvanZtL2Nsb2p1cmUvbGFuZy9Mb2NraW5nVHJhbnNhY3Rpb24uamF2YaAEBEA="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Read/Write race. Non-private method `Ref.histCount()` reads without synchronization from `this.tvals.next`. Potentially races with write in method `Ref.trimHistory()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","severity":"WARNING","line":226,"column":-1,"procedure":"clojure.lang.Ref.histCount():int","procedure_start_line":0,"file":"src/jvm/clojure/lang/Ref.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/Ref.java","line_number":226,"column_number":-1,"description":"<Read trace>"},{"level":0,"filename":"src/jvm/clojure/lang/Ref.java","line_number":226,"column_number":-1,"description":"access to `this.tvals.next`"},{"level":0,"filename":"src/jvm/clojure/lang/Ref.java","line_number":198,"column_number":-1,"description":"<Write trace>"},{"level":0,"filename":"src/jvm/clojure/lang/Ref.java","line_number":198,"column_number":-1,"description":"access to `this.tvals.next`"}],"key":"Ref.java|histCount|THREAD_SAFETY_VIOLATION","hash":"c9e057967a4d71ebf76064bd15ea7e44","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAE0AAAAIAAAAJAAAABygsAEA4gD/kj1zcmMvanZtL2Nsb2p1cmUvbGFuZy9SZWYuamF2YaCwAQDGAP+SPXNyYy9qdm0vY2xvanVyZS9sYW5nL1JlZi5qYXZhQA=="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Read/Write race. Non-private method `LockingTransaction.lock(...)` indirectly reads with synchronization from `this.startPoint`. Potentially races with unsynchronized write in method `LockingTransaction.run(...)`.\n Reporting because this access may occur on a background thread.","severity":"WARNING","line":144,"column":-1,"procedure":"clojure.lang.LockingTransaction.lock(clojure.lang.Ref):java.lang.Object","procedure_start_line":0,"file":"src/jvm/clojure/lang/LockingTransaction.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":144,"column_number":-1,"description":"<Read trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":144,"column_number":-1,"description":"call to boolean LockingTransaction.barge(LockingTransaction$Info)"},{"level":1,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":196,"column_number":-1,"description":"access to `this.startPoint`"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":269,"column_number":-1,"description":"<Write trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":269,"column_number":-1,"description":"access to `this.startPoint`"}],"key":"LockingTransaction.java|lock|THREAD_SAFETY_VIOLATION","hash":"b0474a795971e8aa851d619c4c4adb40","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAG0AAAAIAAAALAAAACCgsAEAxAD/kgksc3JjL2p2bS9jbG9qdXJlL2xhbmcvTG9ja2luZ1RyYW5zYWN0aW9uLmphdmGgsAEBDQD/kgksc3JjL2p2bS9jbG9qdXJlL2xhbmcvTG9ja2luZ1RyYW5zYWN0aW9uLmphdmFA"},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Read/Write race. Non-private method `LockingTransaction.lock(...)` reads with synchronization from `this.readPoint`. Potentially races with unsynchronized write in method `LockingTransaction.run(...)`.\n Reporting because this access may occur on a background thread.","severity":"WARNING","line":137,"column":-1,"procedure":"clojure.lang.LockingTransaction.lock(clojure.lang.Ref):java.lang.Object","procedure_start_line":0,"file":"src/jvm/clojure/lang/LockingTransaction.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":137,"column_number":-1,"description":"<Read trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":137,"column_number":-1,"description":"access to `this.readPoint`"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":266,"column_number":-1,"description":"<Write trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":266,"column_number":-1,"description":"call to void LockingTransaction.getReadPoint()"},{"level":1,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":77,"column_number":-1,"description":"access to `this.readPoint`"}],"key":"LockingTransaction.java|lock|THREAD_SAFETY_VIOLATION","hash":"14a2ad5087b406d0d4d1c192ee32be65","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAGwAAAAIAAAALAAAACCgsAEAiQD/kgksc3JjL2p2bS9jbG9qdXJlL2xhbmcvTG9ja2luZ1RyYW5zYWN0aW9uLmphdmGgsABNAP+SCSxzcmMvanZtL2Nsb2p1cmUvbGFuZy9Mb2NraW5nVHJhbnNhY3Rpb24uamF2YUA="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Unprotected write. Non-private method `LockingTransaction.lock(...)` indirectly writes to field `this.info` outside of synchronization.\n Reporting because this access may occur on a background thread.","severity":"WARNING","line":148,"column":-1,"procedure":"clojure.lang.LockingTransaction.lock(clojure.lang.Ref):java.lang.Object","procedure_start_line":0,"file":"src/jvm/clojure/lang/LockingTransaction.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":148,"column_number":-1,"description":"call to Object LockingTransaction.blockAndBail(LockingTransaction$Info)"},{"level":1,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":163,"column_number":-1,"description":"call to void LockingTransaction.stop(int)"},{"level":2,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":92,"column_number":-1,"description":"access to `this.info`"}],"key":"LockingTransaction.java|lock|THREAD_SAFETY_VIOLATION","hash":"7d6804cc5fc389bc6e3b19602817e0a3","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAADYAAAAEAAAAFgAAABCgsABcAP+SCSxzcmMvanZtL2Nsb2p1cmUvbGFuZy9Mb2NraW5nVHJhbnNhY3Rpb24uamF2YUA="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Read/Write race. Non-private method `LockingTransaction.lock(...)` reads with synchronization from `this.info`. Potentially races with unsynchronized write in method `LockingTransaction.doEnsure(...)`.\n Reporting because this access may occur on a background thread.","severity":"WARNING","line":142,"column":-1,"procedure":"clojure.lang.LockingTransaction.lock(clojure.lang.Ref):java.lang.Object","procedure_start_line":0,"file":"src/jvm/clojure/lang/LockingTransaction.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":142,"column_number":-1,"description":"<Read trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":142,"column_number":-1,"description":"access to `this.info`"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":460,"column_number":-1,"description":"<Write trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":460,"column_number":-1,"description":"call to Object LockingTransaction.blockAndBail(LockingTransaction$Info)"},{"level":1,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":163,"column_number":-1,"description":"call to void LockingTransaction.stop(int)"},{"level":2,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":92,"column_number":-1,"description":"access to `this.info`"}],"key":"LockingTransaction.java|lock|THREAD_SAFETY_VIOLATION","hash":"63f80e0bcbfb821d8ab3991b962502f0","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAGwAAAAIAAAALAAAACCgsAEAjgD/kgksc3JjL2p2bS9jbG9qdXJlL2xhbmcvTG9ja2luZ1RyYW5zYWN0aW9uLmphdmGgsABcAP+SCSxzcmMvanZtL2Nsb2p1cmUvbGFuZy9Mb2NraW5nVHJhbnNhY3Rpb24uamF2YUA="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Read/Write race. Non-private method `LazySeq.more()` reads without synchronization from `this.s`. Potentially races with write in method `LazySeq.seq()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","severity":"WARNING","line":90,"column":-1,"procedure":"clojure.lang.LazySeq.more():clojure.lang.ISeq","procedure_start_line":0,"file":"src/jvm/clojure/lang/LazySeq.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LazySeq.java","line_number":90,"column_number":-1,"description":"<Read trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LazySeq.java","line_number":90,"column_number":-1,"description":"access to `this.s`"},{"level":0,"filename":"src/jvm/clojure/lang/LazySeq.java","line_number":62,"column_number":-1,"description":"<Write trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LazySeq.java","line_number":62,"column_number":-1,"description":"access to `this.s`"}],"key":"LazySeq.java|more|THREAD_SAFETY_VIOLATION","hash":"809ee1b5fb7fc5cd524631758b7067f5","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAFQAAAAIAAAAJgAAAB6gsABaAP+SCSFzcmMvanZtL2Nsb2p1cmUvbGFuZy9MYXp5U2VxLmphdmGgsH4A/5IJIXNyYy9qdm0vY2xvanVyZS9sYW5nL0xhenlTZXEuamF2YUA="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Read/Write race. Non-private method `LazySeq.next()` reads without synchronization from `this.s`. Potentially races with write in method `LazySeq.seq()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","severity":"WARNING","line":83,"column":-1,"procedure":"clojure.lang.LazySeq.next():clojure.lang.ISeq","procedure_start_line":0,"file":"src/jvm/clojure/lang/LazySeq.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LazySeq.java","line_number":83,"column_number":-1,"description":"<Read trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LazySeq.java","line_number":83,"column_number":-1,"description":"access to `this.s`"},{"level":0,"filename":"src/jvm/clojure/lang/LazySeq.java","line_number":62,"column_number":-1,"description":"<Write trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LazySeq.java","line_number":62,"column_number":-1,"description":"access to `this.s`"}],"key":"LazySeq.java|next|THREAD_SAFETY_VIOLATION","hash":"1e8e3a4e04886e1af4340abd342b263f","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAFQAAAAIAAAAJgAAAB6gsABTAP+SCSFzcmMvanZtL2Nsb2p1cmUvbGFuZy9MYXp5U2VxLmphdmGgsH4A/5IJIXNyYy9qdm0vY2xvanVyZS9sYW5nL0xhenlTZXEuamF2YUA="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Unprotected write. Non-private method `LockingTransaction.run(...)` writes to field `this.info` outside of synchronization.\n Reporting because this access may occur on a background thread.","severity":"WARNING","line":272,"column":-1,"procedure":"clojure.lang.LockingTransaction.run(java.util.concurrent.Callable):java.lang.Object","procedure_start_line":0,"file":"src/jvm/clojure/lang/LockingTransaction.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":272,"column_number":-1,"description":"access to `this.info`"}],"key":"LockingTransaction.java|run|THREAD_SAFETY_VIOLATION","hash":"173f8ebfee3fd6d4ec791730db325780","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAADcAAAAEAAAAFgAAABCgsAEBEAD/kgksc3JjL2p2bS9jbG9qdXJlL2xhbmcvTG9ja2luZ1RyYW5zYWN0aW9uLmphdmFA"},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Read/Write race. Non-private method `LockingTransaction.run(...)` indirectly reads with synchronization from `this.startPoint`. Potentially races with unsynchronized write in method `LockingTransaction.run(...)`.\n Reporting because this access may occur on a background thread.","severity":"WARNING","line":293,"column":-1,"procedure":"clojure.lang.LockingTransaction.run(java.util.concurrent.Callable):java.lang.Object","procedure_start_line":0,"file":"src/jvm/clojure/lang/LockingTransaction.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":293,"column_number":-1,"description":"<Read trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":293,"column_number":-1,"description":"call to boolean LockingTransaction.barge(LockingTransaction$Info)"},{"level":1,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":196,"column_number":-1,"description":"access to `this.startPoint`"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":269,"column_number":-1,"description":"<Write trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":269,"column_number":-1,"description":"access to `this.startPoint`"}],"key":"LockingTransaction.java|run|THREAD_SAFETY_VIOLATION","hash":"5ca137f844855de40a065f31067902ef","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAG0AAAAIAAAALAAAACCgsAEAxAD/kgksc3JjL2p2bS9jbG9qdXJlL2xhbmcvTG9ja2luZ1RyYW5zYWN0aW9uLmphdmGgsAEBDQD/kgksc3JjL2p2bS9jbG9qdXJlL2xhbmcvTG9ja2luZ1RyYW5zYWN0aW9uLmphdmFA"},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Read/Write race. Non-private method `LockingTransaction.run(...)` reads with synchronization from `this.readPoint`. Potentially races with unsynchronized write in method `LockingTransaction.run(...)`.\n Reporting because this access may occur on a background thread.","severity":"WARNING","line":287,"column":-1,"procedure":"clojure.lang.LockingTransaction.run(java.util.concurrent.Callable):java.lang.Object","procedure_start_line":0,"file":"src/jvm/clojure/lang/LockingTransaction.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":287,"column_number":-1,"description":"<Read trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":287,"column_number":-1,"description":"access to `this.readPoint`"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":266,"column_number":-1,"description":"<Write trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":266,"column_number":-1,"description":"call to void LockingTransaction.getReadPoint()"},{"level":1,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":77,"column_number":-1,"description":"access to `this.readPoint`"}],"key":"LockingTransaction.java|run|THREAD_SAFETY_VIOLATION","hash":"35075aea16ea0dedd829aead8faeb5cb","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAGwAAAAIAAAALAAAACCgsAEBHwD/kgksc3JjL2p2bS9jbG9qdXJlL2xhbmcvTG9ja2luZ1RyYW5zYWN0aW9uLmphdmGgsABNAP+SCSxzcmMvanZtL2Nsb2p1cmUvbGFuZy9Mb2NraW5nVHJhbnNhY3Rpb24uamF2YUA="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Unprotected write. Non-private method `LockingTransaction.run(...)` writes to field `this.startPoint` outside of synchronization.\n Reporting because this access may occur on a background thread.","severity":"WARNING","line":269,"column":-1,"procedure":"clojure.lang.LockingTransaction.run(java.util.concurrent.Callable):java.lang.Object","procedure_start_line":0,"file":"src/jvm/clojure/lang/LockingTransaction.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":269,"column_number":-1,"description":"access to `this.startPoint`"}],"key":"LockingTransaction.java|run|THREAD_SAFETY_VIOLATION","hash":"83a6b5582583d8dc645c195c069641cb","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAADcAAAAEAAAAFgAAABCgsAEBDQD/kgksc3JjL2p2bS9jbG9qdXJlL2xhbmcvTG9ja2luZ1RyYW5zYWN0aW9uLmphdmFA"},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Unprotected write. Non-private method `LockingTransaction.run(...)` indirectly writes to field `this.readPoint` outside of synchronization.\n Reporting because this access may occur on a background thread.","severity":"WARNING","line":266,"column":-1,"procedure":"clojure.lang.LockingTransaction.run(java.util.concurrent.Callable):java.lang.Object","procedure_start_line":0,"file":"src/jvm/clojure/lang/LockingTransaction.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":266,"column_number":-1,"description":"call to void LockingTransaction.getReadPoint()"},{"level":1,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":77,"column_number":-1,"description":"access to `this.readPoint`"}],"key":"LockingTransaction.java|run|THREAD_SAFETY_VIOLATION","hash":"4d3839d0c5c2f45d61480fd13a18db88","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAADYAAAAEAAAAFgAAABCgsABNAP+SCSxzcmMvanZtL2Nsb2p1cmUvbGFuZy9Mb2NraW5nVHJhbnNhY3Rpb24uamF2YUA="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Read/Write race. Non-private method `LockingTransaction.run(...)` reads with synchronization from `this.info`. Potentially races with unsynchronized write in method `LockingTransaction.doEnsure(...)`.\n Reporting because this access may occur on a background thread.","severity":"WARNING","line":291,"column":-1,"procedure":"clojure.lang.LockingTransaction.run(java.util.concurrent.Callable):java.lang.Object","procedure_start_line":0,"file":"src/jvm/clojure/lang/LockingTransaction.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":291,"column_number":-1,"description":"<Read trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":291,"column_number":-1,"description":"access to `this.info`"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":460,"column_number":-1,"description":"<Write trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":460,"column_number":-1,"description":"call to Object LockingTransaction.blockAndBail(LockingTransaction$Info)"},{"level":1,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":163,"column_number":-1,"description":"call to void LockingTransaction.stop(int)"},{"level":2,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":92,"column_number":-1,"description":"access to `this.info`"}],"key":"LockingTransaction.java|run|THREAD_SAFETY_VIOLATION","hash":"5d50b9dd9f452aa00e26784527e1a667","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAGwAAAAIAAAALAAAACCgsAEBIwD/kgksc3JjL2p2bS9jbG9qdXJlL2xhbmcvTG9ja2luZ1RyYW5zYWN0aW9uLmphdmGgsABcAP+SCSxzcmMvanZtL2Nsb2p1cmUvbGFuZy9Mb2NraW5nVHJhbnNhY3Rpb24uamF2YUA="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Unprotected write. Non-private method `LockingTransaction.run(...)` writes to field `this.startTime` outside of synchronization.\n Reporting because this access may occur on a background thread.","severity":"WARNING","line":270,"column":-1,"procedure":"clojure.lang.LockingTransaction.run(java.util.concurrent.Callable):java.lang.Object","procedure_start_line":0,"file":"src/jvm/clojure/lang/LockingTransaction.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":270,"column_number":-1,"description":"access to `this.startTime`"}],"key":"LockingTransaction.java|run|THREAD_SAFETY_VIOLATION","hash":"b17809acfd2f3964bc6f3346b89a5478","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAADcAAAAEAAAAFgAAABCgsAEBDgD/kgksc3JjL2p2bS9jbG9qdXJlL2xhbmcvTG9ja2luZ1RyYW5zYWN0aW9uLmphdmFA"},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Read/Write race. Non-private method `LockingTransaction.stop(...)` reads with synchronization from `this.info`. Potentially races with unsynchronized write in method `LockingTransaction.doEnsure(...)`.\n Reporting because this access may occur on a background thread.","severity":"WARNING","line":89,"column":-1,"procedure":"clojure.lang.LockingTransaction.stop(int):void","procedure_start_line":0,"file":"src/jvm/clojure/lang/LockingTransaction.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":89,"column_number":-1,"description":"<Read trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":89,"column_number":-1,"description":"access to `this.info`"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":460,"column_number":-1,"description":"<Write trace>"},{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":460,"column_number":-1,"description":"call to Object LockingTransaction.blockAndBail(LockingTransaction$Info)"},{"level":1,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":163,"column_number":-1,"description":"call to void LockingTransaction.stop(int)"},{"level":2,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":92,"column_number":-1,"description":"access to `this.info`"}],"key":"LockingTransaction.java|stop|THREAD_SAFETY_VIOLATION","hash":"4e9f4dbc9d2e4e135c2ce0cdedad2943","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAGsAAAAIAAAALAAAACCgsABZAP+SCSxzcmMvanZtL2Nsb2p1cmUvbGFuZy9Mb2NraW5nVHJhbnNhY3Rpb24uamF2YaCwAFwA/5IJLHNyYy9qdm0vY2xvanVyZS9sYW5nL0xvY2tpbmdUcmFuc2FjdGlvbi5qYXZhQA=="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Unprotected write. Non-private method `LockingTransaction.stop(...)` writes to field `this.info` outside of synchronization.\n Reporting because this access may occur on a background thread.","severity":"WARNING","line":92,"column":-1,"procedure":"clojure.lang.LockingTransaction.stop(int):void","procedure_start_line":0,"file":"src/jvm/clojure/lang/LockingTransaction.java","bug_trace":[{"level":0,"filename":"src/jvm/clojure/lang/LockingTransaction.java","line_number":92,"column_number":-1,"description":"access to `this.info`"}],"key":"LockingTransaction.java|stop|THREAD_SAFETY_VIOLATION","hash":"39d194da3855f53a13c878c5e3b9cc6a","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAADYAAAAEAAAAFgAAABCgsABcAP+SCSxzcmMvanZtL2Nsb2p1cmUvbGFuZy9Mb2NraW5nVHJhbnNhY3Rpb24uamF2YUA="}]
